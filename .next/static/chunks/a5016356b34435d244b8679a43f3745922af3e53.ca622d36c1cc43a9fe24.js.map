{"version":3,"sources":["webpack:///./pages/register/wizard/user-address.js","webpack:///./components/Form/SelectFormGroup.js","webpack:///./pages/register/wizard/partials/address.js"],"names":["withAuth","api","handleSubmit","layoutProps","handleFormState","formData","setFormData","formDataHasProperties","hasOwnProperty","theme","useContext","ThemeContext","primaryColor","Color","colors","primary","hsl","string","requireds","IS_PRODUCTION","useState","loading","setLoading","country_id","address_1st_level","city","address_3rd_level","address","values","setValues","user","UserContext","error","setError","useEffect","_","console","log","JSON","stringify","address_1st_level_id","method","onSubmit","e","a","preventDefault","userData","email","post","response","data","status","request","handleInputChange","target","checked","name","value","type","color","onClick","disabled","style","marginLeft","SelectFormGroup","label","list","listMapValue","onChange","pluralLabel","FormGroup","Label","htmlFor","Select","id","required","length","toLowerCase","map","item","key","optionName","InvalidFeedback","argCountryId","braCountryId","chlCountryId","countries","setCountries","get","firstLevelLabel","firstLevelPluralLabel","firstLevelList","setFirstLevelList","parsedCountryId","parseInt","includes","params","then","cityLabel","thirdLevelLabel","className","Input"],"mappings":"o4BA0SeA,uBA/RS,SAAC,GAOnB,IANJC,EAMI,EANJA,IAEAC,GAII,EALJC,YAKI,EAJJD,cACAE,EAGI,EAHJA,gBACAC,EAEI,EAFJA,SACAC,EACI,EADJA,YAGMC,EAAwBF,EAASG,eAAe,eACjDH,EAASG,eAAe,sBACxBH,EAASG,eAAe,SACxBH,EAASG,eAAe,sBACxBH,EAASG,eAAe,WAEvBC,EAAQC,qBAAWC,KACnBC,EAAeC,IAAMJ,EAAMK,OAAOC,SACrCC,MACAC,SAEGC,EAAYC,IAbd,EAe0BC,oBAAS,GAAhCC,EAfH,KAeYC,EAfZ,OAiBwBF,mBAAS,CACnCG,WAAY,GACZC,kBAAmB,GACnBC,KAAM,GACNC,kBAAmB,GACnBC,QAAS,KALJC,EAjBH,KAiBWC,EAjBX,KAyBIC,EAASpB,qBAAWqB,KAApBD,KAzBJ,EA0BsBV,qBAAnBY,EA1BH,KA0BUC,EA1BV,KA6BJC,qBACE,SAAAC,GACML,IACFM,QAAQC,IAAI,0CAEZD,QAAQC,IAAR,wBAA6BC,KAAKC,UAAUT,GAA5C,UAEAM,QAAQC,IAAR,mCAAwCC,KAAKC,UAAUlC,GAAvD,UAEKE,GACHD,EAAY,EAAD,KACND,GADM,IAETsB,QAASG,EAAKH,QAAUG,EAAKH,QAAU,GACvCF,KAAMK,EAAKL,KAAOK,EAAKL,KAAO,GAC9BF,WAAYO,EAAKP,WAAaO,EAAKP,WAAa,GAChDC,kBAAmBM,EAAKU,qBACxBd,kBAAmBI,EAAKJ,qBAI5BU,QAAQC,IAAR,kCAAuCC,KAAKC,UAAUlC,GAAtD,aAIJ,CAACyB,IA2FH,OACE,UAAMW,OAAO,OAAOC,SA9DV,uCAAG,WAAMC,GAAN,mBAAAC,EAAA,6DACbD,EAAEE,iBAEFvB,GAAW,GAHE,SAMPwB,EAAW,CACbvB,WAAYlB,EAASkB,WACrBC,kBAAmBnB,EAASmB,kBAC5BC,KAAMpB,EAASoB,KACfC,kBAAmBrB,EAASqB,kBAC5BC,QAAStB,EAASsB,QAClBoB,MAAOjB,EAAKiB,OAZH,SAqCO9C,EAAI+C,KAAJ,iCAA2CF,GArClD,cA4CX5C,EAAa,EAAG4C,GA5CL,kDA8CP,KAAMG,UAAU,EACO,KAAMA,SAAvBC,EADU,EACVA,KACO,MAFG,EACJC,QAEZlB,EAASiB,KAEF,KAAME,QACfnB,EAAS,EAAD,KApDC,yBAyDXX,GAAW,GAzDA,6EAAH,sDA8DV,sCA+CeV,EAICA,EAkBDA,EAqDEA,EAKJA,OA9HX,+CA8CaA,EAICA,EAkBDA,EAqDEA,EAKJA,MA9HX,sDACE,8CA6CWA,EAICA,EAkBDA,EAqDEA,EAKJA,MA7HT,2BACE,gDA4CSA,EAICA,EAkBDA,EAqDEA,EAKJA,MA5HP,yBADF,kBACwD,EAAC,IAAD,MACtD,gDA2CSA,EAICA,EAkBDA,EAqDEA,EAKJA,MA3HP,uBAEF,+CAyCWA,EAICA,EAkBDA,EAqDEA,EAKJA,MAzHT,6EAIA,+CAqCWA,EAICA,EAkBDA,EAqDEA,EAKJA,MArHT,QACE,+CAoCSA,EAICA,EAkBDA,EAqDEA,EAKJA,MApHP,yBACE,EAAC,UAAD,CACEX,IAAKA,EACL+B,MAAOA,EACPqB,kBAxGc,SAAAV,GAAK,MACUA,EAAEW,OAAjCC,EADqB,EACrBA,QAASC,EADY,EACZA,KAAMC,EADM,EACNA,MAAOC,EADD,EACCA,KAa9BpD,EAAY,EAAD,KACND,GADM,kBAERmD,EACU,aAATE,IACIH,IACY,SAAVE,GAEEA,GAEJA,MAkFEpC,QAASA,EACTH,UAAWA,EACXW,UAAWA,EACXD,OAAQA,EACRvB,SAAUA,EACVC,YAAaA,MAInB,+CAsBWM,EAICA,EAkBDA,EAqDEA,EAKJA,MAtGT,aACE,+CAqBSA,EAICA,EAkBDA,EAqDEA,EAKJA,MArGP,cACE,+CAoBOA,EAICA,EAkBDA,EAqDEA,EAKJA,MApGL,gBACE,EAAC,IAAD,CAAQ+C,MAAM,UAAUC,QAAS,kBAAMxD,EAAgB,KAAvD,UAGA,EAAC,IAAD,CACEuD,MAAM,YACND,KAAK,SACLG,SAAUxC,EACVA,QAASA,EACTyC,MAAO,CAAEC,WAAY,SALvB,iBA/BV,gCA+CenD,EAICA,EAkBDA,EAqDEA,EAKJA,IA/Hb,+BA+CeA,EA/Cf,qDAmDgBA,EAnDhB,2NAqEeA,EArEf,m9BA0HiBA,EA1HjB,gDA+HaA,EA/Hb,uBAuIqC,I,2MCtQ1BoD,EA/BS,SAAC,GAAwG,IAAtGhC,EAAsG,EAAtGA,MAAOiC,EAA+F,EAA/FA,MAAOC,EAAwF,EAAxFA,KAAwF,IAAlFC,oBAAkF,MAAnE,KAAmE,EAA7D9C,EAA6D,EAA7DA,QAASmC,EAAoD,EAApDA,KAAMY,EAA8C,EAA9CA,SAAUC,EAAoC,EAApCA,YAAanD,EAAuB,EAAvBA,UAAWuC,EAAY,EAAZA,MACnH,OACE,EAACa,EAAA,EAAD,KACE,EAACC,EAAA,EAAD,CAAOC,QAAUhB,GAASS,GAC1B,EAACQ,EAAA,EAAD,CACEC,GAAKlB,EACLA,KAAOA,EACPY,SAAWA,EACXO,SAAWzD,EACXuC,MAAQA,GAELS,EAECA,EAAKU,OAAS,oBAChB,YAAQf,UAAQ,EAACJ,MAAM,IAAvB,iBAA0CQ,EAAMY,eAC9CX,EAAKY,KAAI,SAACC,EAAMC,GAChB,IAAMvB,EAAQU,EAAeY,EAAKZ,GAAgBY,EAC5CE,EAAad,EAAeY,EAAKvB,KAAOuB,EAC9C,OACE,YAAQC,IAAMA,EAAMvB,MAAQA,GAAUwB,OAI1C,YAAQpB,UAAQ,EAACJ,MAAM,IAAvB,qBAA8CY,GAX9C,YAAQR,UAAQ,EAACJ,MAAM,IAAvB,gBAcJ,EAACyB,EAAA,EAAD,CAAiBlD,MAAQA,EAAQX,QAAUA,EAAUmC,KAAOA,M,6lBCwKnDxD,uBA/LC,SAAC,GAUX,IATJC,EASI,EATJA,IACA+B,EAQI,EARJA,MACAqB,EAOI,EAPJA,kBAEAhC,GAKI,EANJQ,UAMI,EALJR,SACAH,EAII,EAJJA,UAEAb,GAEI,EAHJuB,OAGI,EAFJvB,UACAC,EACI,EADJA,YAGM6E,EAAe,GACfC,EAAe,GACfC,EAAe,GAJjB,EAsB8BjE,qBAA3BkE,EAtBH,KAsBcC,EAtBd,OAuB0CnE,qBAvB1C,UAyBJc,qBAAU,SAAAC,IACR,uCAAC,WAAMA,GAAN,iBAAAS,EAAA,sEACwB3C,EAAIuF,IAAI,aADhC,gBACStC,EADT,EACSA,KACRqC,EAAarC,GAFd,2CAAD,0DAIC,IAEH,IASMuC,EAAkBpF,EAASkB,YAAc4D,EAC3C,YACA9E,EAASkB,YAAc6D,EACrB,SACA/E,EAASkB,YAAc8D,EACrB,YACA,QAEFK,EAAwBrF,EAASkB,YAAc4D,EACjD,aACA9E,EAASkB,YAAc6D,EACrB,UACA/E,EAASkB,YAAc8D,EACrB,WACA,SAvDJ,EAyDwCjE,qBAArCuE,EAzDH,KAyDmBC,EAzDnB,KA2DJ1D,qBACE,SAAAC,GACE,IAAM0D,EAAkBC,SAASzF,EAASkB,YAEtC,CACF4D,EACAC,EACAC,GACAU,SAASF,GACT5F,EAAIuF,IAAI,qBAAsB,CAC5BQ,OAAQ,CACNzE,WAAYsE,KAEbI,MAAK,SAAA/C,GACN0C,EAAkB1C,EAAKA,SAIzB0C,EAAkB,QAItB,CACEvF,EAASkB,aAIb,IAAM2E,EAAY7F,EAASkB,YAAc6D,EACrC,SACA/E,EAASkB,YAAc8D,EACrB,YACA,SAEAc,EACN9F,EAASkB,YAAc8D,EAAe,kBAAoB,WAE1D,OACE,SAAKe,UAAU,WAEb,EAAC,EAAD,CACEpE,MAAOA,EACPiC,MAAM,UACN5C,QAASA,EACT6C,KAAMoB,EACNnB,aAAa,KACbX,KAAK,aACLY,SAzEsB,SAAAzB,GAAK,QACPA,EAAEW,OAAlBE,EADuB,EACvBA,KAAMC,EADiB,EACjBA,MACdnD,EAAY,EAAD,KACND,GADM,uBAERmD,EAAOC,GAFC,kCAGU,IAHV,MAwEPY,YAAY,YACZnD,UAAWA,EACXuC,MAAOpD,EAASkB,aAIjB,CAAC4D,EAAcC,EAAcC,GAC3BP,KAAI,SAAAJ,GAAE,OAAIA,EAAK,MACfqB,SAAS1F,EAASkB,aACnB,EAAC,EAAD,CACES,MAAOA,EACPiC,MAAOwB,EACPpE,QAASA,EACT6C,KAAMyB,EACNxB,aAAa,KACbX,KAAK,oBACLY,SAAUf,EACVgB,YAAaqB,EACbxE,UAAWA,EACXuC,MAAOpD,EAASmB,oBAKnB,CAAC4D,EAAcC,GAAgBP,KAAI,SAAAJ,GAAE,OAAIA,EAAK,MAAIqB,SAAS1F,EAASkB,aACnE,EAAC+C,EAAA,EAAD,KACE,EAACC,EAAA,EAAD,CAAOC,QAAQ,QAAQ0B,GACvB,EAACG,EAAA,EAAD,CACE3B,GAAG,OACHlB,KAAK,OACLY,SAAUf,EACVsB,SAAUzD,EACVwC,KAAK,OACLD,MAAOpD,EAASoB,OAElB,EAACyD,EAAA,EAAD,CAAiBlD,MAAOA,EAAOX,QAASA,EAASmC,KAAK,UAKzD,CAAC6B,GAAcP,KAAI,SAAAJ,GAAE,OAAIA,EAAK,MAAIqB,SAAS1F,EAASkB,aACnD,EAAC+C,EAAA,EAAD,KACE,EAACC,EAAA,EAAD,CAAOC,QAAQ,qBAAqB2B,GACpC,EAACE,EAAA,EAAD,CACE3B,GAAG,oBACHlB,KAAK,oBACLY,SAAUf,EACVsB,SAAUzD,EACVwC,KAAK,OACLD,MAAOpD,EAASqB,oBAElB,EAACwD,EAAA,EAAD,CACElD,MAAOA,EACPX,QAASA,EACTmC,KAAK,uBAKX,EAACc,EAAA,EAAD,KACE,EAACC,EAAA,EAAD,CAAOC,QAAQ,WAAf,gBACA,EAAC6B,EAAA,EAAD,CACE3B,GAAG,UACHlB,KAAK,UACLY,SAAUf,EACVsB,SAAUzD,EACVwC,KAAK,OACLD,MAAOpD,EAASsB,UAElB,EAACuD,EAAA,EAAD,CAAiBlD,MAAOA,EAAOX,QAASA,EAASmC,KAAK,iBAM7B","file":"static/chunks/a5016356b34435d244b8679a43f3745922af3e53.ca622d36c1cc43a9fe24.js","sourcesContent":["// import sleep from 'sleep-promise'\nimport React, { useContext, useEffect, useState } from 'react'\nimport withAuth from '~/components/withAuth'\nimport { IS_PRODUCTION } from \"~/constants/constants\";\nimport UserContext from \"~/contexts/UserContext\";\nimport Address from \"~/pages/register/wizard/partials/address\"\nimport Button from \"~/components/button\";\nimport { ThemeContext } from \"styled-components\";\nimport Color from \"color\";\nimport NameProject from '~/components/NameProject/index'\n\nconst UserAddressForm = ({\n  api,\n  layoutProps,\n  handleSubmit,\n  handleFormState,\n  formData,\n  setFormData\n}) => {\n\n  const formDataHasProperties = formData.hasOwnProperty(\"country_id\")\n    && formData.hasOwnProperty(\"address_1st_level\")\n    && formData.hasOwnProperty(\"city\")\n    && formData.hasOwnProperty(\"address_3rd_level\")\n    && formData.hasOwnProperty(\"address\");\n\n  const theme = useContext(ThemeContext);\n  const primaryColor = Color(theme.colors.primary)\n    .hsl()\n    .string();\n\n  const requireds = IS_PRODUCTION;\n\n  const [loading, setLoading] = useState(false);\n\n  const [values, setValues] = useState({\n    country_id: \"\",\n    address_1st_level: \"\",\n    city: \"\",\n    address_3rd_level: \"\",\n    address: \"\"\n  });\n\n  const { user } = useContext(UserContext);\n  const [error, setError] = useState();\n\n  /* fill user form */\n  useEffect(\n    _ => {\n      if (user) {\n        console.log(\"Primeiro useEffect (componentDidMount)\")\n\n        console.log(`\\n\\n user --  ${JSON.stringify(user)} \\n\\n`);\n\n        console.log(`\\n\\n formData before set ${JSON.stringify(formData)} \\n\\n`);\n\n        if (!formDataHasProperties) {\n          setFormData({\n            ...formData,\n            address: user.address ? user.address : \"\",\n            city: user.city ? user.city : \"\",\n            country_id: user.country_id ? user.country_id : \"\",\n            address_1st_level: user.address_1st_level_id,\n            address_3rd_level: user.address_3rd_level\n          });\n        }\n\n        console.log(`\\n\\n formData after set ${JSON.stringify(formData)} \\n\\n`);\n\n      }\n    },\n    [user]\n  );\n\n  const handleInputChange = e => {\n    const { checked, name, value, type } = e.target;\n    // setValues({\n    //   ...values,\n    //   [name]:\n    //     type === \"checkbox\"\n    //       ? checked\n    //         ? value === \"true\"\n    //           ? true\n    //           : value\n    //         : false\n    //       : value\n    // });\n\n    setFormData({\n      ...formData,\n      [name]:\n        type === \"checkbox\"\n          ? checked\n            ? value === \"true\"\n              ? true\n              : value\n            : false\n          : value\n    });\n  };\n\n  const submit = async e => {\n    e.preventDefault();\n\n    setLoading(true);\n\n    try {\n      let userData = {\n        country_id: formData.country_id,\n        address_1st_level: formData.address_1st_level,\n        city: formData.city,\n        address_3rd_level: formData.address_3rd_level,\n        address: formData.address,\n        email: user.email\n      };\n\n      // let userData;\n\n      // if (formDataHasProperties) {\n      //   userData = {\n      //     country_id: formData.country_id,\n      //     address_1st_level: formData.address_1st_level,\n      //     city: formData.city,\n      //     address_3rd_level: formData.address_3rd_level,\n      //     address: formData.address,\n      //     email: user.email\n      //   };\n      // } else {\n      //   userData = {\n      //     country_id: values.country_id,\n      //     address_1st_level: values.address_1st_level,\n      //     city: values.city,\n      //     address_3rd_level: values.address_3rd_level,\n      //     address: values.address,\n      //     email: user.email\n      //   };\n      // }\n\n      const res = await api.post(`register/complete-user-address`, userData);\n\n      // setFormData({...values});\n      // setFormData({...formData});\n\n      // console.log(`\\n\\n formData ${JSON.stringify(formData)}`);\n\n      handleSubmit(2, userData);\n    } catch (error) {\n      if (error.response) {\n        const { data, status } = error.response;\n        if (status === 422) {\n          setError(data);\n        }\n      } else if (error.request) {\n        setError(error);\n      } else {\n        setError(error);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <form method=\"post\" onSubmit={submit}>\n      <div className=\"register-confirm container text-center responsive\">\n        <h2 className=\"card-title text-center\">\n          <span className={\"text-primary\"}>¡</span>Sé parte de {<NameProject />}\n          <span className={\"text-primary\"}>!</span>\n        </h2>\n        <div className=\"card-subtitle d-inline-block\">\n          Conéctate sin tener que salir de casa\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-md-6 aling-items\">\n            <Address\n              api={api}\n              error={error}\n              handleInputChange={handleInputChange}\n              loading={loading}\n              requireds={requireds}\n              setValues={setValues}\n              values={values}\n              formData={formData}\n              setFormData={setFormData}\n            />\n          </div>\n        </div>\n        <div className=\"row mt-3\">\n          <div className=\"col-md-12\">\n            <div className=\"text-center\">\n              <Button color=\"primary\" onClick={() => handleFormState(1)}>\n                Volver\n              </Button>\n              <Button\n                color=\"secondary\"\n                type=\"submit\"\n                disabled={loading}\n                loading={loading}\n                style={{ marginLeft: \"20px\" }}\n              >\n                Siguiente\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <style jsx global={true}>{`\n\n        .text-primary {\n          color: ${primaryColor} !important;\n        }\n\n        strong.text-primary {\n           color: ${primaryColor} !important;\n        }\n\n\n        h2.card-title {\n          font-weight: normal;\n          color: #000;\n          margin-bottom: 1em;\n          font-size: 1.7em;\n        }\n        div.card-subtitle {\n          font-size: 1.1em;\n          font-weight: 500;\n          margin-bottom: 2.5em;\n          max-width: 380px;\n        }\n\n        .text-primary {\n          color: ${primaryColor} !important;\n        }\n\n        .register-confirm {\n          color: #666666;\n        }\n\n        @media(min-width:765px){\n          .aling-items {\n            margin-left: 25%;\n          }\n        }\n\n        @media(max-width: 765px) {\n          .responsive{\n            padding: 0px;\n            display: flex;\n            flex-wrap: wrap;\n            justify-content: center;\n          }\n\n          .card-body{\n            background-image: url()!important;\n          }\n\n          label {\n            display: inline-block;\n            margin-bottom: .5rem;\n            text-align: center;\n          }\n\n          .justify-content-end {\n            display:flex;\n            justify-content:center!important;\n          }\n\n          form{\n            padding: 0px!important;\n          }\n\n          .row {\n            display: -ms-flexbox;\n            display: flex;\n            -ms-flex-wrap: wrap;\n            margin-right: 0px;\n            margin-left: 0px;\n          }\n\n          .col-8 {\n            max-width: 100%!important;\n          }\n\n          .text-primary {\n            color: ${primaryColor} !important;\n          }\n        }\n\n      .text-primary {\n        color: ${primaryColor} !important;\n      }\n\n      `}</style>\n    </form>\n  );\n};\n\nexport default withAuth(UserAddressForm, true);\n","import FormGroup from \"~/components/layout/AuthModal/FormGroup\";\nimport Label from \"~/components/Form/Label\";\nimport Select from \"~/components/Select/Select\";\nimport InvalidFeedback from \"~/components/Form/InvalidFeedback\";\n\nconst SelectFormGroup = ({ error, label, list, listMapValue = null, loading, name, onChange, pluralLabel, requireds, value }) => {\n  return (\n    <FormGroup>\n      <Label htmlFor={ name }>{ label }</Label>\n      <Select\n        id={ name }\n        name={ name }\n        onChange={ onChange }\n        required={ requireds }\n        value={ value }\n      >\n        { !list ? (\n          <option disabled value=\"\">Cargando...</option>\n        ) : list.length ? <>\n          <option disabled value=\"\">Selecciona tu { label.toLowerCase() }</option>\n          { list.map((item, key) => {\n            const value = listMapValue ? item[listMapValue] : item\n            const optionName = listMapValue ? item.name : item\n            return (\n              <option key={ key } value={ value }>{ optionName }</option>\n            )\n          }) }\n        </> : (\n          <option disabled value=\"\">Incapaz de cargar { pluralLabel }</option>\n        ) }\n      </Select>\n      <InvalidFeedback error={ error } loading={ loading } name={ name }/>\n    </FormGroup>\n  )\n}\n\nexport default SelectFormGroup\n","import FormGroup from \"~/components/layout/AuthModal/FormGroup\";\nimport Label from \"~/components/Form/Label\";\nimport Input from \"~/components/layout/AuthModal/Input\";\nimport { useEffect, useState } from \"react\";\nimport withAuth from \"~/components/withAuth\";\nimport SelectFormGroup from \"~/components/Form/SelectFormGroup\";\nimport InvalidFeedback from \"~/components/Form/InvalidFeedback\";\n\nconst Address = ({\n  api,\n  error,\n  handleInputChange,\n  setValues,\n  loading,\n  requireds,\n  values,\n  formData,\n  setFormData\n}) => {\n  // TODO: FIX hardcoded country configuration.\n  const argCountryId = 11;\n  const braCountryId = 32;\n  const chlCountryId = 48;\n\n  // Isso NÂO É uma boa prática. Deve ser mudado. Porém a estrutura de estado do app impede outra implementação.\n  // let formDataHasProperties = formData.hasOwnProperty(\"country_id\")\n  //                             && formData.hasOwnProperty(\"address_1st_level\")\n  //                             && formData.hasOwnProperty(\"city\")\n  //                             && formData.hasOwnProperty(\"address_3rd_level\")\n  //                             && formData.hasOwnProperty(\"address\");\n\n  // const {\n  //   country_id: countryId,\n  //   address_1st_level,\n  //   city,\n  //   address_3rd_level,\n  //   address\n  // } = formData;\n  // } = formDataHasProperties ? formData : values;\n\n  const [countries, setCountries] = useState();\n  const [selectedCountry, setSelectedCountry] = useState();\n\n  useEffect(_ => {\n    (async _ => {\n      const { data } = await api.get(\"countries\");\n      setCountries(data);\n    })();\n  }, []);\n\n  const handleCountryChange = e => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n      address_1st_level: \"\"\n    });\n  };\n\n  const firstLevelLabel = formData.country_id == argCountryId\n    ? \"Provincia\"\n    : formData.country_id == braCountryId\n      ? \"Estado\"\n      : formData.country_id == chlCountryId\n        ? \"Región\"\n        : \"State\";\n\n  const firstLevelPluralLabel = formData.country_id == argCountryId\n    ? \"Provincias\"\n    : formData.country_id == braCountryId\n      ? \"Estados\"\n      : formData.country_id == chlCountryId\n        ? \"Regiones\"\n        : \"States\";\n\n  const [firstLevelList, setFirstLevelList] = useState();\n\n  useEffect(\n    _ => {\n      const parsedCountryId = parseInt(formData.country_id);\n      // debugger;\n      if ([\n        argCountryId,\n        braCountryId,\n        chlCountryId\n      ].includes(parsedCountryId)) {\n        api.get(\"address-1st-levels\", {\n          params: {\n            country_id: parsedCountryId\n          }\n        }).then(data => {\n          setFirstLevelList(data.data);\n        });\n\n      } else {\n        setFirstLevelList(null);\n      }\n\n    },\n    [\n      formData.country_id\n    ]\n  );\n\n  const cityLabel = formData.country_id == braCountryId\n    ? \"Cidade\"\n    : formData.country_id == chlCountryId\n      ? \"Provincia\"\n      : \"Ciudad\";\n\n  const thirdLevelLabel =\n  formData.country_id == chlCountryId ? \"Ciudad / Comuna\" : \"District\";\n\n  return (\n    <div className=\"address\">\n      {/* country */}\n      <SelectFormGroup\n        error={error}\n        label=\"País\"\n        loading={loading}\n        list={countries}\n        listMapValue=\"id\"\n        name=\"country_id\"\n        onChange={handleCountryChange}\n        pluralLabel=\"Países\"\n        requireds={requireds}\n        value={formData.country_id}\n      />\n\n      {/* 1st level */}\n      {[argCountryId, braCountryId, chlCountryId]\n        .map(id => id + \"\")\n        .includes(formData.country_id) && (\n        <SelectFormGroup\n          error={error}\n          label={firstLevelLabel}\n          loading={loading}\n          list={firstLevelList}\n          listMapValue=\"id\"\n          name=\"address_1st_level\"\n          onChange={handleInputChange}\n          pluralLabel={firstLevelPluralLabel}\n          requireds={requireds}\n          value={formData.address_1st_level}\n        />\n      )}\n\n      {/* city */}\n      {[braCountryId, chlCountryId].  map(id => id + \"\").includes(formData.country_id) && (\n        <FormGroup>\n          <Label htmlFor=\"city\">{cityLabel}</Label>\n          <Input\n            id=\"city\"\n            name=\"city\"\n            onChange={handleInputChange}\n            required={requireds}\n            type=\"text\"\n            value={formData.city}\n          />\n          <InvalidFeedback error={error} loading={loading} name=\"city\" />\n        </FormGroup>\n      )}\n\n      {/* 3rd level */}\n      {[chlCountryId].map(id => id + \"\").includes(formData.country_id) && (\n        <FormGroup>\n          <Label htmlFor=\"address_3rd_level\">{thirdLevelLabel}</Label>\n          <Input\n            id=\"address_3rd_level\"\n            name=\"address_3rd_level\"\n            onChange={handleInputChange}\n            required={requireds}\n            type=\"text\"\n            value={formData.address_3rd_level}\n          />\n          <InvalidFeedback\n            error={error}\n            loading={loading}\n            name=\"address_3rd_level\"\n          />\n        </FormGroup>\n      )}\n\n      <FormGroup>\n        <Label htmlFor=\"address\">Dirección</Label>\n        <Input\n          id=\"address\"\n          name=\"address\"\n          onChange={handleInputChange}\n          required={requireds}\n          type=\"text\"\n          value={formData.address}\n        />\n        <InvalidFeedback error={error} loading={loading} name=\"address\" />\n      </FormGroup>\n    </div>\n  );\n};\n\nexport default withAuth(Address, true);\n"],"sourceRoot":""}