{"version":3,"sources":["webpack:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?8dc2","webpack:///./components/layout/FormData/index.js","webpack:///./components/form-user.js","webpack:///./pages/user/data.js"],"names":["window","__NEXT_P","push","StyleFormData","styled","div","DataForm","isSubmitting","countries","genders","button","cityLabel","CONFIG","lang","className","FormGroup","name","label","list","type","disabled","loading","yupSchema","nullable3CharMinString","Yup","trim","nullable","required","min","max","document","address","city","country","oneOf","map","c","id","gender","g","UserForm","handleSubmit","initialValues","useState","setGenders","setCountries","useEffect","_","a","api","get","data","validationSchema","onSubmit","component","props","withAuth","layoutProps","user","updateUser","gender_id","country_id","fields","actions","msg","post","res","JSON","stringify","success","message","response","error","nookies","set","path","Router","Layout","appName","CardLogoHeader"],"mappings":"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","file":"static/zmNvSS4XD0Lz-EAFId868/pages/user/data.js","sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/user/data\",\n      function () {\n        return require(\"private-next-pages/user/data.js\");\n      }\n    ]);\n  ","\n\n\nimport styled from 'styled-components'\nexport const StyleFormData = styled.div`\n\n\n    padding:20px;\n\n     label {\n       color: var(--black);\n     }\n     .row{\n       width:100%;\n\n     }\n\n     hr {\n       background:var(--black);\n     }\n\n     h4 {\n       color:var(--primary);\n       text-align:center;\n     }\n\n     h3 {\n      color:var(--primary);\n      text-align:center;\n\n     }\n\n     .aling-button {\n       display: flex;\n       justify-content: center;\n       width: 100%;\n    }\n\n     .form-group {\n       width:100%;\n     }\n\n     .btn {\n      background-color: var(--primary);\n      height: 34px;\n      padding: 0px!important;\n      font-size: 15px;\n      width: 150px;\n    }\n\n\n     h1 {\n        display: flex;\n        justify-content: center;\n        color: black;\n        padding:10px;\n        text-align: center;\n        }\n\n\n    @media(max-width:765px) {\n\n      .row {\n            display: contents;\n      }\n\n      .btn {\n        padding: 7px;\n\n      }\n\n\n      .aling-button {\n        display: flex;\n       justify-content: center;\n      }\n\n    }\n\n  }\n\n`\n\n\n\n\n","// react\nimport { useEffect, useState } from 'react'\nimport { Formik, Form } from 'formik'\nimport * as Yup from 'yup'\n\n// components\nimport { FkSelect, FkInput } from '~/components/Formik/fields'\nimport FormGroup from '~/components/layout/AuthModal/FormGroup'\nimport Button from '~/components/button'\nimport { CONFIG } from '~/config'\nimport api from '~/services/api'\nimport { StyleFormData } from '~/components/layout/FormData/index'\n\n\n\nconst UserForm = ({ handleSubmit, initialValues, button }) => {\n  const [genders, setGenders] = useState([])\n  const [countries, setCountries] = useState([])\n\n  /* get genders */\n  useEffect(_ => {\n    (async _ => {\n      const { data } = await api().get('genders')\n      setGenders(data)\n    })()\n  }, [])\n\n  /* get countries */\n  useEffect(_ => {\n    (async _ => {\n      const { data } = await api().get('countries')\n      setCountries(data)\n    })()\n  }, [])\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={\n        yupSchema(countries, genders)\n      }\n      onSubmit={handleSubmit}\n      component={props => <DataForm {...{ countries, genders, button, ...props }} />}\n    />\n  )\n}\n\nconst DataForm = ({ isSubmitting, countries, genders, button }) => {\n\n  const cityLabel = CONFIG.lang === 'es-CL' ? 'Provincia' : 'Ciudad'\n\n  return (\n    <Form>\n      <StyleFormData>\n        <h1 className=\"h2\">Datos Personales</h1>\n        <hr />\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <div className=\"data\">\n              <h4>Tus datos</h4>\n              <FormGroup>\n                <FkInput name=\"name\" label=\"Nombre Completo\" />\n              </FormGroup>\n              <FormGroup>\n                <FkSelect name=\"gender\" label=\"Género\" list={genders} />\n              </FormGroup>\n              <FormGroup>\n                <FkInput name=\"document\" label=\"Documento\" />\n              </FormGroup>\n            </div>\n          </div>\n\n          <div className=\"col-md-6\">\n            <div className=\"localization\">\n              <h3 className=\"h3\">Ubicación</h3>\n              <FormGroup>\n                <FkSelect name=\"country\" label=\"País\" list={countries} />\n              </FormGroup>\n              <FormGroup>\n                <FkInput name=\"city\" label={cityLabel} />\n              </FormGroup>\n              <FormGroup>\n                <FkInput name=\"address\" label=\"Dirección\" />\n              </FormGroup>\n            </div>\n          </div>\n        </div>\n\n        {button && <div className=\"row align-items-center\">\n          <div className=\"aling-button\">\n            <Button type=\"submit\" disabled={isSubmitting} loading={isSubmitting}>\n              Guardar cambios\n          </Button>\n          </div>\n        </div>}\n      </StyleFormData>\n    </Form>\n\n  )\n}\n\n// create Yup validation Schema\nconst yupSchema = (countries, genders) => {\n  const nullable3CharMinString = Yup.string()\n    .trim().nullable()\n    .required('Obligatorio')\n    .min(3, 'Debe tener 3 caracteres o más.')\n\n  return Yup.object({\n    name: nullable3CharMinString\n      .max(25, 'Debe tener 25 caracteres o menos'),\n    document: nullable3CharMinString\n      .max(20, 'Debe tener 20 caracteres o menos'),\n    address: nullable3CharMinString\n      .max(80, 'Debe tener 80 caracteres o menos'),\n    city: nullable3CharMinString\n      .max(20, 'Debe tener 20 caracteres o menos'),\n    country: Yup.number().nullable()\n      .oneOf(countries.map(c => c.id), \"País inválido\")\n      .required('Obligatorio'),\n    gender: Yup.number().nullable()\n      .oneOf(genders.map(g => g.id), \"Género inválido\")\n      .required('Obligatorio'),\n  })\n}\n\nexport default UserForm\n","// next\nimport Router from 'next/router'\nimport Head from 'next/head'\n\n// react\nimport nookies from 'nookies'\n\n//components\nimport Layout from '~/components/layout/Layout'\nimport UserForm from '~/components/form-user'\nimport withAuth from '~/components/withAuth'\nimport api from '~/services/api'\nimport { CONFIG } from '~/config'\nimport CardLogoHeader from '~/components/CardLogoHeader/index'\n\nconst userDataPage = ({ layoutProps, user, updateUser }) => {\n\n  const initialValues = (({ gender_id: gender, country_id: country, ...data }) => {\n    return { gender, country, ...data }\n  })(user)\n\n  const handleSubmit = async (fields, actions) => {\n    var msg = ''\n\n    try {\n      const res = await api().post(`user/${user.id}`, fields)\n      updateUser(res.data)\n      msg = JSON.stringify({ success: \"Cambio de datos completo.\" })\n\n    } catch (error) {\n      var { message } = error.message ? error : error.response ? error.response.data : ''\n      msg = JSON.stringify({ error: \"An Error Occured while updating: \" + message })\n\n    } finally {\n      nookies.set({}, 'flash_message', msg, { path: '/' })\n      Router.push('/user/account')\n    }\n  }\n\n  return (\n    <Layout {...layoutProps}>\n      <Head>\n        <title>Mi Cuenta &lt; {CONFIG.appName}</title>\n      </Head>\n      <CardLogoHeader>\n        {/* <div className=\"row\">\n          <div className=\"col-xl-8 offset-xl-2\"> */}\n\n        {user &&\n          <UserForm {...{ handleSubmit, initialValues }} button />\n        }\n        {/* </div>\n        </div> */}\n      </CardLogoHeader>\n      <style jsx>{`\n        // .rgpage {\n        //   padding-top: 40px;\n        //   padding-bottom: 120px;\n        // }\n        // .h2 {\n        //   margin-bottom: 10px;\n        // }\n        // :global(.h3) {\n        //   font-size: 20px;\n        //   font-weight: bold;\n        //   margin-bottom: 10px;\n        // }\n        // hr {\n        //   margin-top: 25px;\n        //   margin-bottom: 15px;\n        //   background-color: white;\n        // }\n      `}</style>\n    </Layout>\n  );\n}\n\nexport default withAuth(userDataPage)\n"],"sourceRoot":""}