{"version":3,"sources":["webpack:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?e6eb","webpack:///./components/layout/changeEmail/index.js","webpack:///./pages/user/changeEmail.js"],"names":["window","__NEXT_P","push","StyleForm","styled","div","DataForm","isSubmitting","CardLogoHeader","className","class","style","width","FormGroup","name","label","type","disabled","padding","loading","getYupSchema","_","nullable3CharMinString","Yup","trim","nullable","required","min","email","withAuth","layoutProps","user","updateUser","handleSubmit","fields","actions","a","msg","api","post","res","data","JSON","stringify","success","message","response","console","table","error","nookies","set","path","Router","Layout","initialValues","oldEmail","validationSchema","onSubmit","component"],"mappings":"gFACKA,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,oBACA,WACE,OAAO,EAAQ,Y,iRCAVC,E,UAAYC,EAAOC,IAAV,yEAAGD,CAAH,qd,oBCgEhBE,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAH,OAAsB,EAAC,IAAD,KAIrC,EAACC,EAAA,EAAD,KACE,EAACL,EAAD,KACE,QAAIM,UAAU,MAAd,iBACA,SAAKC,MAAM,UACT,SAAKD,UAAU,OACb,SAAKE,MAAO,CAAEC,MAAO,SACnB,EAACC,EAAA,EAAD,CAAWJ,UAAU,cACnB,EAAC,IAAD,CAASK,KAAK,WAAWC,MAAM,eAAeC,KAAK,QAAQC,UAAQ,QAK3E,SAAKR,UAAU,kBACb,SAAKA,UAAU,eACb,EAACI,EAAA,EAAD,CAAWJ,UAAU,cACnB,EAAC,IAAD,CAASK,KAAK,QAAQC,MAAM,cAAcC,KAAK,YAGnD,SAAKL,MAAO,CAAEO,QAAS,UACrB,EAAC,IAAD,CAAQF,KAAK,SAASC,SAAUV,EAAcY,QAASZ,GAAvD,iBASJa,EAAe,SAAAC,GACnB,IAAMC,EAAyBC,MAC5BC,OAAOC,WACPC,SAAS,eACTC,IAAI,EAAG,qCAEV,OAAOJ,IAAW,CAChBK,MAAON,EACJM,MAAM,yBAIEC,uBA3FS,SAAC,GAAsC,IA6BhD,EA7BYC,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WAEtCC,EAAY,uCAAG,WAAOC,EAAQC,GAAf,qBAAAC,EAAA,6DACfC,EAAM,GADS,kBAICC,cAAMC,KAAK,QAASL,GAJrB,OAIXM,EAJW,OAKjBR,EAAWQ,EAAIC,MACfJ,EAAMK,KAAKC,UAAU,CAAEC,QAAS,yDANf,kDASC,KAAMC,QAAN,KAAwB,KAAMC,SAAW,KAAMA,SAASL,KAAO,GAA3EI,EATW,EASXA,QACNE,QAAQC,MAAR,MACAX,EAAMK,KAAKC,UAAU,CAAEM,MAAO,oCAAsCJ,IAXnD,yBAajBK,IAAQC,IAAI,GAAI,gBAAiBd,EAAK,CAAEe,KAAM,MAC9CC,IAAOnD,KAAK,iBAdK,4EAAH,wDAkBlB,OACE,EAACoD,EAAA,EAAWxB,EAGV,SAAKrB,UAAU,UAEZsB,GACC,EAAC,IAAD,CACEwB,eACG,EAEExB,EADM,CAAEyB,SADe,EAAtB5B,MACiBA,MAAO,KAG9B6B,iBAAkBrC,IAClBsC,SAAUzB,EACV0B,UAAWrD,W","file":"static/oWCioDTqjRByfmKTo0Byb/pages/user/changeEmail.js","sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/user/changeEmail\",\n      function () {\n        return require(\"private-next-pages/user/changeEmail.js\");\n      }\n    ]);\n  ","\n\n\nimport styled from 'styled-components'\nexport const StyleForm = styled.div`\n\n\n    padding:20px;\n\n     label {\n       color: var(--black);\n     }\n     .row {\n       margin-top: 25px;\n     }\n\n     .btn {\n      background-color: --var(primary);\n      height: 34px;\n      padding: 0px!important;\n      font-size: 15px;\n      width: 150px;\n    }\n\n    .input-aling {\n     width: 52%;\n    }\n    .row-aling {\n      justify-content:  space-between;\n    }\n\n\n     h1 {\n        display: flex;\n        justify-content: center;\n        color: black;\n        padding: 0px 0px 20px 0px;\n     }\n\n     .painel {\n        width: 50%;\n     }\n\n    @media(max-width:765px) {\n\n      .painel {\n      width: 100%;\n      justify-content: center;\n      display: flex;\n      }\n\n      .row-aling {\n      justify-content:center\n      }\n      .input-aling {\n         width: 100%;\n\n      }\n\n\n    }\n\n\n    }\n\n\n\n`\n\n\n\n\n","// nextjs imports\nimport Router from 'next/router'\nimport Head from 'next/head'\n\n// react imports\nimport { Formik, Form } from 'formik'\nimport * as Yup from 'yup'\n\nimport nookies from 'nookies'\n\n// app imports\nimport FormGroup from '~/components/layout/AuthModal/FormGroup'\nimport withAuth from '~/components/withAuth'\nimport { FkInput } from '~/components/Formik/fields'\nimport Layout from '~/components/layout/Layout'\nimport Button from '~/components/button'\nimport api from '~/services/api'\nimport { CONFIG } from '~/config'\nimport CardLogoHeader from '~/components/CardLogoHeader/index'\nimport { StyleForm } from '~/components/layout/changeEmail/index'\n\nconst changeEmailPage = ({ layoutProps, user, updateUser }) => {\n\n  const handleSubmit = async (fields, actions) => {\n    var msg = ''\n\n    try {\n      const res = await api().post('email', fields)\n      updateUser(res.data)\n      msg = JSON.stringify({ success: \"Acceda al correo electr칩nico para confirmaci칩n\" })\n\n    } catch (error) {\n      var { message } = error.message ? error : error.response ? error.response.data : ''\n      console.table(error);\n      msg = JSON.stringify({ error: \"An Error Occured while updating: \" + message })\n    } finally {\n      nookies.set({}, 'flash_message', msg, { path: '/' })\n      Router.push('/user/account')\n    }\n  }\n\n  return (\n    <Layout {...layoutProps}>\n\n\n      <div className=\"detail\">\n\n        {user &&\n          <Formik\n            initialValues={\n              (({ email: oldEmail }) => {\n                return { oldEmail, email: '' }\n              })(user)\n            }\n            validationSchema={getYupSchema()}\n            onSubmit={handleSubmit}\n            component={DataForm}\n          />\n        }\n      </div>\n\n\n    </Layout>\n  );\n}\n\n\n\nconst DataForm = ({ isSubmitting }) => <Form>\n\n\n\n  <CardLogoHeader>\n    <StyleForm>\n      <h1 className=\"h2\">Cambiar Email</h1>\n      <div class=\"painel\">\n        <div className=\"row\">\n          <div style={{ width: \"100%\" }}>\n            <FormGroup className=\"form-input\">\n              <FkInput name=\"oldEmail\" label=\"Email Actual\" type=\"email\" disabled />\n            </FormGroup>\n          </div>\n        </div>\n      </div>\n      <div className=\"row row-aling \" >\n        <div className=\"input-aling\">\n          <FormGroup className=\"form-input\">\n            <FkInput name=\"email\" label=\"Nuevo Email\" type=\"email\" />\n          </FormGroup>\n        </div>\n        <div style={{ padding: \" 20px\" }} >\n          <Button type=\"submit\" disabled={isSubmitting} loading={isSubmitting}>\n            Aceptar\n      </Button>\n        </div>\n      </div>\n    </StyleForm>\n  </CardLogoHeader >\n</Form >\n// create Yup validation Schema\nconst getYupSchema = _ => {\n  const nullable3CharMinString = Yup.string()\n    .trim().nullable()\n    .required('Obligatorio')\n    .min(3, 'Debe tener 3 caracteres o m치s.')\n\n  return Yup.object({\n    email: nullable3CharMinString\n      .email('Correo inv치lido'),\n  })\n}\n\nexport default withAuth(changeEmailPage)\n"],"sourceRoot":""}