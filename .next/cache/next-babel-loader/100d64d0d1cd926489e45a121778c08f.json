{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport withApi from \"~/components/withApi\";\nimport Layout from \"~/components/layout/Layout\";\nimport Packages from \"~/components/Packages\";\n\nconst PlansDetails = ({\n  api,\n  packages,\n  downloadLink,\n  layoutProps,\n  link\n}) => {\n  return __jsx(Layout, layoutProps, __jsx(\"h1\", null, \"Selecciona tu plan\"), __jsx(Packages, {\n    error: packages.error ? packages.error : null,\n    items: packages.items ? packages.items : null,\n    onChange: onPackageChange,\n    package_id: values.package_id,\n    validationError: !loading && error && error.errors && error.errors.package_id,\n    discount_id: values.discount_id,\n    setBlockDiscountFields\n  }));\n};\n\nPlansDetails.getInitialProps = async ctx => {\n  const {\n    api,\n    res,\n    user\n  } = ctx; // if user has already completed registry, redirect it\n  // if (user.register_completed_at) {\n  //   let message = JSON.stringify({ info: \"Ya ha completado su registro.\" })\n  //   nookies.set(ctx, 'flash_message', message, { path: '/' })\n  //   if (res) {\n  //     res.redirect('/')\n  //     res.end()\n  //     return {}\n  //   } else {\n  //     Router.back()\n  //   }\n  // }\n  // get packages\n\n  let packages;\n\n  try {\n    const {\n      data\n    } = await api.get('packages');\n    packages = {\n      items: data\n    };\n  } catch (error) {\n    packages = {\n      error\n    };\n  } // return\n\n\n  return {\n    packages,\n    user\n  };\n};\n\nexport default withApi(PlansDetails, true);","map":{"version":3,"sources":["/Users/rafael/Projects/somosgad/dale/pages/register/wizard/packages.js"],"names":["withApi","Layout","Packages","PlansDetails","api","packages","downloadLink","layoutProps","link","error","items","onChange","onPackageChange","package_id","values","validationError","loading","errors","discount_id","setBlockDiscountFields","getInitialProps","ctx","res","user","data","get"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,QAAP;AAAiBC,EAAAA,YAAjB;AAA+BC,EAAAA,WAA/B;AAA4CC,EAAAA;AAA5C,CAAD,KAAwD;AAE3E,SAEE,MAAC,MAAD,EAAaD,WAAb,EACE,uCADF,EAKE,MAAC,QAAD,EAAc;AACZE,IAAAA,KAAK,EAAEJ,QAAQ,CAACI,KAAT,GAAiBJ,QAAQ,CAACI,KAA1B,GAAkC,IAD7B;AAEZC,IAAAA,KAAK,EAAEL,QAAQ,CAACK,KAAT,GAAiBL,QAAQ,CAACK,KAA1B,GAAkC,IAF7B;AAGZC,IAAAA,QAAQ,EAAEC,eAHE;AAIZC,IAAAA,UAAU,EAAEC,MAAM,CAACD,UAJP;AAKZE,IAAAA,eAAe,EAAE,CAAEC,OAAF,IAAaP,KAAb,IAAsBA,KAAK,CAACQ,MAA5B,IAAsCR,KAAK,CAACQ,MAAN,CAAaJ,UALxD;AAMZK,IAAAA,WAAW,EAAEJ,MAAM,CAACI,WANR;AAOZC,IAAAA;AAPY,GAAd,CALF,CAFF;AAqBD,CAvBD;;AAyBAhB,YAAY,CAACiB,eAAb,GAA+B,MAAMC,GAAN,IAAa;AAE1C,QAAM;AAAEjB,IAAAA,GAAF;AAAOkB,IAAAA,GAAP;AAAYC,IAAAA;AAAZ,MAAqBF,GAA3B,CAF0C,CAI1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,MAAIhB,QAAJ;;AACA,MAAI;AACF,UAAM;AAAEmB,MAAAA;AAAF,QAAW,MAAMpB,GAAG,CAACqB,GAAJ,CAAQ,UAAR,CAAvB;AACApB,IAAAA,QAAQ,GAAG;AAAEK,MAAAA,KAAK,EAAEc;AAAT,KAAX;AACD,GAHD,CAGE,OAAOf,KAAP,EAAc;AACdJ,IAAAA,QAAQ,GAAG;AAAEI,MAAAA;AAAF,KAAX;AACD,GAxByC,CA0B1C;;;AACA,SAAO;AAAEJ,IAAAA,QAAF;AAAYkB,IAAAA;AAAZ,GAAP;AACD,CA5BD;;AA+BA,eAAevB,OAAO,CAACG,YAAD,EAAe,IAAf,CAAtB","sourcesContent":["import withApi from \"~/components/withApi\";\nimport Layout from \"~/components/layout/Layout\";\nimport Packages from \"~/components/Packages\";\n\nconst PlansDetails = ({ api, packages, downloadLink, layoutProps, link }) => {\n\n  return (\n\n    <Layout { ...layoutProps }>\n      <h1>Selecciona tu plan</h1>\n\n\n      {/* package selection */}\n      <Packages {...{\n        error: packages.error ? packages.error : null,\n        items: packages.items ? packages.items : null,\n        onChange: onPackageChange,\n        package_id: values.package_id,\n        validationError: ! loading && error && error.errors && error.errors.package_id,\n        discount_id: values.discount_id,\n        setBlockDiscountFields,\n      }} />\n\n    </Layout>\n\n  )\n\n}\n\nPlansDetails.getInitialProps = async ctx => {\n\n  const { api, res, user } = ctx\n\n  // if user has already completed registry, redirect it\n  // if (user.register_completed_at) {\n  //   let message = JSON.stringify({ info: \"Ya ha completado su registro.\" })\n  //   nookies.set(ctx, 'flash_message', message, { path: '/' })\n  //   if (res) {\n  //     res.redirect('/')\n  //     res.end()\n  //     return {}\n  //   } else {\n  //     Router.back()\n  //   }\n  // }\n\n  // get packages\n  let packages\n  try {\n    const { data } = await api.get('packages')\n    packages = { items: data }\n  } catch (error) {\n    packages = { error }\n  }\n\n  // return\n  return { packages, user }\n}\n\n\nexport default withApi(PlansDetails, true);\n"]},"metadata":{},"sourceType":"module"}