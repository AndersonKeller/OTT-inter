{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport shaka from 'shaka-player/dist/shaka-player.ui.js'; // no SSR support\n\nimport { IS_PRODUCTION } from '~/constants/constants';\n\nclass ShakaPlayer extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.autoPlay = this.props.autoPlay || true;\n    this.videoComponent = React.createRef();\n    this.videoContainer = React.createRef();\n    this.onErrorEvent = this.onErrorEvent.bind(this);\n    this.onError = this.onError.bind(this);\n    this.media = this.props.media;\n    this.poster = this.props.poster ? this.props.poster : null;\n    this.height = this.props.height ? this.props.height : 400;\n    this.width = this.props.width ? this.props.width : 600;\n  }\n\n  onErrorEvent(event) {\n    this.onError(event.detail);\n  }\n\n  onError(error) {\n    console.error('Error code', error.code, 'object', error);\n  }\n\n  componentDidMount() {\n    // Install built-in polyfills to patch browser incompatibilities.\n    shaka.polyfill.installAll(); // Check to see if the browser supports the basic APIs Shaka needs.\n\n    if (shaka.Player.isBrowserSupported()) {\n      // Everything looks good!\n      this.initPlayer();\n    } else {\n      // This browser does not have the minimum set of APIs we need.\n      console.error('Browser not supported!');\n    }\n  }\n\n  async initPlayer() {\n    // Create a Player instance.\n    const video = this.videoComponent.current;\n    const videoContainer = this.videoContainer.current;\n    var player = new shaka.Player(video); // player language configurations\n\n    player.configure('preferredTextLanguage', 'es');\n    player.configure('preferredAudioLanguage', 'es');\n    const minutes = 10;\n    const bufferingGoal = 60 * minutes;\n    player.configure('streaming.bufferingGoal', bufferingGoal); //Setting up shaka player UI\n\n    const ui = new shaka.ui.Overlay(player, videoContainer, video);\n    ui.getControls();\n    const uiConfig = {\n      addBigPlayButton: false,\n      controlPanelElements: ['play_pause', 'time_and_duration', 'spacer', 'mute', 'volume', 'fullscreen', 'overflow_menu'],\n      overflowMenuButtons: ['cast', 'quality', 'picture_in_picture']\n    };\n    ui.configure(uiConfig); // Listen for error events.\n\n    player.addEventListener('error', this.onErrorEvent); // Determine if it must load mpd or hls\n\n    const hls_type_id = 1;\n    const mpd_type_id = 2;\n    const hls_link = this.media ? this.media.movie_links.find(element => {\n      return element.movie_link_type_id === hls_type_id;\n    }) : null;\n    const mpd_link = this.media ? this.media.movie_links.find(element => {\n      return element.movie_link_type_id === mpd_type_id;\n    }) : null;\n    const support = await shaka.Player.probeSupport();\n    const manifestUri = support.manifest.mpd && mpd_link ? mpd_link.url : hls_link ? hls_link.url : null;\n    /* esse funciona: */\n    // const manifestUri = 'https://s3-us-west-1.amazonaws.com/videos.in/dale/dash/la+copa+eterna.mpd'\n\n    /* esses non: */\n    // const manifestUri = 'https://story-video-out.s3-us-west-1.amazonaws.com/teste/DASHIndex.mpd'\n    // const manifestUri = 'https://story-video-out.s3-us-west-1.amazonaws.com/teste/HLSIndex.m3u8'\n\n    console.log('Suporta ' + (support.manifest.mpd ? 'mpd' : 'hls'), manifestUri); // Try to load a manifest.\n    // This is an asynchronous process.\n\n    player.load(manifestUri).then(function () {\n      // This runs if the asynchronous load is successful.\n      console.log('The video has now been loaded!');\n    }).catch(this.onError); // onError is executed if the asynchronous load fails.\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      ref: this.videoContainer,\n      className: \"jsx-2162939282\" + \" \" + \"video-container\"\n    }, __jsx(\"video\", {\n      autoPlay: this.autoPlay,\n      height: this.height,\n      muted: !IS_PRODUCTION,\n      poster: this.poster,\n      ref: this.videoComponent,\n      style: {\n        outline: 0\n      },\n      width: this.width,\n      className: \"jsx-2162939282\" + \" \" + 'video-player'\n    }), __jsx(_JSXStyle, {\n      id: \"2162939282\"\n    }, [\".video-container.jsx-2162939282 .shaka-bottom-controls{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}\", \".video-container.jsx-2162939282 .shaka-bottom-controls .shaka-controls-button-panel{-webkit-order:2;-ms-flex-order:2;order:2;width:100%;}\", \".video-container.jsx-2162939282 .shaka-bottom-controls .shaka-seek-bar-container{-webkit-order:1;-ms-flex-order:1;order:1;width:100%;}\"]));\n  }\n\n}\n\nexport default ShakaPlayer;","map":{"version":3,"sources":["/Users/rafael/Projects/somosgad/dale/components/Player/ShakaPlayer.js"],"names":["React","shaka","IS_PRODUCTION","ShakaPlayer","PureComponent","constructor","props","autoPlay","videoComponent","createRef","videoContainer","onErrorEvent","bind","onError","media","poster","height","width","event","detail","error","console","code","componentDidMount","polyfill","installAll","Player","isBrowserSupported","initPlayer","video","current","player","configure","minutes","bufferingGoal","ui","Overlay","getControls","uiConfig","addBigPlayButton","controlPanelElements","overflowMenuButtons","addEventListener","hls_type_id","mpd_type_id","hls_link","movie_links","find","element","movie_link_type_id","mpd_link","support","probeSupport","manifestUri","manifest","mpd","url","log","load","then","catch","render","outline"],"mappings":"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","sourcesContent":["import React from 'react'\nimport shaka from 'shaka-player/dist/shaka-player.ui.js' // no SSR support\nimport { IS_PRODUCTION } from '~/constants/constants'\n\nclass ShakaPlayer extends React.PureComponent\n{\n  constructor(props) {\n    super(props)\n    this.autoPlay = this.props.autoPlay || true\n    this.videoComponent = React.createRef()\n    this.videoContainer = React.createRef()\n    this.onErrorEvent = this.onErrorEvent.bind(this)\n    this.onError = this.onError.bind(this)\n    this.media = this.props.media\n    this.poster = this.props.poster ? this.props.poster : null\n    this.height = this.props.height ? this.props.height : 400\n    this.width = this.props.width ? this.props.width : 600\n  }\n\n  onErrorEvent(event) {\n    this.onError(event.detail)\n  }\n\n  onError(error) {\n    console.error('Error code', error.code, 'object', error)\n  }\n\n  componentDidMount(){\n    // Install built-in polyfills to patch browser incompatibilities.\n    shaka.polyfill.installAll()\n\n    // Check to see if the browser supports the basic APIs Shaka needs.\n    if (shaka.Player.isBrowserSupported()) {\n      // Everything looks good!\n      this.initPlayer()\n    } else {\n      // This browser does not have the minimum set of APIs we need.\n      console.error('Browser not supported!')\n    }\n  }\n\n  async initPlayer() {\n    // Create a Player instance.\n    const video = this.videoComponent.current\n    const videoContainer = this.videoContainer.current\n    var player = new shaka.Player(video)\n\n    // player language configurations\n    player.configure('preferredTextLanguage', 'es')\n    player.configure('preferredAudioLanguage', 'es')\n    const minutes = 10\n    const bufferingGoal = 60 * minutes\n    player.configure('streaming.bufferingGoal', bufferingGoal)\n\n\t\t//Setting up shaka player UI\n    const ui = new shaka.ui.Overlay(player, videoContainer, video)\n    ui.getControls()\n    const uiConfig = {\n      addBigPlayButton: false,\n      controlPanelElements: [\n        'play_pause', 'time_and_duration', 'spacer', 'mute', 'volume', 'fullscreen', 'overflow_menu',\n      ],\n      overflowMenuButtons: ['cast', 'quality', 'picture_in_picture'],\n    }\n    ui.configure(uiConfig)\n\n    // Listen for error events.\n    player.addEventListener('error', this.onErrorEvent)\n\n    // Determine if it must load mpd or hls\n    const hls_type_id = 1\n    const mpd_type_id = 2\n    const hls_link = this.media ? this.media.movie_links.find(element => {\n      return element.movie_link_type_id === hls_type_id\n    }) : null\n    const mpd_link = this.media ? this.media.movie_links.find(element => {\n      return element.movie_link_type_id === mpd_type_id\n    }) : null\n    const support = await shaka.Player.probeSupport();\n    const manifestUri = support.manifest.mpd && mpd_link ? mpd_link.url :\n      hls_link ? hls_link.url : null\n\n    /* esse funciona: */\n    // const manifestUri = 'https://s3-us-west-1.amazonaws.com/videos.in/dale/dash/la+copa+eterna.mpd'\n\n    /* esses non: */\n    // const manifestUri = 'https://story-video-out.s3-us-west-1.amazonaws.com/teste/DASHIndex.mpd'\n    // const manifestUri = 'https://story-video-out.s3-us-west-1.amazonaws.com/teste/HLSIndex.m3u8'\n\n    console.log('Suporta ' + (support.manifest.mpd ? 'mpd' : 'hls'), manifestUri)\n\n    // Try to load a manifest.\n    // This is an asynchronous process.\n    player.load(manifestUri).then(function() {\n      // This runs if the asynchronous load is successful.\n      console.log('The video has now been loaded!')\n    }).catch(this.onError)  // onError is executed if the asynchronous load fails.\n  }\n\n  render() {\n    return (\n      <div className=\"video-container\" ref={this.videoContainer}>\n        <video\n          autoPlay={this.autoPlay}\n          className='video-player'\n          height={this.height}\n          muted={!IS_PRODUCTION}\n          poster={this.poster}\n          ref={this.videoComponent}\n          style={{ outline: 0 }}\n          width={this.width}\n        />\n        <style jsx>{`\n          .video-container :global(.shaka-bottom-controls) {\n            display: flex;\n            flex-direction: column;\n          }\n          .video-container :global(.shaka-bottom-controls .shaka-controls-button-panel) {\n            order: 2;\n            width: 100%;\n          }\n          .video-container :global(.shaka-bottom-controls .shaka-seek-bar-container) {\n            order: 1;\n            width: 100%;\n          }\n        `}</style>\n      </div>\n    )\n  }\n}\n\nexport default ShakaPlayer\n"]},"metadata":{},"sourceType":"module"}