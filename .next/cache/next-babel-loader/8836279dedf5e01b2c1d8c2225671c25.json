{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createContext, useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport SafeJSONParse from 'json-parse-safe';\nimport nookies from 'nookies';\nimport api from '../services/api';\nimport { setAccessToken, removeAccessToken } from '../services/auth';\nconst UserContext = createContext();\nexport default UserContext;\nexport function UserProvider({\n  children\n}) {\n  const {\n    user: userString\n  } = nookies.get({}, 'user');\n  const userCookie = SafeJSONParse(userString).value;\n  const {\n    0: user,\n    1: setUser\n  } = useState(userCookie);\n\n  const signIn = (user, tokenResponse) => {\n    const {\n      access_token,\n      expires_in,\n      refresh_token,\n      token_type\n    } = tokenResponse;\n    setAccessToken(access_token);\n    localStorage.setItem('token_type', token_type);\n    localStorage.setItem('expires_in', expires_in);\n    localStorage.setItem('refresh_token', refresh_token);\n    localStorage.setItem('user', JSON.stringify(user));\n    nookies.set({}, 'user', JSON.stringify(user), {\n      path: '/'\n    });\n    setUser(user);\n\n    if (!user.register_completed_at) {\n      Router.replace('/register/wizard/complete-test');\n    }\n  };\n\n  const signOut = async _ => {\n    api().post('logout').then(response => {\n      console.log('Logout successfully', response);\n      removeAccessToken();\n      localStorage.removeItem('token_type');\n      localStorage.removeItem('expires_in');\n      localStorage.removeItem('refresh_token');\n    }).catch(error => {\n      console.log(\"Couldn't logout\", error);\n    });\n    localStorage.removeItem('user');\n    nookies.destroy({}, 'user', {\n      path: '/'\n    });\n    setUser(null); // Router.push('/signin')\n    // location.href = location.protocol + '//' + location.host + location.pathname\n  };\n\n  const updateUser = user => {\n    const userString = JSON.stringify(user);\n    localStorage.setItem('user', userString);\n    nookies.set({}, 'user', userString, {\n      path: '/'\n    });\n    setUser(user);\n  };\n\n  const completeUserProfile = user => {};\n\n  return __jsx(UserContext.Provider, {\n    value: _objectSpread({}, {\n      user,\n      signIn,\n      signOut,\n      updateUser\n    })\n  }, children);\n}","map":{"version":3,"sources":["/Users/rafael/Projects/somosgad/dale/contexts/UserContext.js"],"names":["createContext","useState","useEffect","Router","SafeJSONParse","nookies","api","setAccessToken","removeAccessToken","UserContext","UserProvider","children","user","userString","get","userCookie","value","setUser","signIn","tokenResponse","access_token","expires_in","refresh_token","token_type","localStorage","setItem","JSON","stringify","set","path","register_completed_at","replace","signOut","_","post","then","response","console","log","removeItem","catch","error","destroy","updateUser","completeUserProfile"],"mappings":";;;;;;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AAEA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,SAApB;AAEA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,cAAT,EAAyBC,iBAAzB,QAAkD,kBAAlD;AAEA,MAAMC,WAAW,GAAGT,aAAa,EAAjC;AAEA,eAAeS,WAAf;AAEA,OAAO,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AAEzC,QAAM;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAAuBR,OAAO,CAACS,GAAR,CAAY,EAAZ,EAAgB,MAAhB,CAA7B;AACA,QAAMC,UAAU,GAAGX,aAAa,CAACS,UAAD,CAAb,CAA0BG,KAA7C;AACA,QAAM;AAAA,OAAEJ,IAAF;AAAA,OAAQK;AAAR,MAAoBhB,QAAQ,CAACc,UAAD,CAAlC;;AAEA,QAAMG,MAAM,GAAG,CAACN,IAAD,EAAOO,aAAP,KAAyB;AAEtC,UAAM;AACJC,MAAAA,YADI;AAEJC,MAAAA,UAFI;AAGJC,MAAAA,aAHI;AAIJC,MAAAA;AAJI,QAKFJ,aALJ;AAOAZ,IAAAA,cAAc,CAACa,YAAD,CAAd;AAEAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCF,UAAnC;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCJ,UAAnC;AACAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCH,aAAtC;AAEAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAef,IAAf,CAA7B;AACAP,IAAAA,OAAO,CAACuB,GAAR,CAAY,EAAZ,EAAgB,MAAhB,EAAwBF,IAAI,CAACC,SAAL,CAAef,IAAf,CAAxB,EAA8C;AAAEiB,MAAAA,IAAI,EAAE;AAAR,KAA9C;AACAZ,IAAAA,OAAO,CAACL,IAAD,CAAP;;AAEA,QAAK,CAAEA,IAAI,CAACkB,qBAAZ,EAAmC;AACjC3B,MAAAA,MAAM,CAAC4B,OAAP,CAAe,gCAAf;AACD;AACF,GAtBD;;AAwBA,QAAMC,OAAO,GAAG,MAAMC,CAAN,IAAW;AAEzB3B,IAAAA,GAAG,GAAG4B,IAAN,CAAW,QAAX,EAAqBC,IAArB,CAA2BC,QAAD,IAAc;AACtCC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,QAAnC;AACA5B,MAAAA,iBAAiB;AACjBgB,MAAAA,YAAY,CAACe,UAAb,CAAwB,YAAxB;AACAf,MAAAA,YAAY,CAACe,UAAb,CAAwB,YAAxB;AACAf,MAAAA,YAAY,CAACe,UAAb,CAAwB,eAAxB;AAED,KAPD,EAOGC,KAPH,CAOUC,KAAD,IAAW;AAClBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BG,KAA/B;AACD,KATD;AAWAjB,IAAAA,YAAY,CAACe,UAAb,CAAwB,MAAxB;AACAlC,IAAAA,OAAO,CAACqC,OAAR,CAAgB,EAAhB,EAAoB,MAApB,EAA4B;AAAEb,MAAAA,IAAI,EAAE;AAAR,KAA5B;AACAZ,IAAAA,OAAO,CAAC,IAAD,CAAP,CAfyB,CAgBzB;AACA;AACD,GAlBD;;AAoBA,QAAM0B,UAAU,GAAG/B,IAAI,IAAI;AACzB,UAAMC,UAAU,GAAGa,IAAI,CAACC,SAAL,CAAef,IAAf,CAAnB;AACAY,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BZ,UAA7B;AACAR,IAAAA,OAAO,CAACuB,GAAR,CAAY,EAAZ,EAAgB,MAAhB,EAAwBf,UAAxB,EAAoC;AAAEgB,MAAAA,IAAI,EAAE;AAAR,KAApC;AACAZ,IAAAA,OAAO,CAACL,IAAD,CAAP;AACD,GALD;;AAOA,QAAMgC,mBAAmB,GAAGhC,IAAI,IAAI,CAInC,CAJD;;AAMA,SACE,MAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,oBAAM;AAAEA,MAAAA,IAAF;AAAQM,MAAAA,MAAR;AAAgBc,MAAAA,OAAhB;AAAyBW,MAAAA;AAAzB,KAAN;AAA3B,KACGhC,QADH,CADF;AAKD","sourcesContent":["import { createContext, useState, useEffect } from 'react'\n\nimport Router from 'next/router'\n\nimport SafeJSONParse from 'json-parse-safe'\nimport nookies from 'nookies'\n\nimport api from '../services/api'\nimport { setAccessToken, removeAccessToken } from '../services/auth'\n\nconst UserContext = createContext()\n\nexport default UserContext\n\nexport function UserProvider({ children }) {\n\n  const { user: userString } = nookies.get({}, 'user')\n  const userCookie = SafeJSONParse(userString).value\n  const [ user, setUser ] = useState(userCookie)\n\n  const signIn = (user, tokenResponse) => {\n\n    const {\n      access_token,\n      expires_in,\n      refresh_token,\n      token_type,\n    } = tokenResponse\n\n    setAccessToken(access_token)\n\n    localStorage.setItem('token_type', token_type)\n    localStorage.setItem('expires_in', expires_in)\n    localStorage.setItem('refresh_token', refresh_token)\n\n    localStorage.setItem('user', JSON.stringify(user))\n    nookies.set({}, 'user', JSON.stringify(user), { path: '/' })\n    setUser(user)\n\n    if ( ! user.register_completed_at) {\n      Router.replace('/register/wizard/complete-test')\n    }\n  }\n\n  const signOut = async _ => {\n\n    api().post('logout').then((response) => {\n      console.log('Logout successfully', response)\n      removeAccessToken()\n      localStorage.removeItem('token_type')\n      localStorage.removeItem('expires_in')\n      localStorage.removeItem('refresh_token')\n\n    }).catch((error) => {\n      console.log(\"Couldn't logout\", error)\n    })\n\n    localStorage.removeItem('user')\n    nookies.destroy({}, 'user', { path: '/' })\n    setUser(null)\n    // Router.push('/signin')\n    // location.href = location.protocol + '//' + location.host + location.pathname\n  }\n\n  const updateUser = user => {\n    const userString = JSON.stringify(user)\n    localStorage.setItem('user', userString)\n    nookies.set({}, 'user', userString, { path: '/' })\n    setUser(user)\n  }\n\n  const completeUserProfile = user => {\n\n\n\n  }\n\n  return (\n    <UserContext.Provider value={{...{ user, signIn, signOut, updateUser }}}>\n      {children}\n    </UserContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}