{"ast":null,"code":"// import Head from 'next/head'\n// import Link from 'next/link'\n// import React, { useContext, useEffect, useState } from 'react'\n// import styled from 'styled-components'\n// import Button from '../components/button'\n// import CarouselSection from '../components/carousel-section'\n// import Featured from '../components/featured'\n// import Layout from '../components/layout/Layout'\n// import Loading from '../components/Loading/Loading'\n// import MediaLink from '../components/MediaLink/MediaLink'\n// import WishlistBtn from '../components/wishlist-btn'\n// import UserContext from '../contexts/UserContext'\n// import { CONFIG } from '../config'\n// import api from '../services/api'\n// import withApi from '~/components/withApi'\n// import Color from 'color'\n// import { TENANT } from \"~/constants/constants\";\n//\n// const HomePage = ({ api, contents, featuredMedia, featuredMediaError, media, layoutProps }) => {\n//   const { user } = useContext(UserContext)\n//   const { appName: pageTitle } = CONFIG\n//   let [idx, setIdx] = useState(0)\n//   return (\n//     <Layout paddingTop={false} {...layoutProps} media={featuredMedia}>\n//       <Head>\n//         <title>{pageTitle}</title>\n//         <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={`/static/${TENANT}/favicon/apple-touch-icon.png`} />\n//         <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={`/static/${TENANT}/favicon/favicon-32x32.png`} />\n//         <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={`/static/${TENANT}/favicon/favicon-16x16.png`} />\n//         <link rel=\"manifest\" href={`/static/${TENANT}/favicon/site.webmanifest`} />\n//         <link rel=\"mask-icon\" href={`/static/${TENANT}/favicon/safari-pinned-tab.svg`} color=\"#5bbad5\" />\n//         <meta name=\"msapplication-TileColor\" content=\"#da532c\" />\n//         <meta name=\"theme-color\" content=\"#ffffff\" />\n//       </Head>\n//       <div className=\"index\">\n//\n//         {/* cover */}\n//         <Cover error={featuredMediaError} media={featuredMedia} />\n//         {/* <Cover media={featuredMedia} /> */}\n//\n//         {/* contents */}\n//         <div className=\"index__contents\">\n//           {contents && contents.map((item, index) => {\n//             const showBanner = (item.is_paid && user || !item.is_paid && !user)\n//             const { contentable_type: contentableType } = item\n//             switch (contentableType) {\n//               case 'categories':\n//                 return <HomeCarouselSection api={api} category={item.slug} key={index} idx={index} />\n//               case 'banners':\n//                 return showBanner && <BannerSection id={item.contentable_id} key={index} />\n//               case 'movies':\n//                 return showBanner && <BannerSection movie={item.slug} key={index} />\n//             }\n//           })}\n//         </div>\n//\n//       </div>\n//       <style jsx>{`\n//         .index {\n//           margin-bottom: 75px;\n//         }\n//         .index__contents {\n//           position: relative;\n//           z-index: 2;\n//         }\n//\n//         .home-carousel-section:first-child {\n//           padding: 3.5em 0;\n//         }\n//         @media (min-width: 768px) {\n//           .index {\n//             margin-bottom: 30px;\n//           }\n//         }\n//       ` }</style>\n//     </Layout>\n//   )\n// }\n//\n// HomePage.getInitialProps = async ctx => {\n//   const { api } = ctx\n//   const { data: homePage } = await api.get('pages/home');\n//\n//   try {\n//     const [firstContent, ...contents] = homePage.contents\n//     const { data: { movie: featuredMedia } } = await api.get('movie/' + firstContent.slug + '?for=home-cover')\n//     return { contents, featuredMedia }\n//   } catch (error) {\n//     const [...contents] = homePage.contents;\n//     return { contents, featuredMediaError: error };\n//   }\n// }\n//\n// export default withApi(HomePage)\n//\n// const CoverImgContent = styled.div`\n//   background-image:\n//     linear-gradient(to bottom, ${props => Color(props.theme.colors.background).fade(1).string()} 80%, ${props => props.theme.colors.background} 100%),\n//     radial-gradient(circle at 50% 50%, ${props => Color(props.theme.colors.background).fade(1).string()} 25%, ${props => Color(props.theme.colors.background).fade(.075).string()} 75%),\n//     url('${props => props.posterUrl}');\n//   background-position: 50% 0, 50% 0, 75% 0;\n//   background-repeat: no-repeat, no-repeat, no-repeat;\n//   background-size: cover, cover, cover;\n//   &::before {\n//     content: '';\n//     display: block;\n//     padding-bottom: 112.5%;\n//   }\n//   @media (min-width: 768px) {\n//     background-image:\n//       linear-gradient(to bottom, ${props => Color(props.theme.colors.background).fade(1).string()} 80%, ${props => props.theme.colors.background} 100%),\n//       radial-gradient(circle at 67.5% 57.5%, ${props => Color(props.theme.colors.background).fade(1).string()} 25%, ${props => Color(props.theme.colors.background).fade(.075).string()} 42.5%),\n//       url('${props => props.posterUrl}');\n//     background-position: 50% 0, 50% 0, 40% 50%;\n//     &::before {\n//       padding-bottom: 80%;\n//     }\n//   }\n//   @media (min-width: 1200px) {\n//     background-position: 50% 0, 50% 0, 75% 50%;\n//     &::before {\n//       padding-bottom: 48%;\n//     }\n//   }\n// `\n//\n// const Cover = ({ error, media }) => {\n//\n//   if (error) {\n//     return (\n//       <p>No se puede cargar contenido destacado</p>\n//     )\n//   }\n//   const { user } = useContext(UserContext)\n//   const { description, logo, poster_url } = media || {}\n//   const {\n//     height,\n//     url: { default: fallback, png, webp } = {},\n//     width,\n//   } = logo || {}\n//   const empezaYa = CONFIG.lang === 'es-CL' ? '¡Vívelo ahora!' : '¡Empieza Ya!'\n//   return (\n//\n//     <Link href={media && media.video_file ? `/media/${media.slug}/watch` : '/'} >\n//\n//\n//       <div className=\"cover container-fluid\">\n//\n//         {/* poster backaground banner image */}\n//\n//         {poster_url && (\n//           <div className=\"cover__img row\">\n//             <div className=\"col p-0\">\n//\n//               <CoverImgContent posterUrl={poster_url}>\n//\n//                 <img alt=\"\" className=\"d-none\" src={poster_url} />\n//\n//\n//               </CoverImgContent>\n//\n//\n//             </div>\n//           </div>\n//         )\n//         }\n//\n//\n//         <div className=\"cover__contents row\">\n//           <div className=\"col-12 col-md-4 offset-md-1\">\n//             <div className=\"cover__infos\">\n//\n//               {/* logo overlay image */}\n//               {logo && (\n//                 <div className=\"row\">\n//                   <div className=\"col-8 offset-2 col-md-12 offset-md-0\">\n//                     <h1 className=\"cover__logo\">\n//                       <picture>\n//                         <source srcSet={webp} type=\"media/webp\" />\n//                         <source srcSet={png} type=\"media/png\" />\n//                         <img className=\"img-fluid\" height={height} src={fallback} width={width} />\n//                       </picture>\n//                     </h1>\n//                   </div>\n//                 </div>\n//               )}\n//\n//               {/* content's description */}\n//               {description && (\n//                 <div className=\"row cover__description\">\n//                   <div className=\"col-10 offset-1 col-md-12 offset-md-0\">\n//                     <p className=\"mb-0\">{description}</p>\n//                   </div>\n//                 </div>\n//               )}\n//\n//             </div>\n//\n//             {/* cta buttons */}\n//             <div className=\"row justify-content-center gutter-15\">\n//               {!user ? (\n//                 <div className=\"col-auto\">\n//                   <Link href=\"/signup\" passHref>\n//                     <Button>{empezaYa}</Button>\n//                   </Link>\n//                 </div>\n//               ) : <>\n//                   <div className=\"col-auto\">\n//                     <MediaLink {...{ media }} passHref>\n//                       <Button>Mira</Button>\n//                     </MediaLink>\n//                   </div>\n//                   <div className=\"col-auto\">\n//                     <WishlistBtn movieId={media.id} />\n//                   </div>\n//                 </>}\n//             </div>\n//           </div>\n//\n//         </div>\n//         {/* styles */}\n//         <style jsx>{`\n//         .cover {\n//           font-size: 12px;\n//           line-height: 1.4;\n//           margin-bottom: 15px;\n//           overflow: hidden;\n//           padding-bottom: 15px;\n//           position: relative;\n//           text-align: center;\n//           z-index: 1;\n//         }\n//         .cover__img {\n//           margin-bottom: -90px;\n//         }\n//         .cover__infos {\n//           margin-bottom: 15px;\n//         }\n//         .cover__logo {\n//           margin-top: 0;\n//           margin-bottom: 15px;\n//           position: relative;\n//         }\n//         .cover__logo::before {\n//           content: '';\n//           display: block;\n//           padding-bottom: ${ logo ? height * 100 / width + '%' : 0};\n//         }\n//         .cover__logo img {\n//           left: 0;\n//           position: absolute;\n//           top: 0;\n//         }\n//         @media (min-width: 768px) {\n//           .cover {\n//             font-size: 16px;\n//             line-height: 1.5;\n//             margin-bottom: -60px;\n//             text-align: left;\n//           }\n//           .cover__img {\n//             margin-bottom: 0;\n//           }\n//           .cover__contents {\n//             align-items: center;\n//             height: 100%;\n//             padding-top: var(--padding-top);\n//             padding-bottom: 60px;\n//             position: absolute;\n//             width: 100%;\n//             top: 0;\n//           }\n//           .cover__infos {\n//             margin-bottom: 15px;\n//           }\n//         }\n//       ` }</style>\n//\n//       </div >\n//     </Link >\n//   )\n// }\n//\n// const HomeCarouselSection = ({ api, category: categorySlug, idx }) => {\n//\n//   const [category, setCategory] = useState(null)\n//   const [error, setError] = useState(false)\n//   const [loading, setLoading] = useState(false)\n//   const { lang } = CONFIG\n//\n//   useEffect(() => {\n//     async function fetchData() {\n//       setError(false)\n//       setLoading(true)\n//       try {\n//         const { data } = await api.get(`category/${categorySlug}`)\n//         console.log(data);\n//         setCategory(data)\n//       } catch (error) {\n//         const errorMessage = ['es', 'es-CL'].includes(lang) ? 'Error al intentar cargar la categoría'\n//           : 'Error trying to load category'\n//         setError(errorMessage)\n//       }\n//       setLoading(false)\n//     }\n//\n//     fetchData()\n//   }, [categorySlug])\n//\n//   // alert(key)\n//   return (\n//     <>\n//       <div className=\"home-carousel-section\">\n//         {loading ? (\n//           <div className=\"text-center\">\n//             <Loading loadingState={loading} />\n//           </div>\n//         ) : category ? (\n//           <CarouselSection category={category} idx={idx} />\n//         ) : error && (\n//           <div className=\"text-center\">\n//             {error}\n//           </div>\n//         )}\n//       </div>\n//       <br></br>\n//       <style jsx>{`\n//         .home-carousel-section {\n//             //margin-bottom: 75px;\n//             //margin-top: 75px;\n//         }\n//         @media (min-width: 768px) {\n//           .home-carousel-section {\n//             //margin-bottom: 55px;\n//           }\n//         }\n//       ` }</style>\n//     </>\n//   )\n// }\n//\n// const BannerSection = ({ id, movie }) => {\n//   const [banner, setBanner] = useState()\n//   const [loading, setLoading] = useState(false)\n//   const [error, setError] = useState()\n//\n//   useEffect(_ => {\n//     async function fetchData() {\n//       setLoading(true)\n//       try {\n//         const { data } = await (id ? api().get(`/banners/${id}`) : api().get(`/movie/${movie}`))\n//         setBanner(data)\n//\n//       } catch (error) {\n//         setError(true)\n//       }\n//       setLoading(false)\n//     }\n//\n//     fetchData()\n//   }, [id])\n//\n//   return (\n//     <div>\n//       <div className=\"section\">\n//\n//         {/* loading */}\n//         <div className=\"text-center\">\n//           <Loading loadingState={loading} />\n//         </div>\n//\n//         {/* features */}\n//         {banner && id &&\n//           <a className=\"sponsor-link\" href={banner.link} target=\"_blank\">\n//             <Featured img={banner.banner_url} />\n//           </a>\n//         }\n//\n//         {banner && movie &&\n//           <MediaLink media={banner.movie} passHref>\n//             <a>\n//               <Featured\n//                 className=\"gradient\"\n//                 img={banner.movie.poster_url}\n//               />\n//             </a>\n//           </MediaLink>\n//         }\n//\n//         {/* error */}\n//         {error && (\n//           <div className=\"text-center\">Error</div>\n//         )}\n//\n//       </div>\n//       <style jsx>{`\n//         .sponsor-link {\n//           color: white !important;\n//           text-decoration: none;\n//         }\n//         .sponsor-link:hover {\n//           color: white !important;\n//           text-decoration: none;\n//         }\n//         a:not([href]):not([tabindex]):hover {\n//           color: white !important;\n//           text-decoration: none;\n//         }\n//       ` }</style>\n//     </div>\n//   );\n// }","map":{"version":3,"sources":["/Users/rafael/Projects/somosgad/dale/pages/index.js"],"names":[],"mappingssourcesContent":["// import Head from 'next/head'\n// import Link from 'next/link'\n// import React, { useContext, useEffect, useState } from 'react'\n// import styled from 'styled-components'\n// import Button from '../components/button'\n// import CarouselSection from '../components/carousel-section'\n// import Featured from '../components/featured'\n// import Layout from '../components/layout/Layout'\n// import Loading from '../components/Loading/Loading'\n// import MediaLink from '../components/MediaLink/MediaLink'\n// import WishlistBtn from '../components/wishlist-btn'\n// import UserContext from '../contexts/UserContext'\n// import { CONFIG } from '../config'\n// import api from '../services/api'\n// import withApi from '~/components/withApi'\n// import Color from 'color'\n// import { TENANT } from \"~/constants/constants\";\n//\n// const HomePage = ({ api, contents, featuredMedia, featuredMediaError, media, layoutProps }) => {\n//   const { user } = useContext(UserContext)\n//   const { appName: pageTitle } = CONFIG\n//   let [idx, setIdx] = useState(0)\n//   return (\n//     <Layout paddingTop={false} {...layoutProps} media={featuredMedia}>\n//       <Head>\n//         <title>{pageTitle}</title>\n//         <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={`/static/${TENANT}/favicon/apple-touch-icon.png`} />\n//         <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={`/static/${TENANT}/favicon/favicon-32x32.png`} />\n//         <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={`/static/${TENANT}/favicon/favicon-16x16.png`} />\n//         <link rel=\"manifest\" href={`/static/${TENANT}/favicon/site.webmanifest`} />\n//         <link rel=\"mask-icon\" href={`/static/${TENANT}/favicon/safari-pinned-tab.svg`} color=\"#5bbad5\" />\n//         <meta name=\"msapplication-TileColor\" content=\"#da532c\" />\n//         <meta name=\"theme-color\" content=\"#ffffff\" />\n//       </Head>\n//       <div className=\"index\">\n//\n//         {/* cover */}\n//         <Cover error={featuredMediaError} media={featuredMedia} />\n//         {/* <Cover media={featuredMedia} /> */}\n//\n//         {/* contents */}\n//         <div className=\"index__contents\">\n//           {contents && contents.map((item, index) => {\n//             const showBanner = (item.is_paid && user || !item.is_paid && !user)\n//             const { contentable_type: contentableType } = item\n//             switch (contentableType) {\n//               case 'categories':\n//                 return <HomeCarouselSection api={api} category={item.slug} key={index} idx={index} />\n//               case 'banners':\n//                 return showBanner && <BannerSection id={item.contentable_id} key={index} />\n//               case 'movies':\n//                 return showBanner && <BannerSection movie={item.slug} key={index} />\n//             }\n//           })}\n//         </div>\n//\n//       </div>\n//       <style jsx>{`\n//         .index {\n//           margin-bottom: 75px;\n//         }\n//         .index__contents {\n//           position: relative;\n//           z-index: 2;\n//         }\n//\n//         .home-carousel-section:first-child {\n//           padding: 3.5em 0;\n//         }\n//         @media (min-width: 768px) {\n//           .index {\n//             margin-bottom: 30px;\n//           }\n//         }\n//       ` }</style>\n//     </Layout>\n//   )\n// }\n//\n// HomePage.getInitialProps = async ctx => {\n//   const { api } = ctx\n//   const { data: homePage } = await api.get('pages/home');\n//\n//   try {\n//     const [firstContent, ...contents] = homePage.contents\n//     const { data: { movie: featuredMedia } } = await api.get('movie/' + firstContent.slug + '?for=home-cover')\n//     return { contents, featuredMedia }\n//   } catch (error) {\n//     const [...contents] = homePage.contents;\n//     return { contents, featuredMediaError: error };\n//   }\n// }\n//\n// export default withApi(HomePage)\n//\n// const CoverImgContent = styled.div`\n//   background-image:\n//     linear-gradient(to bottom, ${props => Color(props.theme.colors.background).fade(1).string()} 80%, ${props => props.theme.colors.background} 100%),\n//     radial-gradient(circle at 50% 50%, ${props => Color(props.theme.colors.background).fade(1).string()} 25%, ${props => Color(props.theme.colors.background).fade(.075).string()} 75%),\n//     url('${props => props.posterUrl}');\n//   background-position: 50% 0, 50% 0, 75% 0;\n//   background-repeat: no-repeat, no-repeat, no-repeat;\n//   background-size: cover, cover, cover;\n//   &::before {\n//     content: '';\n//     display: block;\n//     padding-bottom: 112.5%;\n//   }\n//   @media (min-width: 768px) {\n//     background-image:\n//       linear-gradient(to bottom, ${props => Color(props.theme.colors.background).fade(1).string()} 80%, ${props => props.theme.colors.background} 100%),\n//       radial-gradient(circle at 67.5% 57.5%, ${props => Color(props.theme.colors.background).fade(1).string()} 25%, ${props => Color(props.theme.colors.background).fade(.075).string()} 42.5%),\n//       url('${props => props.posterUrl}');\n//     background-position: 50% 0, 50% 0, 40% 50%;\n//     &::before {\n//       padding-bottom: 80%;\n//     }\n//   }\n//   @media (min-width: 1200px) {\n//     background-position: 50% 0, 50% 0, 75% 50%;\n//     &::before {\n//       padding-bottom: 48%;\n//     }\n//   }\n// `\n//\n// const Cover = ({ error, media }) => {\n//\n//   if (error) {\n//     return (\n//       <p>No se puede cargar contenido destacado</p>\n//     )\n//   }\n//   const { user } = useContext(UserContext)\n//   const { description, logo, poster_url } = media || {}\n//   const {\n//     height,\n//     url: { default: fallback, png, webp } = {},\n//     width,\n//   } = logo || {}\n//   const empezaYa = CONFIG.lang === 'es-CL' ? '¡Vívelo ahora!' : '¡Empieza Ya!'\n//   return (\n//\n//     <Link href={media && media.video_file ? `/media/${media.slug}/watch` : '/'} >\n//\n//\n//       <div className=\"cover container-fluid\">\n//\n//         {/* poster backaground banner image */}\n//\n//         {poster_url && (\n//           <div className=\"cover__img row\">\n//             <div className=\"col p-0\">\n//\n//               <CoverImgContent posterUrl={poster_url}>\n//\n//                 <img alt=\"\" className=\"d-none\" src={poster_url} />\n//\n//\n//               </CoverImgContent>\n//\n//\n//             </div>\n//           </div>\n//         )\n//         }\n//\n//\n//         <div className=\"cover__contents row\">\n//           <div className=\"col-12 col-md-4 offset-md-1\">\n//             <div className=\"cover__infos\">\n//\n//               {/* logo overlay image */}\n//               {logo && (\n//                 <div className=\"row\">\n//                   <div className=\"col-8 offset-2 col-md-12 offset-md-0\">\n//                     <h1 className=\"cover__logo\">\n//                       <picture>\n//                         <source srcSet={webp} type=\"media/webp\" />\n//                         <source srcSet={png} type=\"media/png\" />\n//                         <img className=\"img-fluid\" height={height} src={fallback} width={width} />\n//                       </picture>\n//                     </h1>\n//                   </div>\n//                 </div>\n//               )}\n//\n//               {/* content's description */}\n//               {description && (\n//                 <div className=\"row cover__description\">\n//                   <div className=\"col-10 offset-1 col-md-12 offset-md-0\">\n//                     <p className=\"mb-0\">{description}</p>\n//                   </div>\n//                 </div>\n//               )}\n//\n//             </div>\n//\n//             {/* cta buttons */}\n//             <div className=\"row justify-content-center gutter-15\">\n//               {!user ? (\n//                 <div className=\"col-auto\">\n//                   <Link href=\"/signup\" passHref>\n//                     <Button>{empezaYa}</Button>\n//                   </Link>\n//                 </div>\n//               ) : <>\n//                   <div className=\"col-auto\">\n//                     <MediaLink {...{ media }} passHref>\n//                       <Button>Mira</Button>\n//                     </MediaLink>\n//                   </div>\n//                   <div className=\"col-auto\">\n//                     <WishlistBtn movieId={media.id} />\n//                   </div>\n//                 </>}\n//             </div>\n//           </div>\n//\n//         </div>\n//         {/* styles */}\n//         <style jsx>{`\n//         .cover {\n//           font-size: 12px;\n//           line-height: 1.4;\n//           margin-bottom: 15px;\n//           overflow: hidden;\n//           padding-bottom: 15px;\n//           position: relative;\n//           text-align: center;\n//           z-index: 1;\n//         }\n//         .cover__img {\n//           margin-bottom: -90px;\n//         }\n//         .cover__infos {\n//           margin-bottom: 15px;\n//         }\n//         .cover__logo {\n//           margin-top: 0;\n//           margin-bottom: 15px;\n//           position: relative;\n//         }\n//         .cover__logo::before {\n//           content: '';\n//           display: block;\n//           padding-bottom: ${ logo ? height * 100 / width + '%' : 0};\n//         }\n//         .cover__logo img {\n//           left: 0;\n//           position: absolute;\n//           top: 0;\n//         }\n//         @media (min-width: 768px) {\n//           .cover {\n//             font-size: 16px;\n//             line-height: 1.5;\n//             margin-bottom: -60px;\n//             text-align: left;\n//           }\n//           .cover__img {\n//             margin-bottom: 0;\n//           }\n//           .cover__contents {\n//             align-items: center;\n//             height: 100%;\n//             padding-top: var(--padding-top);\n//             padding-bottom: 60px;\n//             position: absolute;\n//             width: 100%;\n//             top: 0;\n//           }\n//           .cover__infos {\n//             margin-bottom: 15px;\n//           }\n//         }\n//       ` }</style>\n//\n//       </div >\n//     </Link >\n//   )\n// }\n//\n// const HomeCarouselSection = ({ api, category: categorySlug, idx }) => {\n//\n//   const [category, setCategory] = useState(null)\n//   const [error, setError] = useState(false)\n//   const [loading, setLoading] = useState(false)\n//   const { lang } = CONFIG\n//\n//   useEffect(() => {\n//     async function fetchData() {\n//       setError(false)\n//       setLoading(true)\n//       try {\n//         const { data } = await api.get(`category/${categorySlug}`)\n//         console.log(data);\n//         setCategory(data)\n//       } catch (error) {\n//         const errorMessage = ['es', 'es-CL'].includes(lang) ? 'Error al intentar cargar la categoría'\n//           : 'Error trying to load category'\n//         setError(errorMessage)\n//       }\n//       setLoading(false)\n//     }\n//\n//     fetchData()\n//   }, [categorySlug])\n//\n//   // alert(key)\n//   return (\n//     <>\n//       <div className=\"home-carousel-section\">\n//         {loading ? (\n//           <div className=\"text-center\">\n//             <Loading loadingState={loading} />\n//           </div>\n//         ) : category ? (\n//           <CarouselSection category={category} idx={idx} />\n//         ) : error && (\n//           <div className=\"text-center\">\n//             {error}\n//           </div>\n//         )}\n//       </div>\n//       <br></br>\n//       <style jsx>{`\n//         .home-carousel-section {\n//             //margin-bottom: 75px;\n//             //margin-top: 75px;\n//         }\n//         @media (min-width: 768px) {\n//           .home-carousel-section {\n//             //margin-bottom: 55px;\n//           }\n//         }\n//       ` }</style>\n//     </>\n//   )\n// }\n//\n// const BannerSection = ({ id, movie }) => {\n//   const [banner, setBanner] = useState()\n//   const [loading, setLoading] = useState(false)\n//   const [error, setError] = useState()\n//\n//   useEffect(_ => {\n//     async function fetchData() {\n//       setLoading(true)\n//       try {\n//         const { data } = await (id ? api().get(`/banners/${id}`) : api().get(`/movie/${movie}`))\n//         setBanner(data)\n//\n//       } catch (error) {\n//         setError(true)\n//       }\n//       setLoading(false)\n//     }\n//\n//     fetchData()\n//   }, [id])\n//\n//   return (\n//     <div>\n//       <div className=\"section\">\n//\n//         {/* loading */}\n//         <div className=\"text-center\">\n//           <Loading loadingState={loading} />\n//         </div>\n//\n//         {/* features */}\n//         {banner && id &&\n//           <a className=\"sponsor-link\" href={banner.link} target=\"_blank\">\n//             <Featured img={banner.banner_url} />\n//           </a>\n//         }\n//\n//         {banner && movie &&\n//           <MediaLink media={banner.movie} passHref>\n//             <a>\n//               <Featured\n//                 className=\"gradient\"\n//                 img={banner.movie.poster_url}\n//               />\n//             </a>\n//           </MediaLink>\n//         }\n//\n//         {/* error */}\n//         {error && (\n//           <div className=\"text-center\">Error</div>\n//         )}\n//\n//       </div>\n//       <style jsx>{`\n//         .sponsor-link {\n//           color: white !important;\n//           text-decoration: none;\n//         }\n//         .sponsor-link:hover {\n//           color: white !important;\n//           text-decoration: none;\n//         }\n//         a:not([href]):not([tabindex]):hover {\n//           color: white !important;\n//           text-decoration: none;\n//         }\n//       ` }</style>\n//     </div>\n//   );\n// }\n"]},"metadata":{},"sourceType":"script"}