{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _s = $RefreshSig$();\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useRef } from \"react\";\n\nvar Input = function Input(_ref) {\n  _s();\n\n  var autoComplete = _ref.autoComplete,\n      autoFocus = _ref.autoFocus,\n      defaultValue = _ref.defaultValue,\n      id = _ref.id,\n      maxLength = _ref.maxLength,\n      name = _ref.name,\n      onChange = _ref.onChange,\n      onFocus = _ref.onFocus,\n      placeholder = _ref.placeholder,\n      required = _ref.required,\n      style = _ref.style,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? \"text\" : _ref$type,\n      value = _ref.value,\n      readOnly = _ref.readOnly,\n      disabled = _ref.disabled,\n      onKeyDown = _ref.onKeyDown;\n  // autofocus is bugging if has states/onChanges\n  var inputRef = useRef();\n  useEffect(function (_) {\n    if (autoFocus) {\n      inputRef.current.focus();\n    }\n  });\n  return __jsx(React.Fragment, null, __jsx(\"input\", _extends({\n    autoFocus: autoFocus,\n    ref: inputRef\n  }, {\n    autoComplete: autoComplete,\n    defaultValue: defaultValue,\n    id: id,\n    maxLength: maxLength,\n    name: name,\n    onChange: onChange,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    required: required,\n    style: style,\n    type: type,\n    value: value,\n    readOnly: readOnly,\n    disabled: disabled,\n    onKeyDown: onKeyDown\n  }, {\n    className: \"jsx-1623030887\" + \" \" + \"form-control\"\n  })), __jsx(_JSXStyle, {\n    id: \"1623030887\"\n  }, \".form-control.jsx-1623030887{border-color:rgba(var(--gray2-rgb),.55);border-width:2px;color:var(--black);}.form-control[disabled].jsx-1623030887{background-color:var(--gray);}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9yYWZhZWwvUHJvamVjdHMvc29tb3NnYWQvZGFsZS9jb21wb25lbnRzL2xheW91dC9BdXRoTW9kYWwvSW5wdXQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBcURpQixBQUdrRCxBQUtaLDZCQUMvQixXQUxtQixpQkFDRSxtQkFDckIiLCJmaWxlIjoiL1VzZXJzL3JhZmFlbC9Qcm9qZWN0cy9zb21vc2dhZC9kYWxlL2NvbXBvbmVudHMvbGF5b3V0L0F1dGhNb2RhbC9JbnB1dC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUVmZmVjdCwgdXNlUmVmIH0gZnJvbSBcInJlYWN0XCI7XG5cbmNvbnN0IElucHV0ID0gKHtcbiAgICAgICAgICAgICAgICAgYXV0b0NvbXBsZXRlLFxuICAgICAgICAgICAgICAgICBhdXRvRm9jdXMsXG4gICAgICAgICAgICAgICAgIGRlZmF1bHRWYWx1ZSxcbiAgICAgICAgICAgICAgICAgaWQsXG4gICAgICAgICAgICAgICAgIG1heExlbmd0aCxcbiAgICAgICAgICAgICAgICAgbmFtZSxcbiAgICAgICAgICAgICAgICAgb25DaGFuZ2UsXG4gICAgICAgICAgICAgICAgIG9uRm9jdXMsXG4gICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyLFxuICAgICAgICAgICAgICAgICByZXF1aXJlZCxcbiAgICAgICAgICAgICAgICAgc3R5bGUsXG4gICAgICAgICAgICAgICAgIHR5cGUgPSBcInRleHRcIixcbiAgICAgICAgICAgICAgICAgdmFsdWUsXG4gICAgICAgICAgICAgICAgIHJlYWRPbmx5LFxuICAgICAgICAgICAgICAgICBkaXNhYmxlZCxcblxuICAgICAgICAgICAgICAgICBvbktleURvd25cbiAgICAgICAgICAgICAgIH0pID0+IHtcblxuICAvLyBhdXRvZm9jdXMgaXMgYnVnZ2luZyBpZiBoYXMgc3RhdGVzL29uQ2hhbmdlc1xuICBjb25zdCBpbnB1dFJlZiA9IHVzZVJlZigpXG4gIHVzZUVmZmVjdChfID0+IHtcbiAgICBpZiAoYXV0b0ZvY3VzKSB7XG4gICAgICBpbnB1dFJlZi5jdXJyZW50LmZvY3VzKCk7XG4gICAgfVxuICB9KVxuXG4gIHJldHVybiA8PlxuICAgIDxpbnB1dFxuICAgICAgYXV0b0ZvY3VzPXsgYXV0b0ZvY3VzIH1cbiAgICAgIGNsYXNzTmFtZT1cImZvcm0tY29udHJvbFwiXG4gICAgICByZWY9eyBpbnB1dFJlZiB9XG4gICAgICB7IC4uLntcbiAgICAgICAgYXV0b0NvbXBsZXRlLFxuICAgICAgICBkZWZhdWx0VmFsdWUsXG4gICAgICAgIGlkLFxuICAgICAgICBtYXhMZW5ndGgsXG4gICAgICAgIG5hbWUsXG4gICAgICAgIG9uQ2hhbmdlLFxuICAgICAgICBvbkZvY3VzLFxuICAgICAgICBwbGFjZWhvbGRlcixcbiAgICAgICAgcmVxdWlyZWQsXG4gICAgICAgIHN0eWxlLFxuICAgICAgICB0eXBlLFxuICAgICAgICB2YWx1ZSxcbiAgICAgICAgcmVhZE9ubHksXG4gICAgICAgIGRpc2FibGVkLFxuICAgICAgICBvbktleURvd24sXG4gICAgICB9IH1cbiAgICAvPlxuICAgIDxzdHlsZSBqc3g+eyBgXG4gICAgICAuZm9ybS1jb250cm9sIHtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiByZ2JhKHZhcigtLWdyYXkyLXJnYiksIC41NSk7XG4gICAgICAgIGJvcmRlci13aWR0aDogMnB4O1xuICAgICAgICBjb2xvcjogdmFyKC0tYmxhY2spO1xuICAgICAgfVxuICAgICAgLmZvcm0tY29udHJvbFtkaXNhYmxlZF0ge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1ncmF5KTtcbiAgICAgIH1cbiAgICBgIH08L3N0eWxlPlxuICA8Lz5cbn1cblxuZXhwb3J0IGRlZmF1bHQgSW5wdXRcbiJdfQ== */\\n/*@ sourceURL=/Users/rafael/Projects/somosgad/dale/components/layout/AuthModal/Input.js */\"));\n};\n\n_s(Input, \"cBQ6FQ+sf5H+lvNONLKqtm4aeQ8=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/Users/rafael/Projects/somosgad/dale/components/layout/AuthModal/Input.js"],"names":["useEffect","useRef","Input","autoComplete","autoFocus","defaultValue","id","maxLength","name","onChange","onFocus","placeholder","required","style","type","value","readOnly","disabled","onKeyDown","inputRef","_","current","focus"],"mappings":";;;;;;;AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAkBO;AAAA;;AAAA,MAjBJC,YAiBI,QAjBJA,YAiBI;AAAA,MAhBJC,SAgBI,QAhBJA,SAgBI;AAAA,MAfJC,YAeI,QAfJA,YAeI;AAAA,MAdJC,EAcI,QAdJA,EAcI;AAAA,MAbJC,SAaI,QAbJA,SAaI;AAAA,MAZJC,IAYI,QAZJA,IAYI;AAAA,MAXJC,QAWI,QAXJA,QAWI;AAAA,MAVJC,OAUI,QAVJA,OAUI;AAAA,MATJC,WASI,QATJA,WASI;AAAA,MARJC,QAQI,QARJA,QAQI;AAAA,MAPJC,KAOI,QAPJA,KAOI;AAAA,uBANJC,IAMI;AAAA,MANJA,IAMI,0BANG,MAMH;AAAA,MALJC,KAKI,QALJA,KAKI;AAAA,MAJJC,QAII,QAJJA,QAII;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MADJC,SACI,QADJA,SACI;AAEnB;AACA,MAAMC,QAAQ,GAAGlB,MAAM,EAAvB;AACAD,EAAAA,SAAS,CAAC,UAAAoB,CAAC,EAAI;AACb,QAAIhB,SAAJ,EAAe;AACbe,MAAAA,QAAQ,CAACE,OAAT,CAAiBC,KAAjB;AACD;AACF,GAJQ,CAAT;AAMA,SAAO,4BACL;AACE,IAAA,SAAS,EAAGlB,SADd;AAGE,IAAA,GAAG,EAAGe;AAHR,KAIO;AACHhB,IAAAA,YAAY,EAAZA,YADG;AAEHE,IAAAA,YAAY,EAAZA,YAFG;AAGHC,IAAAA,EAAE,EAAFA,EAHG;AAIHC,IAAAA,SAAS,EAATA,SAJG;AAKHC,IAAAA,IAAI,EAAJA,IALG;AAMHC,IAAAA,QAAQ,EAARA,QANG;AAOHC,IAAAA,OAAO,EAAPA,OAPG;AAQHC,IAAAA,WAAW,EAAXA,WARG;AASHC,IAAAA,QAAQ,EAARA,QATG;AAUHC,IAAAA,KAAK,EAALA,KAVG;AAWHC,IAAAA,IAAI,EAAJA,IAXG;AAYHC,IAAAA,KAAK,EAALA,KAZG;AAaHC,IAAAA,QAAQ,EAARA,QAbG;AAcHC,IAAAA,QAAQ,EAARA,QAdG;AAeHC,IAAAA,SAAS,EAATA;AAfG,GAJP;AAAA,wCAEY;AAFZ,KADK;AAAA;AAAA,ikFAAP;AAkCD,CA9DD;;GAAMhB,K;;KAAAA,K;AAgEN,eAAeA,KAAf","sourcesContent":["import { useEffect, useRef } from \"react\";\n\nconst Input = ({\n                 autoComplete,\n                 autoFocus,\n                 defaultValue,\n                 id,\n                 maxLength,\n                 name,\n                 onChange,\n                 onFocus,\n                 placeholder,\n                 required,\n                 style,\n                 type = \"text\",\n                 value,\n                 readOnly,\n                 disabled,\n\n                 onKeyDown\n               }) => {\n\n  // autofocus is bugging if has states/onChanges\n  const inputRef = useRef()\n  useEffect(_ => {\n    if (autoFocus) {\n      inputRef.current.focus();\n    }\n  })\n\n  return <>\n    <input\n      autoFocus={ autoFocus }\n      className=\"form-control\"\n      ref={ inputRef }\n      { ...{\n        autoComplete,\n        defaultValue,\n        id,\n        maxLength,\n        name,\n        onChange,\n        onFocus,\n        placeholder,\n        required,\n        style,\n        type,\n        value,\n        readOnly,\n        disabled,\n        onKeyDown,\n      } }\n    />\n    <style jsx>{ `\n      .form-control {\n        border-color: rgba(var(--gray2-rgb), .55);\n        border-width: 2px;\n        color: var(--black);\n      }\n      .form-control[disabled] {\n        background-color: var(--gray);\n      }\n    ` }</style>\n  </>\n}\n\nexport default Input\n"]},"metadata":{},"sourceType":"module"}