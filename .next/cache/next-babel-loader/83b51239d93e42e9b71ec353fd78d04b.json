{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// nextjs imports\nimport Router from 'next/router';\nimport Head from 'next/head'; // import Link   from 'next/link'\n// react imports\n\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport nookies from 'nookies'; // app imports\n\nimport FormGroup from '~/components/layout/AuthModal/FormGroup';\nimport withAuth from '~/components/withAuth';\nimport { FkInput } from '~/components/Formik/fields';\nimport Layout from '~/components/layout/Layout';\nimport Button from '~/components/button';\nimport api from '~/services/api';\nimport { CONFIG } from '~/config';\nimport { StyleChangePassword } from '~/components/layout/changePassword/index';\nimport CardLogoHeader from '~/components/CardLogoHeader/index';\n\nvar passwordPage = function passwordPage(_ref) {\n  var layoutProps = _ref.layoutProps,\n      user = _ref.user;\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(fields, actions) {\n      var msg, _yield$api$post, message, errors, error;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              msg = undefined;\n              _context.prev = 1;\n              _context.next = 4;\n              return api().post('password', _objectSpread({\n                email: fields.username\n              }, fields));\n\n            case 4:\n              _yield$api$post = _context.sent;\n              message = _yield$api$post.data.message;\n              msg = {\n                success: message || \"Cambio de datos completo.\"\n              };\n              _context.next = 15;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              errors = _context.t0.response.data.errors;\n              error = _context.t0.message;\n              msg = errors ? actions.setErrors(errors) : {\n                error: 'Problemas al realizar esta operación. Inténtalo de nuevo más tarde'\n              };\n              console.log(error);\n\n            case 15:\n              _context.prev = 15;\n\n              if (msg) {\n                msg = JSON.stringify(msg);\n                nookies.set({}, 'flash_message', msg, {\n                  path: '/'\n                });\n                Router.push('/user/account');\n              }\n\n              return _context.finish(15);\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 9, 15, 18]]);\n    }));\n\n    return function handleSubmit(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Layout, layoutProps, __jsx(Head, null, __jsx(\"title\", null, \"Cambiar la Contrase\\xF1a < \", CONFIG.appName)), user && __jsx(Formik, {\n    initialValues: function (_ref4) {\n      var username = _ref4.email;\n      return {\n        username: username,\n        oldpassword: '',\n        password: '',\n        password_confirmation: ''\n      };\n    }(user),\n    validationSchema: getYupSchema(),\n    onSubmit: handleSubmit,\n    component: DataForm\n  }));\n};\n\nvar DataForm = function DataForm(_ref5) {\n  var isSubmitting = _ref5.isSubmitting,\n      status = _ref5.status;\n  return __jsx(Form, null, status && __jsx(\"div\", {\n    className: \"invalid-feedback\"\n  }, __jsx(\"h5\", null, status.error)), __jsx(CardLogoHeader, null, __jsx(StyleChangePassword, null, __jsx(\"h1\", {\n    className: \"h2\"\n  }, \"Cambiar la contrase\\xF1a\"), __jsx(\"div\", {\n    \"class\": \"painel\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(FormGroup, null, __jsx(FkInput, {\n    name: \"username\",\n    type: \"hidden\",\n    label: \"Username\",\n    autoComplete: \"username\"\n  }))), __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(FormGroup, null, __jsx(FkInput, {\n    name: \"oldpassword\",\n    type: \"password\",\n    label: \"Contrase\\xF1a anterior\",\n    autoComplete: \"current-password\"\n  }))), __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(FormGroup, null, __jsx(FkInput, {\n    name: \"password\",\n    type: \"password\",\n    label: \"Nueva contrase\\xF1a\",\n    autoComplete: \"new-password\"\n  })))), __jsx(\"div\", {\n    className: \"row row-aling\"\n  }, __jsx(\"div\", {\n    className: \"painel\"\n  }, __jsx(FormGroup, null, __jsx(FkInput, {\n    name: \"password_confirmation\",\n    type: \"password\",\n    label: \"Confirmar nueva contrase\\xF1a\",\n    autoComplete: \"new-password\"\n  })), __jsx(\"hr\", null)), __jsx(\"div\", {\n    className: \" aling-button\"\n  }, __jsx(Button, {\n    type: \"submit\",\n    disabled: isSubmitting,\n    loading: isSubmitting\n  }, \"Aceptar\"))))));\n}; // create Yup validation Schema\n\n\n_c = DataForm;\n\nvar getYupSchema = function getYupSchema(_) {\n  var nullable8CharMinString = Yup.string().nullable().required('Obligatorio').min(8, 'Debe tener 8 caracteres o más');\n  return Yup.object({\n    password: nullable8CharMinString.max(255, 'Debe tener 255 caracteres o menos'),\n    password_confirmation: nullable8CharMinString.max(255, 'Debe tener 255 caracteres o menos').oneOf([Yup.ref('password'), null], 'Las contraseñas deben coincidir'),\n    oldpassword: Yup.string().nullable()\n  });\n};\n\nexport default withAuth(passwordPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"DataForm\");","map":{"version":3,"sources":["/Users/rafael/Projects/somosgad/dale/pages/user/changePassword.js"],"names":["Router","Head","Formik","Form","Yup","nookies","FormGroup","withAuth","FkInput","Layout","Button","api","CONFIG","StyleChangePassword","CardLogoHeader","passwordPage","layoutProps","user","handleSubmit","fields","actions","msg","undefined","post","email","username","message","data","success","errors","response","error","setErrors","console","log","JSON","stringify","set","path","push","appName","oldpassword","password","password_confirmation","getYupSchema","DataForm","isSubmitting","status","_","nullable8CharMinString","string","nullable","required","min","object","max","oneOf","ref"],"mappings":"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","sourcesContent":["// nextjs imports\nimport Router from 'next/router'\nimport Head from 'next/head'\n// import Link   from 'next/link'\n\n// react imports\nimport { Formik, Form } from 'formik'\nimport * as Yup from 'yup'\nimport nookies from 'nookies'\n\n// app imports\nimport FormGroup from '~/components/layout/AuthModal/FormGroup'\nimport withAuth from '~/components/withAuth'\nimport { FkInput } from '~/components/Formik/fields'\nimport Layout from '~/components/layout/Layout'\nimport Button from '~/components/button'\nimport api from '~/services/api'\nimport { CONFIG } from '~/config'\nimport { StyleChangePassword } from '~/components/layout/changePassword/index'\nimport CardLogoHeader from '~/components/CardLogoHeader/index'\n\nconst passwordPage = ({ layoutProps, user }) => {\n\n  const handleSubmit = async (fields, actions) => {\n    var msg = undefined\n\n    try {\n      const { data: { message } } = await api().post('password', {\n        email: fields.username,\n        ...fields\n      })\n      msg = { success: message || \"Cambio de datos completo.\" }\n\n    } catch ({ response: { data: { errors } }, message: error }) {\n      msg = errors ?\n        actions.setErrors(errors) : { error: 'Problemas al realizar esta operación. Inténtalo de nuevo más tarde' }\n\n      console.log(error)\n\n    } finally {\n      if (msg) {\n        msg = JSON.stringify(msg)\n        nookies.set({}, 'flash_message', msg, { path: '/' })\n        Router.push('/user/account')\n      }\n    }\n  }\n\n  return (\n    <Layout {...layoutProps}>\n      <Head>\n        <title>Cambiar la Contraseña &lt; {CONFIG.appName}</title>\n      </Head>\n      {user &&\n        <Formik\n          initialValues={\n            (({ email: username }) => {\n              return { username, oldpassword: '', password: '', password_confirmation: '' }\n            })(user)\n          }\n          validationSchema={getYupSchema()}\n          onSubmit={handleSubmit}\n          component={DataForm}\n        />\n      }\n      {/* <style jsx>{`\n        .rgpage {\n          padding-top: 40px;\n          padding-bottom: 120px;\n        }\n        .h2 {\n          margin-bottom: 10px;\n        }\n        hr {\n          margin-top: 25px;\n          margin-bottom: 15px;\n          background-color: white;\n        }\n      `}</style> */}\n    </Layout>\n  );\n\n}\n\nconst DataForm = ({ isSubmitting, status }) => <Form>\n  {status && <div className=\"invalid-feedback\"><h5>{status.error}</h5></div>}\n  <CardLogoHeader>\n    <StyleChangePassword>\n      <h1 className=\"h2\">Cambiar la contraseña</h1>\n\n      <div class=\"painel\">\n        <div className=\"row\" >\n          <FormGroup>\n            <FkInput name=\"username\" type=\"hidden\"\n              label=\"Username\" autoComplete=\"username\" />\n          </FormGroup>\n        </div>\n        <div className=\"row\" >\n          <FormGroup>\n            <FkInput name=\"oldpassword\" type=\"password\"\n              label=\"Contraseña anterior\" autoComplete=\"current-password\" />\n          </FormGroup>\n        </div>\n        <div className=\"row\" >\n          <FormGroup>\n            <FkInput name=\"password\" type=\"password\"\n              label=\"Nueva contraseña\" autoComplete=\"new-password\" />\n          </FormGroup>\n        </div>\n      </div>\n      <div className=\"row row-aling\">\n        <div className=\"painel\">\n          <FormGroup >\n            <FkInput name=\"password_confirmation\" type=\"password\"\n              label=\"Confirmar nueva contraseña\" autoComplete=\"new-password\" />\n          </FormGroup>\n          <hr />\n        </div>\n        <div className=\" aling-button\">\n          <Button type=\"submit\" disabled={isSubmitting} loading={isSubmitting}>\n            Aceptar\n      </Button>\n        </div>\n      </div>\n\n    </StyleChangePassword>\n  </CardLogoHeader >\n</Form >\n\n// create Yup validation Schema\nconst getYupSchema = _ => {\n  const nullable8CharMinString = Yup.string()\n    .nullable().required('Obligatorio')\n    .min(8, 'Debe tener 8 caracteres o más');\n\n  return Yup.object({\n    password: nullable8CharMinString\n      .max(255, 'Debe tener 255 caracteres o menos'),\n    password_confirmation: nullable8CharMinString\n      .max(255, 'Debe tener 255 caracteres o menos')\n      .oneOf([Yup.ref('password'), null], 'Las contraseñas deben coincidir'),\n    oldpassword: Yup.string().nullable(),\n  })\n}\n\nexport default withAuth(passwordPage)\n"]},"metadata":{},"sourceType":"module"}