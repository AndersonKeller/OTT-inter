{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// nextjs imports\nimport Router from 'next/router';\nimport Head from 'next/head'; // react imports\n\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport nookies from 'nookies'; // app imports\n\nimport FormGroup from '~/components/layout/AuthModal/FormGroup';\nimport withAuth from '~/components/withAuth';\nimport { FkInput } from '~/components/Formik/fields';\nimport Layout from '~/components/layout/Layout';\nimport Button from '~/components/button';\nimport api from '~/services/api';\nimport { CONFIG } from '~/config';\n\nvar changeEmailPage = function changeEmailPage(_ref) {\n  var layoutProps = _ref.layoutProps,\n      user = _ref.user,\n      updateUser = _ref.updateUser;\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(fields, actions) {\n      var msg, res, _ref3, message;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              msg = '';\n              _context.prev = 1;\n              _context.next = 4;\n              return api().post('email', fields);\n\n            case 4:\n              res = _context.sent;\n              updateUser(res.data);\n              msg = JSON.stringify({\n                success: \"Acceda al correo electrónico para confirmación\"\n              });\n              _context.next = 14;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              _ref3 = _context.t0.message ? _context.t0 : _context.t0.response ? _context.t0.response.data : '', message = _ref3.message;\n              console.table(_context.t0);\n              msg = JSON.stringify({\n                error: \"An Error Occured while updating: \" + message\n              });\n\n            case 14:\n              _context.prev = 14;\n              nookies.set({}, 'flash_message', msg, {\n                path: '/'\n              });\n              Router.push('/user/account');\n              return _context.finish(14);\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 9, 14, 18]]);\n    }));\n\n    return function handleSubmit(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Layout, layoutProps, __jsx(Head, null, __jsx(\"title\", {\n    className: \"jsx-1975689037\"\n  }, \"Cambiar Email < \", CONFIG.appName)), __jsx(\"div\", {\n    className: \"jsx-1975689037\" + \" \" + \"rgpage container-fluid\"\n  }, __jsx(\"div\", {\n    className: \"jsx-1975689037\" + \" \" + \"row\"\n  }, __jsx(\"div\", {\n    className: \"jsx-1975689037\" + \" \" + \"col-md-8 offset-md-2\"\n  }, __jsx(\"h1\", {\n    className: \"jsx-1975689037\" + \" \" + \"h2\"\n  }, \"Cambiar Email\"), user && __jsx(Formik, {\n    initialValues: function (_ref4) {\n      var oldEmail = _ref4.email;\n      return {\n        oldEmail: oldEmail,\n        email: ''\n      };\n    }(user),\n    validationSchema: getYupSchema(),\n    onSubmit: handleSubmit,\n    component: DataForm\n  })))), __jsx(_JSXStyle, {\n    id: \"1975689037\"\n  }, [\".rgpage.jsx-1975689037{padding-top:40px;padding-bottom:120px;}\", \".h2.jsx-1975689037{margin-bottom:10px;}\", \"hr.jsx-1975689037{margin-top:25px;margin-bottom:15px;background-color:white;}\"]));\n};\n\nvar DataForm = function DataForm(_ref5) {\n  var isSubmitting = _ref5.isSubmitting;\n  return __jsx(Form, null, __jsx(FormGroup, null, __jsx(FkInput, {\n    name: \"oldEmail\",\n    label: \"Email Actual\",\n    type: \"email\",\n    disabled: true\n  })), __jsx(FormGroup, null, __jsx(FkInput, {\n    name: \"email\",\n    label: \"Nuevo Email\",\n    type: \"email\"\n  })), __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-md-12 text-right\"\n  }, __jsx(Button, {\n    type: \"submit\",\n    disabled: isSubmitting,\n    loading: isSubmitting\n  }, \"Cambiar datos\"))));\n}; // create Yup validation Schema\n\n\nvar getYupSchema = function getYupSchema(_) {\n  var nullable3CharMinString = Yup.string().trim().nullable().required('Obligatorio').min(3, 'Debe tener 3 caracteres o más.');\n  return Yup.object({\n    email: nullable3CharMinString.email('Correo inválido')\n  });\n};\n\nexport default withAuth(changeEmailPage);","map":{"version":3,"sources":["/Users/rafael/Projects/somosgad/dale/pages/user/changeEmail.js"],"names":["Router","Head","Formik","Form","Yup","nookies","FormGroup","withAuth","FkInput","Layout","Button","api","CONFIG","changeEmailPage","layoutProps","user","updateUser","handleSubmit","fields","actions","msg","post","res","data","JSON","stringify","success","message","response","console","table","error","set","path","push","appName","oldEmail","email","getYupSchema","DataForm","isSubmitting","_","nullable3CharMinString","string","trim","nullable","required","min","object"],"mappings":"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","sourcesContent":["// nextjs imports\nimport Router from 'next/router'\nimport Head   from 'next/head'\n\n// react imports\nimport { Formik, Form } from 'formik'\nimport * as Yup from 'yup'\n\nimport nookies from 'nookies'\n\n// app imports\nimport FormGroup    from '~/components/layout/AuthModal/FormGroup'\nimport withAuth     from '~/components/withAuth'\nimport { FkInput }  from '~/components/Formik/fields'\nimport Layout       from '~/components/layout/Layout'\nimport Button       from '~/components/button'\nimport api          from '~/services/api'\nimport { CONFIG }   from '~/config'\n\nconst changeEmailPage = ({ layoutProps, user, updateUser }) => {\n\n  const handleSubmit = async (fields, actions) => {\n    var msg = ''\n\n    try {\n      const res = await api().post('email',fields)\n      updateUser(res.data)\n      msg = JSON.stringify({ success: \"Acceda al correo electrónico para confirmación\" })\n\n    }catch(error) {\n      var { message } = error.message ? error : error.response ? error.response.data : ''\n      console.table(error);\n      msg = JSON.stringify({ error: \"An Error Occured while updating: \" + message })\n    }finally {\n      nookies.set({}, 'flash_message', msg , { path: '/' })\n      Router.push('/user/account')\n    }\n  }\n\n  return (\n    <Layout {...layoutProps}>\n      <Head>\n        <title>Cambiar Email &lt; {CONFIG.appName}</title>\n      </Head>\n      <div className=\"rgpage container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-8 offset-md-2\">\n            <h1 className=\"h2\">Cambiar Email</h1>\n            { user &&\n              <Formik\n                initialValues={\n                  (({ email: oldEmail }) => {\n                    return { oldEmail, email: '' }\n                  })(user)\n                }\n                validationSchema={ getYupSchema() }\n                onSubmit={handleSubmit}\n                component={DataForm}\n              />\n            }\n          </div>\n        </div>\n      </div>\n      <style jsx>{`\n        .rgpage {\n          padding-top: 40px;\n          padding-bottom: 120px;\n        }\n        .h2 {\n          margin-bottom: 10px;\n        }\n        hr {\n          margin-top: 25px;\n          margin-bottom: 15px;\n          background-color: white;\n        }\n      `}</style>\n    </Layout>\n  );\n}\n\nconst DataForm = ({ isSubmitting }) => <Form>\n  <FormGroup>\n    <FkInput name=\"oldEmail\" label=\"Email Actual\" type=\"email\" disabled />\n  </FormGroup>\n  <FormGroup>\n    <FkInput name=\"email\" label=\"Nuevo Email\" type=\"email\" />\n  </FormGroup>\n\n  <div className=\"row\">\n    <div className=\"col-md-12 text-right\">\n      <Button type=\"submit\" disabled={isSubmitting} loading={isSubmitting}>\n        Cambiar datos\n      </Button>\n    </div>\n  </div>\n</Form>\n\n// create Yup validation Schema\nconst getYupSchema = _ => {\n  const nullable3CharMinString = Yup.string()\n    .trim().nullable()\n    .required('Obligatorio')\n    .min(3, 'Debe tener 3 caracteres o más.')\n\n  return Yup.object({\n    email: nullable3CharMinString\n      .email('Correo inválido'),\n  })\n}\n\nexport default withAuth(changeEmailPage)\n"]},"metadata":{},"sourceType":"module"}