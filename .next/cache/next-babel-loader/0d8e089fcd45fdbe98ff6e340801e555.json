{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UserProvider = UserProvider;\nexports.default = void 0;\n\nvar _react = require(\"react\");\n\nvar _router = _interopRequireDefault(require(\"next/router\"));\n\nvar _jsonParseSafe = _interopRequireDefault(require(\"json-parse-safe\"));\n\nvar _nookies = _interopRequireDefault(require(\"nookies\"));\n\nvar _api = _interopRequireDefault(require(\"../services/api\"));\n\nvar _auth = require(\"../services/auth\");\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst UserContext = (0, _react.createContext)();\nvar _default = UserContext;\nexports.default = _default;\n\nfunction UserProvider({\n  children\n}) {\n  const {\n    user: userString\n  } = _nookies.default.get({}, 'user');\n\n  const userCookie = (0, _jsonParseSafe.default)(userString).value;\n  const {\n    0: user,\n    1: setUser\n  } = (0, _react.useState)(userCookie);\n\n  const signIn = (user, tokenResponse) => {\n    const {\n      access_token,\n      expires_in,\n      refresh_token,\n      token_type\n    } = tokenResponse;\n    (0, _auth.setAccessToken)(access_token);\n    localStorage.setItem('token_type', token_type);\n    localStorage.setItem('expires_in', expires_in);\n    localStorage.setItem('refresh_token', refresh_token);\n    localStorage.setItem('user', JSON.stringify(user));\n\n    _nookies.default.set({}, 'user', JSON.stringify(user), {\n      path: '/'\n    });\n\n    setUser(user);\n\n    if (!user.register_completed_at) {\n      _router.default.replace('/register/complete');\n    }\n  };\n\n  const signOut = async _ => {\n    (0, _api.default)().post('logout').then(response => {\n      console.log('Logout successfully', response);\n      (0, _auth.removeAccessToken)();\n      localStorage.removeItem('token_type');\n      localStorage.removeItem('expires_in');\n      localStorage.removeItem('refresh_token');\n    }).catch(error => {\n      console.log(\"Couldn't logout\", error);\n    });\n    localStorage.removeItem('user');\n\n    _nookies.default.destroy({}, 'user', {\n      path: '/'\n    });\n\n    setUser(null); // Router.push('/signin')\n    // location.href = location.protocol + '//' + location.host + location.pathname\n  };\n\n  const updateUser = user => {\n    const userString = JSON.stringify(user);\n    localStorage.setItem('user', userString);\n\n    _nookies.default.set({}, 'user', userString, {\n      path: '/'\n    });\n\n    setUser(user);\n  };\n\n  const completeUserProfile = user => {};\n\n  return __jsx(UserContext.Provider, {\n    value: _objectSpread({}, {\n      user,\n      signIn,\n      signOut,\n      updateUser\n    })\n  }, children);\n}","map":{"version":3,"sources":["/Users/rafael/Projects/somosgad/dale/contexts/UserContext.js"],"names":["UserContext","UserProvider","children","user","userString","nookies","get","userCookie","value","setUser","signIn","tokenResponse","access_token","expires_in","refresh_token","token_type","localStorage","setItem","JSON","stringify","set","path","register_completed_at","Router","replace","signOut","_","post","then","response","console","log","removeItem","catch","error","destroy","updateUser","completeUserProfile"],"mappings":"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","sourcesContent":["import { createContext, useState, useEffect } from 'react'\n\nimport Router from 'next/router'\n\nimport SafeJSONParse from 'json-parse-safe'\nimport nookies from 'nookies'\n\nimport api from '../services/api'\nimport { setAccessToken, removeAccessToken } from '../services/auth'\n\nconst UserContext = createContext()\n\nexport default UserContext\n\nexport function UserProvider({ children }) {\n\n  const { user: userString } = nookies.get({}, 'user')\n  const userCookie = SafeJSONParse(userString).value\n  const [ user, setUser ] = useState(userCookie)\n\n  const signIn = (user, tokenResponse) => {\n\n    const {\n      access_token,\n      expires_in,\n      refresh_token,\n      token_type,\n    } = tokenResponse\n\n    setAccessToken(access_token)\n\n    localStorage.setItem('token_type', token_type)\n    localStorage.setItem('expires_in', expires_in)\n    localStorage.setItem('refresh_token', refresh_token)\n\n    localStorage.setItem('user', JSON.stringify(user))\n    nookies.set({}, 'user', JSON.stringify(user), { path: '/' })\n    setUser(user)\n\n    if ( ! user.register_completed_at) {\n      Router.replace('/register/complete')\n    }\n  }\n\n  const signOut = async _ => {\n\n    api().post('logout').then((response) => {\n      console.log('Logout successfully', response)\n      removeAccessToken()\n      localStorage.removeItem('token_type')\n      localStorage.removeItem('expires_in')\n      localStorage.removeItem('refresh_token')\n\n    }).catch((error) => {\n      console.log(\"Couldn't logout\", error)\n    })\n\n    localStorage.removeItem('user')\n    nookies.destroy({}, 'user', { path: '/' })\n    setUser(null)\n    // Router.push('/signin')\n    // location.href = location.protocol + '//' + location.host + location.pathname\n  }\n\n  const updateUser = user => {\n    const userString = JSON.stringify(user)\n    localStorage.setItem('user', userString)\n    nookies.set({}, 'user', userString, { path: '/' })\n    setUser(user)\n  }\n\n  const completeUserProfile = user => {\n\n\n\n  }\n\n  return (\n    <UserContext.Provider value={{...{ user, signIn, signOut, updateUser }}}>\n      {children}\n    </UserContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"script"}