{"ast":null,"code":"var __jsx = React.createElement;\nimport withAuth from \"~/components/withAuth\";\nimport Layout from \"~/components/layout/Layout\";\nimport UserData from \"./user-data\";\nimport UserAddress from \"./user-address\";\nimport SubscriptionSuccess from \"./subscription-success\";\nimport React, { useState } from \"react\";\nimport { IS_PRODUCTION } from \"~/constants/constants\";\nimport Header from '~/components/layout/HeaderCad';\nimport Payment from \"~/pages/register/wizard/payment\";\nimport Packages from \"./packages\";\nimport MultiStepIndicator from \"~/components/MultiStepIndicator\";\nimport { STATIC_PATH, TENANT } from '~/constants/constants';\nimport LogoApp from '~/components/LogoApp';\n\nconst CompleteTest = ({\n  api,\n  layoutProps,\n  packages,\n  user\n}) => {\n  const handleSubmit = (index, userData) => {\n    setWizardIndex(index);\n    setUserData(userData);\n  };\n\n  const requireds = IS_PRODUCTION;\n  const {\n    0: userData,\n    1: setUserData\n  } = useState();\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    package_id: '',\n    payment_method_id: null,\n    payment_os: null,\n    cash_payment_method_id: null,\n    terms: null,\n    discount_id: null\n  });\n  const {\n    0: wizardIndex,\n    1: setWizardIndex\n  } = useState(0);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState();\n  const {\n    0: error,\n    1: setError\n  } = useState();\n\n  const changeIndex = idx => {\n    setWizardIndex(idx);\n  };\n\n  const selectPackage = packageId => {\n    setValues({\n      package_id: packageId\n    });\n  };\n\n  function renderComponents() {\n    switch (wizardIndex) {\n      case 0:\n        return __jsx(UserData, {\n          api: api,\n          layoutProps: layoutProps,\n          handleSubmit: handleSubmit\n        });\n\n      case 1:\n        return __jsx(UserAddress, {\n          api: api,\n          layoutProps: layoutProps,\n          handleSubmit: handleSubmit\n        });\n\n      case 2:\n        return __jsx(Packages, {\n          packages: packages,\n          layoutProps: layoutProps,\n          selectPackage: selectPackage,\n          handleSubmit: handleSubmit\n        });\n\n      case 3:\n        return __jsx(Payment, {\n          package_id: values.package_id,\n          packages: packages,\n          userData: userData,\n          api,\n          error,\n          requireds\n        });\n\n      case 4:\n        return __jsx(SubscriptionSuccess, {\n          api\n        });\n    }\n  }\n\n  return __jsx(Layout, {\n    header: \"hidden\",\n    footer: \"hidden\",\n    customClass: \"subscription-screen\"\n  }, __jsx(Header, null), __jsx(MultiStepIndicator, {\n    index: wizardIndex,\n    onClick: handleSubmit\n  }), __jsx(\"div\", {\n    className: \"card-wrapper d-flex align-items-center justify-content-center h-100\",\n    style: {\n      backgroundImage: `url('/static/${TENANT}/subs/background.jpg')`\n    }\n  }, __jsx(\"div\", {\n    className: \"card\"\n  }, __jsx(\"div\", {\n    className: \"card-header text-center\"\n  }, __jsx(\"div\", {\n    className: \"img-logoApp-card\"\n  }, \" \", __jsx(LogoApp, null))), __jsx(\"div\", {\n    className: \"card-body\"\n  }, renderComponents()))), __jsx(\"style\", {\n    sjx: true\n  }, `\n\n      `));\n};\n\nCompleteTest.getInitialProps = async ctx => {\n  const {\n    api,\n    res,\n    user\n  } = ctx; // if user has already completed registry, redirect it\n  // if (user.register_completed_at) {\n  //   let message = JSON.stringify({ info: \"Ya ha completado su registro.\" })\n  //   nookies.set(ctx, 'flash_message', message, { path: '/' })\n  //   if (res) {\n  //     res.redirect('/')\n  //     res.end()\n  //     return {}\n  //   } else {\n  //     Router.back()\n  //   }\n  // }\n  // get packages\n\n  let packages;\n\n  try {\n    const {\n      data\n    } = await api.get('packages');\n    packages = {\n      items: data\n    };\n  } catch (error) {\n    packages = {\n      error\n    };\n  } // return\n\n\n  return {\n    packages,\n    user\n  };\n};\n\nexport default withAuth(CompleteTest, true);","map":{"version":3,"sources":["/Users/rafael/Projects/somosgad/dale/pages/register/wizard/complete-test.js"],"names":["withAuth","Layout","UserData","UserAddress","SubscriptionSuccess","React","useState","IS_PRODUCTION","Header","Payment","Packages","MultiStepIndicator","STATIC_PATH","TENANT","LogoApp","CompleteTest","api","layoutProps","packages","user","handleSubmit","index","userData","setWizardIndex","setUserData","requireds","values","setValues","package_id","payment_method_id","payment_os","cash_payment_method_id","terms","discount_id","wizardIndex","loading","setLoading","error","setError","changeIndex","idx","selectPackage","packageId","renderComponents","backgroundImage","getInitialProps","ctx","res","data","get","items"],"mappings":"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","sourcesContent":["import withAuth from \"~/components/withAuth\";\nimport Layout from \"~/components/layout/Layout\";\nimport UserData from \"./user-data\";\nimport UserAddress from \"./user-address\"\nimport SubscriptionSuccess from \"./subscription-success\"\nimport React, { useState } from \"react\";\nimport { IS_PRODUCTION } from \"~/constants/constants\";\nimport Header from '~/components/layout/HeaderCad'\nimport Payment from \"~/pages/register/wizard/payment\";\nimport Packages from \"./packages\"\nimport MultiStepIndicator from \"~/components/MultiStepIndicator\";\nimport { STATIC_PATH, TENANT } from '~/constants/constants'\nimport LogoApp from '~/components/LogoApp';\n\n\n\nconst CompleteTest = ({ api, layoutProps, packages, user }) => {\n\n\n  const handleSubmit = (index, userData) => {\n    setWizardIndex(index);\n    setUserData(userData);\n  }\n\n\n\n  const requireds = IS_PRODUCTION\n  const [userData, setUserData] = useState();\n\n  const [values, setValues] = useState({\n    package_id: '',\n    payment_method_id: null,\n    payment_os: null,\n    cash_payment_method_id: null,\n    terms: null,\n    discount_id: null,\n  })\n\n  const [wizardIndex, setWizardIndex] = useState(0);\n\n  const [loading, setLoading] = useState()\n  const [error, setError] = useState()\n\n\n  const changeIndex = (idx) => {\n    setWizardIndex(idx);\n  }\n\n  const selectPackage = (packageId) => {\n    setValues({\n      package_id: packageId\n    })\n  }\n\n  function renderComponents() {\n\n    switch (wizardIndex) {\n\n      case 0:\n        return <UserData\n          api={api}\n          layoutProps={layoutProps}\n          handleSubmit={handleSubmit}\n        />\n      case 1:\n        return <UserAddress\n          api={api}\n          layoutProps={layoutProps}\n          handleSubmit={handleSubmit} />\n      case 2:\n        return <Packages packages={packages} layoutProps={layoutProps} selectPackage={selectPackage}\n          handleSubmit={handleSubmit} />\n      case 3:\n        return <Payment\n          {...{\n            package_id: values.package_id,\n            packages: packages,\n            userData: userData,\n            api,\n            error,\n            requireds,\n          }}\n        />\n      case 4:\n        return <SubscriptionSuccess\n          {...{\n            api\n          }\n          } />\n\n    }\n  }\n\n  return (\n\n\n\n    <Layout header={\"hidden\"} footer={\"hidden\"} customClass={\"subscription-screen\"}>\n      <Header />\n\n\n      <MultiStepIndicator index={wizardIndex} onClick={handleSubmit} />\n      <div\n        className=\"card-wrapper d-flex align-items-center justify-content-center h-100\"\n        style={ {\n          backgroundImage: `url('/static/${ TENANT }/subs/background.jpg')`,\n        } }\n      >\n        <div className=\"card\">\n          <div className={\"card-header text-center\"}>\n            <div className=\"img-logoApp-card\"> <LogoApp /></div>\n          </div>\n          <div className=\"card-body\">\n            {renderComponents()}\n          </div>\n        </div>\n      </div>\n      <style sjx>{`\n\n      `}\n\n      </style>\n\n    </Layout>\n\n\n  )\n\n}\n\nCompleteTest.getInitialProps = async ctx => {\n\n  const { api, res, user } = ctx\n\n  // if user has already completed registry, redirect it\n  // if (user.register_completed_at) {\n  //   let message = JSON.stringify({ info: \"Ya ha completado su registro.\" })\n  //   nookies.set(ctx, 'flash_message', message, { path: '/' })\n  //   if (res) {\n  //     res.redirect('/')\n  //     res.end()\n  //     return {}\n  //   } else {\n  //     Router.back()\n  //   }\n  // }\n\n  // get packages\n  let packages\n  try {\n    const { data } = await api.get('packages')\n    packages = { items: data }\n  } catch (error) {\n    packages = { error }\n  }\n\n  // return\n  return { packages, user }\n}\n\n\nexport default withAuth(CompleteTest, true);\n"]},"metadata":{},"sourceType":"module"}