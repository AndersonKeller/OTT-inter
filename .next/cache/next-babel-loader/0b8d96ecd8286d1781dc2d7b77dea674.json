{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport withAuth from \"~/components/withAuth\";\nimport Layout from \"~/components/layout/Layout\";\nimport UserData from \"./user-data\";\nimport UserAddress from \"./user-address\";\nimport SubscriptionSuccess from \"./subscription-success\";\nimport React, { useState } from \"react\";\nimport { IS_PRODUCTION } from \"~/constants/constants\";\nimport Header from '~/components/layout/HeaderCad';\nimport Payment from \"~/pages/register/wizard/payment\";\nimport Packages from \"./packages\";\nimport MultiStepIndicator from \"~/components/MultiStepIndicator\";\nimport { STATIC_PATH, TENANT } from '~/constants/constants';\nimport LogoApp from '~/components/LogoApp';\n\nvar CompleteTest = function CompleteTest(_ref) {\n  _s();\n\n  var api = _ref.api,\n      layoutProps = _ref.layoutProps,\n      packages = _ref.packages,\n      user = _ref.user;\n\n  var handleSubmit = function handleSubmit(index, userData) {\n    setWizardIndex(index);\n    setUserData(userData);\n  };\n\n  var requireds = IS_PRODUCTION;\n\n  var _useState = useState(),\n      userData = _useState[0],\n      setUserData = _useState[1];\n\n  var _useState2 = useState({\n    package_id: '',\n    payment_method_id: null,\n    payment_os: null,\n    cash_payment_method_id: null,\n    terms: null,\n    discount_id: null\n  }),\n      values = _useState2[0],\n      setValues = _useState2[1];\n\n  var _useState3 = useState(0),\n      wizardIndex = _useState3[0],\n      setWizardIndex = _useState3[1];\n\n  var _useState4 = useState(),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(),\n      error = _useState5[0],\n      setError = _useState5[1];\n\n  var changeIndex = function changeIndex(idx) {\n    setWizardIndex(idx);\n  };\n\n  var selectPackage = function selectPackage(packageId) {\n    setValues({\n      package_id: packageId\n    });\n  };\n\n  function renderComponents() {\n    switch (wizardIndex) {\n      case 0:\n        return __jsx(UserData, {\n          api: api,\n          layoutProps: layoutProps,\n          handleSubmit: handleSubmit\n        });\n\n      case 1:\n        return __jsx(UserAddress, {\n          api: api,\n          layoutProps: layoutProps,\n          handleSubmit: handleSubmit\n        });\n\n      case 2:\n        return __jsx(Packages, {\n          packages: packages,\n          layoutProps: layoutProps,\n          selectPackage: selectPackage,\n          handleSubmit: handleSubmit\n        });\n\n      case 3:\n        return __jsx(Payment, {\n          package_id: values.package_id,\n          packages: packages,\n          userData: userData,\n          api: api,\n          error: error,\n          requireds: requireds,\n          handleSubmit: handleSubmit\n        });\n\n      case 4:\n        return __jsx(SubscriptionSuccess, {\n          api: api\n        });\n    }\n  }\n\n  return __jsx(Layout, {\n    header: \"hidden\",\n    footer: \"hidden\",\n    customClass: \"subscription-screen\"\n  }, __jsx(Header, null), __jsx(MultiStepIndicator, {\n    index: wizardIndex,\n    onClick: handleSubmit\n  }), __jsx(\"div\", {\n    className: \"card-wrapper d-flex align-items-center justify-content-center h-100 responsive\",\n    style: {\n      backgroundImage: \"url('/static/\".concat(TENANT, \"/subs/background.jpg')\")\n    }\n  }, __jsx(\"div\", {\n    className: \"card\"\n  }, __jsx(\"div\", {\n    className: \"card-header text-center\",\n    style: {\n      backgroundColor: \"#242627\",\n      padding: \"25px 15px\",\n      border: \"none\",\n      borderRadius: \"0\",\n      justifyContent: \"center\",\n      display: \"flex\",\n      width: \"100%\"\n    }\n  }, __jsx(\"div\", {\n    className: \"img-logoApp-card img\"\n  }, \" \", __jsx(LogoApp, null))), __jsx(\"div\", {\n    className: \"card-body\"\n  }, renderComponents()))), __jsx(\"style\", {\n    sjx: true\n  }, \"\\n\\n        .signup-screen .card-wrapper .card .card-header\\n        .img-logoApp-card img,\\n        .subscription-screen .card-wrapper .card .card-header .img-logoApp-card img {\\n           width: 100%!important;\\n        }\\n        .signup-screen .card-wrapper .card .card-body, .subscription-screen .card-wrapper .card .card-body {\\n           height:100%!important;\\n          }\\n\\n        .img-logoApp-card{\\n          max-width: 200px;\\n        }\\n\\n         @media(max-width: 765px) {\\n\\n        .responsive{\\n         padding: 127px 30px 15px 30px!important;\\n          // padding: 40px!important;\\n          padding: 0px;\\n          display: flex;\\n          flex-wrap: wrap;\\n          height:100%!important;\\n\\n          }\\n         .card{\\n          //  height:100%!important;\\n           margin:10px 0px!important;\\n           background-color: rgba(255,255,255,0.85);\\n\\n         }\\n\\n        .card-body{\\n          background-image: url()!important;\\n          // height:100%!important;\\n         }\\n\\n         label {\\n        display: inline-block;\\n         margin-bottom: .5rem;\\n         text-align: center;\\n            }\\n\\n         .justify-content-end {\\n           display:flex;\\n           justify-content:center!important;\\n         }\\n         form{\\n           padding 0px!important;\\n         }\\n         .row {\\n          display: -ms-flexbox;\\n          display: flex;\\n          -ms-flex-wrap: wrap;\\n           margin-right: 0px;\\n           margin-left: 0px;\\n          }\\n        .col-8 {\\n         max-width: 100%!important;\\n          }\\n        }\\n\\n      \"));\n};\n\n_s(CompleteTest, \"YAsopbXYZgBcJZBhQMVhvORzPP8=\");\n\n_c = CompleteTest;\n\nCompleteTest.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var api, res, user, packages, _yield$api$get, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            api = ctx.api, res = ctx.res, user = ctx.user; // if user has already completed registry, redirect it\n            // if (user.register_completed_at) {\n            //   let message = JSON.stringify({ info: \"Ya ha completado su registro.\" })\n            //   nookies.set(ctx, 'flash_message', message, { path: '/' })\n            //   if (res) {\n            //     res.redirect('/')\n            //     res.end()\n            //     return {}\n            //   } else {\n            //     Router.back()\n            //   }\n            // }\n            // get packages\n\n            _context.prev = 1;\n            _context.next = 4;\n            return api.get('packages');\n\n          case 4:\n            _yield$api$get = _context.sent;\n            data = _yield$api$get.data;\n            packages = {\n              items: data\n            };\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](1);\n            packages = {\n              error: _context.t0\n            };\n\n          case 12:\n            return _context.abrupt(\"return\", {\n              packages: packages,\n              user: user\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 9]]);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default _c2 = withAuth(CompleteTest, true);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CompleteTest\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/rafael/Projects/somosgad/dale/pages/register/wizard/complete-test.js"],"names":["withAuth","Layout","UserData","UserAddress","SubscriptionSuccess","React","useState","IS_PRODUCTION","Header","Payment","Packages","MultiStepIndicator","STATIC_PATH","TENANT","LogoApp","CompleteTest","api","layoutProps","packages","user","handleSubmit","index","userData","setWizardIndex","setUserData","requireds","package_id","payment_method_id","payment_os","cash_payment_method_id","terms","discount_id","values","setValues","wizardIndex","loading","setLoading","error","setError","changeIndex","idx","selectPackage","packageId","renderComponents","backgroundImage","backgroundColor","padding","border","borderRadius","justifyContent","display","width","getInitialProps","ctx","res","get","data","items"],"mappings":"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","sourcesContent":["import withAuth from \"~/components/withAuth\";\nimport Layout from \"~/components/layout/Layout\";\nimport UserData from \"./user-data\";\nimport UserAddress from \"./user-address\"\nimport SubscriptionSuccess from \"./subscription-success\"\nimport React, { useState } from \"react\";\nimport { IS_PRODUCTION } from \"~/constants/constants\";\nimport Header from '~/components/layout/HeaderCad'\nimport Payment from \"~/pages/register/wizard/payment\";\nimport Packages from \"./packages\"\nimport MultiStepIndicator from \"~/components/MultiStepIndicator\";\nimport { STATIC_PATH, TENANT } from '~/constants/constants'\nimport LogoApp from '~/components/LogoApp';\n\n\n\n\nconst CompleteTest = ({ api, layoutProps, packages, user }) => {\n\n\n  const handleSubmit = (index, userData) => {\n    setWizardIndex(index);\n    setUserData(userData);\n  }\n\n\n\n  const requireds = IS_PRODUCTION\n  const [userData, setUserData] = useState();\n\n  const [values, setValues] = useState({\n    package_id: '',\n    payment_method_id: null,\n    payment_os: null,\n    cash_payment_method_id: null,\n    terms: null,\n    discount_id: null,\n  })\n\n  const [wizardIndex, setWizardIndex] = useState(0);\n\n  const [loading, setLoading] = useState()\n  const [error, setError] = useState()\n\n\n  const changeIndex = (idx) => {\n    setWizardIndex(idx);\n  }\n\n  const selectPackage = (packageId) => {\n    setValues({\n      package_id: packageId\n    })\n  }\n\n  function renderComponents() {\n\n    switch (wizardIndex) {\n\n      case 0:\n        return <UserData\n          api={api}\n          layoutProps={layoutProps}\n          handleSubmit={handleSubmit}\n        />\n      case 1:\n        return <UserAddress\n          api={api}\n          layoutProps={layoutProps}\n          handleSubmit={handleSubmit} />\n      case 2:\n        return <Packages packages={packages} layoutProps={layoutProps} selectPackage={selectPackage}\n          handleSubmit={handleSubmit} />\n      case 3:\n        return <Payment\n          {...{\n            package_id: values.package_id,\n            packages: packages,\n            userData: userData,\n            api,\n            error,\n            requireds,\n            handleSubmit\n          }}\n        />\n      case 4:\n        return <SubscriptionSuccess\n          {...{\n            api\n          }\n          } />\n\n    }\n  }\n\n  return (\n\n\n\n    <Layout header={\"hidden\"} footer={\"hidden\"} customClass={\"subscription-screen\"}>\n      <Header />\n\n\n      <MultiStepIndicator index={wizardIndex} onClick={handleSubmit} />\n      <div\n        className=\"card-wrapper d-flex align-items-center justify-content-center h-100 responsive\"\n        style={{\n          backgroundImage: `url('/static/${TENANT}/subs/background.jpg')`,\n        }}\n      >\n        <div className=\"card\">\n          <div className={\"card-header text-center\"} style={{\n            backgroundColor: \"#242627\",\n            padding: \"25px 15px\",\n            border: \"none\",\n            borderRadius: \"0\",\n            justifyContent: \"center\",\n            display: \"flex\",\n            width: \"100%\",\n          }}>\n            <div className=\"img-logoApp-card img\"> <LogoApp /></div>\n          </div>\n          <div className=\"card-body\">\n            {renderComponents()}\n          </div>\n        </div>\n      </div>\n      <style sjx>{`\n\n        .signup-screen .card-wrapper .card .card-header\n        .img-logoApp-card img,\n        .subscription-screen .card-wrapper .card .card-header .img-logoApp-card img {\n           width: 100%!important;\n        }\n        .signup-screen .card-wrapper .card .card-body, .subscription-screen .card-wrapper .card .card-body {\n           height:100%!important;\n          }\n\n        .img-logoApp-card{\n          max-width: 200px;\n        }\n\n         @media(max-width: 765px) {\n\n        .responsive{\n         padding: 127px 30px 15px 30px!important;\n          // padding: 40px!important;\n          padding: 0px;\n          display: flex;\n          flex-wrap: wrap;\n          height:100%!important;\n\n          }\n         .card{\n          //  height:100%!important;\n           margin:10px 0px!important;\n           background-color: rgba(255,255,255,0.85);\n\n         }\n\n        .card-body{\n          background-image: url()!important;\n          // height:100%!important;\n         }\n\n         label {\n        display: inline-block;\n         margin-bottom: .5rem;\n         text-align: center;\n            }\n\n         .justify-content-end {\n           display:flex;\n           justify-content:center!important;\n         }\n         form{\n           padding 0px!important;\n         }\n         .row {\n          display: -ms-flexbox;\n          display: flex;\n          -ms-flex-wrap: wrap;\n           margin-right: 0px;\n           margin-left: 0px;\n          }\n        .col-8 {\n         max-width: 100%!important;\n          }\n        }\n\n      `}\n\n      </style>\n\n    </Layout>\n\n\n  )\n\n}\n\nCompleteTest.getInitialProps = async ctx => {\n\n  const { api, res, user } = ctx\n\n  // if user has already completed registry, redirect it\n  // if (user.register_completed_at) {\n  //   let message = JSON.stringify({ info: \"Ya ha completado su registro.\" })\n  //   nookies.set(ctx, 'flash_message', message, { path: '/' })\n  //   if (res) {\n  //     res.redirect('/')\n  //     res.end()\n  //     return {}\n  //   } else {\n  //     Router.back()\n  //   }\n  // }\n\n  // get packages\n  let packages\n  try {\n    const { data } = await api.get('packages')\n    packages = { items: data }\n  } catch (error) {\n    packages = { error }\n  }\n\n  // return\n  return { packages, user }\n}\n\n\nexport default withAuth(CompleteTest, true);\n"]},"metadata":{},"sourceType":"module"}