{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// nextjs imports\nimport Router from 'next/router';\nimport Head from 'next/head'; // react imports\n\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport nookies from 'nookies'; // app imports\n\nimport FormGroup from '~/components/layout/AuthModal/FormGroup';\nimport withAuth from '~/components/withAuth';\nimport { FkInput } from '~/components/Formik/fields';\nimport Layout from '~/components/layout/Layout';\nimport Button from '~/components/button';\nimport api from '~/services/api';\nimport { CONFIG } from '~/config';\nimport CardLogoHeader from '~/components/CardLogoHeader/index';\nimport { StyleForm } from '~/components/layout/changeEmail/index';\n\nvar changeEmailPage = function changeEmailPage(_ref) {\n  var layoutProps = _ref.layoutProps,\n      user = _ref.user,\n      updateUser = _ref.updateUser;\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(fields, actions) {\n      var msg, res, _ref3, message;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              msg = '';\n              _context.prev = 1;\n              _context.next = 4;\n              return api().post('email', fields);\n\n            case 4:\n              res = _context.sent;\n              updateUser(res.data);\n              msg = JSON.stringify({\n                success: \"Acceda al correo electrónico para confirmación\"\n              });\n              _context.next = 14;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              _ref3 = _context.t0.message ? _context.t0 : _context.t0.response ? _context.t0.response.data : '', message = _ref3.message;\n              console.table(_context.t0);\n              msg = JSON.stringify({\n                error: \"An Error Occured while updating: \" + message\n              });\n\n            case 14:\n              _context.prev = 14;\n              nookies.set({}, 'flash_message', msg, {\n                path: '/'\n              });\n              Router.push('/user/account');\n              return _context.finish(14);\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 9, 14, 18]]);\n    }));\n\n    return function handleSubmit(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Layout, layoutProps, __jsx(\"div\", {\n    className: \"detail\"\n  }, user && __jsx(Formik, {\n    initialValues: function (_ref4) {\n      var oldEmail = _ref4.email;\n      return {\n        oldEmail: oldEmail,\n        email: ''\n      };\n    }(user),\n    validationSchema: getYupSchema(),\n    onSubmit: handleSubmit,\n    component: DataForm\n  })));\n};\n\nvar DataForm = function DataForm(_ref5) {\n  var isSubmitting = _ref5.isSubmitting;\n  return __jsx(Form, null, __jsx(CardLogoHeader, null, __jsx(StyleForm, null, __jsx(\"h1\", {\n    className: \"h2\"\n  }, \"Cambiar Email\"), __jsx(\"div\", {\n    \"class\": \"painel\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    style: {\n      width: \"100%\"\n    }\n  }, __jsx(FormGroup, {\n    className: \"form-input\"\n  }, __jsx(FkInput, {\n    name: \"oldEmail\",\n    label: \"Email Actual\",\n    type: \"email\",\n    disabled: true\n  }))))), __jsx(\"div\", {\n    className: \"row row-aling \"\n  }, __jsx(\"div\", {\n    className: \"input-aling\"\n  }, __jsx(FormGroup, {\n    className: \"form-input\"\n  }, __jsx(FkInput, {\n    name: \"email\",\n    label: \"Nuevo Email\",\n    type: \"email\"\n  }))), __jsx(\"div\", {\n    style: {\n      padding: \" 20px\"\n    }\n  }, __jsx(Button, {\n    style: {\n      bakground: \"#008e38!important\"\n    },\n    type: \"submit\",\n    disabled: isSubmitting,\n    loading: isSubmitting\n  }, \"Aceptar\"))))));\n}; // create Yup validation Schema\n\n\n_c = DataForm;\n\nvar getYupSchema = function getYupSchema(_) {\n  var nullable3CharMinString = Yup.string().trim().nullable().required('Obligatorio').min(3, 'Debe tener 3 caracteres o más.');\n  return Yup.object({\n    email: nullable3CharMinString.email('Correo inválido')\n  });\n};\n\nexport default withAuth(changeEmailPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"DataForm\");","map":{"version":3,"sources":["/Users/rafael/Projects/somosgad/dale/pages/user/changeEmail.js"],"names":["Router","Head","Formik","Form","Yup","nookies","FormGroup","withAuth","FkInput","Layout","Button","api","CONFIG","CardLogoHeader","StyleForm","changeEmailPage","layoutProps","user","updateUser","handleSubmit","fields","actions","msg","post","res","data","JSON","stringify","success","message","response","console","table","error","set","path","push","oldEmail","email","getYupSchema","DataForm","isSubmitting","width","padding","bakground","_","nullable3CharMinString","string","trim","nullable","required","min","object"],"mappings":"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","sourcesContent":["// nextjs imports\nimport Router from 'next/router'\nimport Head from 'next/head'\n\n// react imports\nimport { Formik, Form } from 'formik'\nimport * as Yup from 'yup'\n\nimport nookies from 'nookies'\n\n// app imports\nimport FormGroup from '~/components/layout/AuthModal/FormGroup'\nimport withAuth from '~/components/withAuth'\nimport { FkInput } from '~/components/Formik/fields'\nimport Layout from '~/components/layout/Layout'\nimport Button from '~/components/button'\nimport api from '~/services/api'\nimport { CONFIG } from '~/config'\nimport CardLogoHeader from '~/components/CardLogoHeader/index'\nimport { StyleForm } from '~/components/layout/changeEmail/index'\n\nconst changeEmailPage = ({ layoutProps, user, updateUser }) => {\n\n  const handleSubmit = async (fields, actions) => {\n    var msg = ''\n\n    try {\n      const res = await api().post('email', fields)\n      updateUser(res.data)\n      msg = JSON.stringify({ success: \"Acceda al correo electrónico para confirmación\" })\n\n    } catch (error) {\n      var { message } = error.message ? error : error.response ? error.response.data : ''\n      console.table(error);\n      msg = JSON.stringify({ error: \"An Error Occured while updating: \" + message })\n    } finally {\n      nookies.set({}, 'flash_message', msg, { path: '/' })\n      Router.push('/user/account')\n    }\n  }\n\n  return (\n    <Layout {...layoutProps}>\n\n\n      <div className=\"detail\">\n\n        {user &&\n          <Formik\n            initialValues={\n              (({ email: oldEmail }) => {\n                return { oldEmail, email: '' }\n              })(user)\n            }\n            validationSchema={getYupSchema()}\n            onSubmit={handleSubmit}\n            component={DataForm}\n          />\n        }\n      </div>\n\n\n    </Layout>\n  );\n}\n\n\n\nconst DataForm = ({ isSubmitting }) => <Form>\n\n\n\n  <CardLogoHeader>\n    <StyleForm>\n      <h1 className=\"h2\">Cambiar Email</h1>\n      <div class=\"painel\">\n        <div className=\"row\">\n          <div style={{ width: \"100%\" }}>\n            <FormGroup className=\"form-input\">\n              <FkInput name=\"oldEmail\" label=\"Email Actual\" type=\"email\" disabled />\n            </FormGroup>\n          </div>\n        </div>\n      </div>\n      <div className=\"row row-aling \" >\n        <div className=\"input-aling\">\n          <FormGroup className=\"form-input\">\n            <FkInput name=\"email\" label=\"Nuevo Email\" type=\"email\" />\n          </FormGroup>\n        </div>\n        <div style={{ padding: \" 20px\" }} >\n          <Button style={{ bakground: \"#008e38!important\" }} type=\"submit\" disabled={isSubmitting} loading={isSubmitting}>\n            Aceptar\n      </Button>\n        </div>\n      </div>\n    </StyleForm>\n  </CardLogoHeader >\n</Form >\n// create Yup validation Schema\nconst getYupSchema = _ => {\n  const nullable3CharMinString = Yup.string()\n    .trim().nullable()\n    .required('Obligatorio')\n    .min(3, 'Debe tener 3 caracteres o más.')\n\n  return Yup.object({\n    email: nullable3CharMinString\n      .email('Correo inválido'),\n  })\n}\n\nexport default withAuth(changeEmailPage)\n"]},"metadata":{},"sourceType":"module"}