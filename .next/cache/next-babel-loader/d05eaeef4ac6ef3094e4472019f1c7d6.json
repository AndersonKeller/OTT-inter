{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport MediaLink from '../MediaLink/MediaLink';\nimport React, { useContext } from 'react';\nimport WishlistBtn from \"../../components/wishlist-btn\";\nimport { ThemeContext } from 'styled-components';\nimport { Chip } from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlayCircle } from '@fortawesome/free-solid-svg-icons';\n\nvar MediaCard = function MediaCard(_ref) {\n  var _ref$category = _ref.category,\n      category = _ref$category === void 0 ? null : _ref$category,\n      className = _ref.className,\n      media = _ref.media,\n      wishlist = _ref.wishlist;\n\n  if (!media.thumbnail_url) {// media.thumbnail_url = '//placehold.jp/180x256.png'\n  }\n\n  var theme = useContext(ThemeContext);\n  var lightColor = theme.colors.texts;\n  var whiteColor = theme.colors.white;\n  var isPaid = media.is_paid;\n\n  function statusChip() {\n    if (isPaid) {\n      return __jsx(Chip, {\n        label: \"Premium\",\n        color: \"primary\"\n      });\n    } else {\n      return __jsx(Chip, {\n        label: \"Gratis\"\n      });\n    }\n  }\n\n  return __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"4159586844\", [lightColor, whiteColor]]]) + \" \" + (className || \"\")\n  }, __jsx(MediaLink, {\n    category: category,\n    media: media\n  }, __jsx(\"a\", {\n    className: _JSXStyle.dynamic([[\"4159586844\", [lightColor, whiteColor]]]) + \" \" + \"media-card text-center\"\n  }, wishlist && __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"4159586844\", [lightColor, whiteColor]]]) + \" \" + \"wish\"\n  }, __jsx(WishlistBtn, {\n    movieId: media.id,\n    inside: true\n  })), __jsx(\"img\", {\n    src: category ? category.is_horizontal ? media.thumbnail2_url : media.thumbnail_url : media.thumbnail_url,\n    className: _JSXStyle.dynamic([[\"4159586844\", [lightColor, whiteColor]]]) + \" \" + \"img-fluid\"\n  }), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"4159586844\", [lightColor, whiteColor]]]) + \" \" + \"media-card-label\"\n  }, __jsx(FontAwesomeIcon, {\n    icon: faPlayCircle\n  }), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"4159586844\", [lightColor, whiteColor]]]) + \" \" + \"text\"\n  }, media.title)), __jsx(\"span\", {\n    className: _JSXStyle.dynamic([[\"4159586844\", [lightColor, whiteColor]]]) + \" \" + \"media-chip\"\n  }, statusChip()))), __jsx(_JSXStyle, {\n    id: \"4159586844\",\n    dynamic: [lightColor, whiteColor]\n  }, [\".media-card.__jsx-style-dynamic-selector{color:\".concat(lightColor, \";}\"), \".media-card.__jsx-style-dynamic-selector:focus,.media-card.__jsx-style-dynamic-selector:hover{color:\".concat(whiteColor, \";}\")]));\n};\n\nMediaCard.defaultProps = {\n  category: null,\n  className: null,\n  media: null\n};\nexport default MediaCard;","map":{"version":3,"sources":["/Users/rafael/Projects/somosgad/dale/components/MediaCard/MediaCard.js"],"names":["MediaLink","React","useContext","WishlistBtn","ThemeContext","Chip","FontAwesomeIcon","faPlayCircle","MediaCard","category","className","media","wishlist","thumbnail_url","theme","lightColor","colors","texts","whiteColor","white","isPaid","is_paid","statusChip","id","is_horizontal","thumbnail2_url","title","defaultProps"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,wBAAtB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,YAAT,QAA6B,mCAA7B;;AAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAKZ;AAAA,2BAJJC,QAII;AAAA,MAJJA,QAII,8BAJO,IAIP;AAAA,MAHJC,SAGI,QAHJA,SAGI;AAAA,MAFJC,KAEI,QAFJA,KAEI;AAAA,MADJC,QACI,QADJA,QACI;;AACJ,MAAI,CAACD,KAAK,CAACE,aAAX,EAA0B,CACxB;AACD;;AACD,MAAMC,KAAK,GAAGZ,UAAU,CAACE,YAAD,CAAxB;AACA,MAAMW,UAAU,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAhC;AACA,MAAMC,UAAU,GAAGJ,KAAK,CAACE,MAAN,CAAaG,KAAhC;AANI,MAOaC,MAPb,GAOwBT,KAPxB,CAOIU,OAPJ;;AASJ,WAASC,UAAT,GAAsB;AACpB,QAAIF,MAAJ,EAAY;AACV,aAAO,MAAC,IAAD;AAAM,QAAA,KAAK,EAAE,SAAb;AAAwB,QAAA,KAAK,EAAE;AAA/B,QAAP;AACD,KAFD,MAEO;AACL,aAAO,MAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAb,QAAP;AACD;AACF;;AAED,SACE;AAAA,kDA6BkBL,UA7BlB,EAiCkBG,UAjClB,cAAWR,SAAX;AAAA,KACE,MAAC,SAAD,EAAe;AAAED,IAAAA,QAAQ,EAARA,QAAF;AAAYE,IAAAA,KAAK,EAALA;AAAZ,GAAf,EACE;AAAA,kDA2BcI,UA3Bd,EA+BcG,UA/Bd,aAAa;AAAb,KAEIN,QAAQ,IACR;AAAA,kDAwBUG,UAxBV,EA4BUG,UA5BV,aAAe;AAAf,KACE,MAAC,WAAD;AAAa,IAAA,OAAO,EAAEP,KAAK,CAACY,EAA5B;AAAgC,IAAA,MAAM,EAAE;AAAxC,IADF,CAHJ,EAOE;AACE,IAAA,GAAG,EAAEd,QAAQ,GAAIA,QAAQ,CAACe,aAAT,GAAyBb,KAAK,CAACc,cAA/B,GAAgDd,KAAK,CAACE,aAA1D,GAA2EF,KAAK,CAACE,aADhG;AAAA,kDAoBYE,UApBZ,EAwBYG,UAxBZ,aAAe;AAAf,IAPF,EASE;AAAA,kDAkBYH,UAlBZ,EAsBYG,UAtBZ,aAAe;AAAf,KACE,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEX;AAAvB,IADF,EAEE;AAAA,kDAgBUQ,UAhBV,EAoBUG,UApBV,aAAgB;AAAhB,KACGP,KAAK,CAACe,KADT,CAFF,CATF,EAgBE;AAAA,kDAWYX,UAXZ,EAeYG,UAfZ,aAAgB;AAAhB,KAEGI,UAAU,EAFb,CAhBF,CADF,CADF;AAAA;AAAA,cA6BkBP,UA7BlB,EAiCkBG,UAjClB;AAAA,+DA6BkBH,UA7BlB,uHAiCkBG,UAjClB,UADF;AAwCD,CA9DD;;AAgEAV,SAAS,CAACmB,YAAV,GAAyB;AACvBlB,EAAAA,QAAQ,EAAE,IADa;AAEvBC,EAAAA,SAAS,EAAE,IAFY;AAGvBC,EAAAA,KAAK,EAAE;AAHgB,CAAzB;AAMA,eAAeH,SAAf","sourcesContent":["import MediaLink from '../MediaLink/MediaLink'\nimport React, { useContext } from 'react'\nimport WishlistBtn from \"../../components/wishlist-btn\"\nimport { ThemeContext } from 'styled-components'\nimport { Chip } from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlayCircle } from '@fortawesome/free-solid-svg-icons'\n\n\nconst MediaCard = ({\n  category = null,\n  className,\n  media,\n  wishlist\n}) => {\n  if (!media.thumbnail_url) {\n    // media.thumbnail_url = '//placehold.jp/180x256.png'\n  }\n  const theme = useContext(ThemeContext)\n  const lightColor = theme.colors.texts\n  const whiteColor = theme.colors.white\n  const { is_paid: isPaid } = media\n\n  function statusChip() {\n    if (isPaid) {\n      return <Chip label={\"Premium\"} color={\"primary\"} />\n    } else {\n      return <Chip label={\"Gratis\"} />\n    }\n  }\n\n  return (\n    <div {...{ className }}>\n      <MediaLink {...{ category, media }}>\n        <a className=\"media-card text-center\">\n          {\n            wishlist &&\n            <div className=\"wish\">\n              <WishlistBtn movieId={media.id} inside={true} />\n            </div>\n          }\n          <img className=\"img-fluid\"\n            src={category ? (category.is_horizontal ? media.thumbnail2_url : media.thumbnail_url) : media.thumbnail_url} />\n          <div className=\"media-card-label\">\n            <FontAwesomeIcon icon={faPlayCircle} />\n            <div className={\"text\"}>\n              {media.title}\n            </div>\n          </div>\n\n          <span className=\"media-chip\">\n\n            {statusChip()}\n\n          </span>\n\n        </a>\n      </MediaLink>\n      <style jsx>{`\n\n          .media-card {\n            color: ${ lightColor};\n          }\n          .media-card:focus,\n          .media-card:hover {\n            color: ${ whiteColor};\n          }\n\n      ` }</style>\n    </div>\n  )\n}\n\nMediaCard.defaultProps = {\n  category: null,\n  className: null,\n  media: null,\n}\n\nexport default MediaCard\n"]},"metadata":{},"sourceType":"module"}