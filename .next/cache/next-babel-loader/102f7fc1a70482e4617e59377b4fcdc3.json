{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport Color from 'color';\nimport classNames from 'classnames';\nimport Link from 'next/link';\nimport React, { useContext } from 'react';\nimport { IconContext } from 'react-icons';\nimport { FaFacebookSquare } from 'react-icons/fa';\nimport { IoLogoInstagram, IoLogoTwitter } from 'react-icons/io';\nimport ReactSVG from 'react-svg';\nimport { CONFIG } from '../../config';\nimport UserContext from '../../contexts/UserContext';\nimport ActiveLink from '../ActiveLink';\nimport { WHITE } from '~/constants/colors';\nimport { ThemeContext } from 'styled-components';\nimport packageJson from '~/package.json';\nexport default function Footer(_ref) {\n  var apiVersion = _ref.apiVersion,\n      layoutColor = _ref.layoutColor;\n  return __jsx(\"footer\", {\n    className: \"jsx-881476451\" + \" \" + \"footer\"\n  }, __jsx(NavFooter, {\n    className: \"d-lg-none\"\n  }), __jsx(TermsAndPoliciesBar, {\n    apiVersion: apiVersion,\n    layoutColor: layoutColor\n  }), __jsx(_JSXStyle, {\n    id: \"881476451\"\n  }, \".footer.jsx-881476451{padding-bottom:65px;}@media (min-width:768px){.footer.jsx-881476451{padding-bottom:0;}}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/rafael/Projects/somosgad/dale/components/layout/Footer.js */\"));\n}\n_c = Footer;\n\nvar NavFooter = function NavFooter(_ref2) {\n  _s();\n\n  var className = _ref2.className;\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user;\n\n  var menu = [{\n    icon: 'home',\n    label: 'Inicio',\n    href: '/'\n  }, // { icon: 'live', label: 'Ahora', },\n  {\n    icon: 'categories',\n    label: 'Categorías',\n    href: '/categories'\n  }, // { icon: 'downloads', label: 'Descargas', href: '/downloads', },\n  {\n    icon: 'add',\n    label: 'Mi Lista',\n    href: user ? '/wishlist' : '/login'\n  }, {\n    icon: 'search',\n    label: 'Buscar',\n    href: '/movies'\n  } // { icon: 'scan', label: 'Escanear', },\n  ];\n  var classes = classNames('nav-footer', className);\n  var theme = useContext(ThemeContext);\n  var backgroundColor = Color(theme.colors.background).hsl().string();\n  var textAndFillColor = Color(theme.colors.texts).hsl().string();\n  return __jsx(\"nav\", {\n    className: _JSXStyle.dynamic([[\"164880001\", [backgroundColor, textAndFillColor, textAndFillColor]]]) + \" \" + (classes || \"\")\n  }, menu.map(function (item, key) {\n    return __jsx(ActiveLink, _extends({\n      href: item.href\n    }, {\n      key: key\n    }), __jsx(\"a\", {\n      className: _JSXStyle.dynamic([[\"164880001\", [backgroundColor, textAndFillColor, textAndFillColor]]])\n    }, __jsx(\"span\", {\n      className: _JSXStyle.dynamic([[\"164880001\", [backgroundColor, textAndFillColor, textAndFillColor]]]) + \" \" + \"icon\"\n    }, __jsx(ReactSVG, {\n      src: \"/static/icons/\".concat(item.icon, \".svg\")\n    })), item.label));\n  }), __jsx(_JSXStyle, {\n    id: \"164880001\",\n    dynamic: [backgroundColor, textAndFillColor, textAndFillColor]\n  }, \".nav-footer.__jsx-style-dynamic-selector{-webkit-align-items:flex-end;-webkit-box-align:flex-end;-ms-flex-align:flex-end;align-items:flex-end;background-color:\".concat(backgroundColor, \";bottom:0;box-shadow:0 0 5px rgba(var(--black-rgb),.9);display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;font-size:13px;-webkit-box-pack:space-evenly;-webkit-justify-content:space-evenly;-ms-flex-pack:space-evenly;justify-content:space-evenly;left:0;line-height:20px;padding:10px;position:fixed;z-index:10;width:100%;}.nav-footer.__jsx-style-dynamic-selector a.__jsx-style-dynamic-selector{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;color:\").concat(textAndFillColor, \";display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;fill:\").concat(textAndFillColor, \";-webkit-text-decoration:none;text-decoration:none;}.nav-footer.__jsx-style-dynamic-selector a.active.__jsx-style-dynamic-selector{color:var(--white);fill:var(--white);}.nav-footer.__jsx-style-dynamic-selector a.__jsx-style-dynamic-selector .icon.__jsx-style-dynamic-selector{margin-bottom:5px;width:20px;}.nav-footer.__jsx-style-dynamic-selector a.__jsx-style-dynamic-selector .icon.__jsx-style-dynamic-selector path,.nav-footer.__jsx-style-dynamic-selector a.__jsx-style-dynamic-selector .icon.__jsx-style-dynamic-selector polygon,.nav-footer.__jsx-style-dynamic-selector a.__jsx-style-dynamic-selector .icon.__jsx-style-dynamic-selector rect{fill:inherit;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/rafael/Projects/somosgad/dale/components/layout/Footer.js */\")));\n};\n\n_s(NavFooter, \"CAekFoICSd989w28uM1DqmBs+Lg=\");\n\n_c2 = NavFooter;\n\nvar SocialNetworks = function SocialNetworks(_ref3) {\n  _s2();\n\n  var className = _ref3.className;\n\n  if (!CONFIG.socialNetworks && Array.isArray(CONFIG.socialNetworks)) {\n    return;\n  }\n\n  var theme = useContext(ThemeContext);\n  var color = Color(theme.colors.backgroundContrast2).hsl().string();\n  var colorHover = Color(theme.colors.white).hsl().string();\n  return __jsx(IconContext.Provider, {\n    value: {\n      size: '24px'\n    }\n  }, __jsx(\"ul\", {\n    className: _JSXStyle.dynamic([[\"2457901536\", [color, colorHover]]]) + \" \" + \"list-inline \".concat(className, \" \")\n  }, CONFIG.socialNetworks.map(function (item, key) {\n    var slug = item.name.toLowerCase();\n    if (!['facebook', 'instagram', 'twitter'].includes(slug)) return;\n    return __jsx(\"li\", {\n      key: key,\n      className: _JSXStyle.dynamic([[\"2457901536\", [color, colorHover]]])\n    }, __jsx(\"a\", {\n      href: item.link,\n      target: \"_blank\",\n      title: \"\".concat(CONFIG.clubName, \" \").concat(item.name),\n      className: _JSXStyle.dynamic([[\"2457901536\", [color, colorHover]]])\n    }, slug === 'facebook' ? __jsx(FaFacebookSquare, null) : slug === 'instagram' ? __jsx(IoLogoInstagram, null) : slug === 'twitter' && __jsx(IoLogoTwitter, null)));\n  })), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"2457901536\", [color, colorHover]]]) + \" \" + \"logo-gad\"\n  }, __jsx(GADLogo, null)), __jsx(_JSXStyle, {\n    id: \"2457901536\",\n    dynamic: [color, colorHover]\n  }, \"@media (max-width:768px){.logo-gad.__jsx-style-dynamic-selector{padding-left:38px;}}.logo-gad.__jsx-style-dynamic-selector{display:none;}ul.__jsx-style-dynamic-selector{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;margin:5px 0;}a.__jsx-style-dynamic-selector{color:\".concat(color, \";display:block;padding:2.5px;-webkit-transition:color .3s;transition:color .3s;}a.__jsx-style-dynamic-selector{margin-right:1px;margin-left:1px;padding:5px;}a.__jsx-style-dynamic-selector:focus,a.__jsx-style-dynamic-selector:hover{color:\").concat(colorHover, \";-webkit-transition:color .125s;transition:color .125s;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/rafael/Projects/somosgad/dale/components/layout/Footer.js */\")));\n};\n\n_s2(SocialNetworks, \"+C1P7ukOg/azcV4AZ819oyezFOE=\");\n\n_c3 = SocialNetworks;\n\nvar TermsAndPoliciesBar = function TermsAndPoliciesBar(_ref4) {\n  _s3();\n\n  var apiVersion = _ref4.apiVersion,\n      layoutColor = _ref4.layoutColor;\n  var appName = CONFIG.appName;\n  var appVersion = packageJson.version;\n  var showVersions = true;\n  var versionsLine = showVersions ? \"v\".concat(appVersion) + (apiVersion ? \" (api \".concat(apiVersion, \")\") : '') : '';\n  var theme = useContext(ThemeContext);\n  var color = Color(theme.colors.texts).hsl().string();\n  return __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"3455797165\", [layoutColor === 'white' ? 'var(--background)' : 'transparent', color]]]) + \" \" + \"terms-and-policies-bar\"\n  }, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"3455797165\", [layoutColor === 'white' ? 'var(--background)' : 'transparent', color]]]) + \" \" + \"desktop container-fluid\"\n  }, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"3455797165\", [layoutColor === 'white' ? 'var(--background)' : 'transparent', color]]]) + \" \" + \"row align-items-center\"\n  }, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"3455797165\", [layoutColor === 'white' ? 'var(--background)' : 'transparent', color]]]) + \" \" + \"col-12 col-sm-4 text-md-left\"\n  }, __jsx(\"p\", {\n    className: _JSXStyle.dynamic([[\"3455797165\", [layoutColor === 'white' ? 'var(--background)' : 'transparent', color]]])\n  }, \"\".concat(appName, \" @ 2020 - Todos los derechos reservados\"))), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"3455797165\", [layoutColor === 'white' ? 'var(--background)' : 'transparent', color]]]) + \" \" + \"col-4 col-md-4 text-md-center terms-and-policies-bar__social-networks-col\"\n  }, __jsx(SocialNetworks, {\n    className: \"social-networks\"\n  })), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"3455797165\", [layoutColor === 'white' ? 'var(--background)' : 'transparent', color]]]) + \" \" + \"col-8 col-sm-4 text-md-right aling\"\n  }, __jsx(\"ul\", {\n    className: _JSXStyle.dynamic([[\"3455797165\", [layoutColor === 'white' ? 'var(--background)' : 'transparent', color]]])\n  }, __jsx(\"li\", {\n    className: _JSXStyle.dynamic([[\"3455797165\", [layoutColor === 'white' ? 'var(--background)' : 'transparent', color]]])\n  }, __jsx(Link, {\n    href: \"/privacy\",\n    passHref: true\n  }, __jsx(FooterLink, null, \"Pol\\xEDtica de Privacidad\"))), __jsx(\"li\", {\n    className: _JSXStyle.dynamic([[\"3455797165\", [layoutColor === 'white' ? 'var(--background)' : 'transparent', color]]])\n  }, __jsx(Link, {\n    href: \"/terminos-y-politicas\",\n    passHref: true\n  }, __jsx(FooterLink, null, \"T\\xE9rminos y pol\\xEDticas\"))), __jsx(\"li\", {\n    className: _JSXStyle.dynamic([[\"3455797165\", [layoutColor === 'white' ? 'var(--background)' : 'transparent', color]]]) + \" \" + \"logo-gad\"\n  }, __jsx(GADLogo, null)))))), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"3455797165\", [layoutColor === 'white' ? 'var(--background)' : 'transparent', color]]]) + \" \" + \"container-fluid mobile\"\n  }, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"3455797165\", [layoutColor === 'white' ? 'var(--background)' : 'transparent', color]]]) + \" \" + \"row align-items-center\"\n  }, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"3455797165\", [layoutColor === 'white' ? 'var(--background)' : 'transparent', color]]]) + \" \" + \"copyright col-12 text-center\"\n  }, __jsx(\"p\", {\n    className: _JSXStyle.dynamic([[\"3455797165\", [layoutColor === 'white' ? 'var(--background)' : 'transparent', color]]])\n  }, \"\".concat(appName, \" @ 2020\")), __jsx(\"p\", {\n    className: _JSXStyle.dynamic([[\"3455797165\", [layoutColor === 'white' ? 'var(--background)' : 'transparent', color]]])\n  }, \"Todos los derechos reservados\")), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"3455797165\", [layoutColor === 'white' ? 'var(--background)' : 'transparent', color]]]) + \" \" + \"links col-12\"\n  }, __jsx(\"ul\", {\n    className: _JSXStyle.dynamic([[\"3455797165\", [layoutColor === 'white' ? 'var(--background)' : 'transparent', color]]])\n  }, __jsx(\"li\", {\n    className: _JSXStyle.dynamic([[\"3455797165\", [layoutColor === 'white' ? 'var(--background)' : 'transparent', color]]])\n  }, __jsx(Link, {\n    href: \"/privacy\",\n    passHref: true\n  }, __jsx(FooterLink, null, \"Pol\\xEDtica de Privacidad\"))), __jsx(\"li\", {\n    className: _JSXStyle.dynamic([[\"3455797165\", [layoutColor === 'white' ? 'var(--background)' : 'transparent', color]]])\n  }, __jsx(Link, {\n    href: \"/terminos-y-politicas\",\n    passHref: true\n  }, __jsx(FooterLink, null, \"T\\xE9rminos y pol\\xEDticas\"))))), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"3455797165\", [layoutColor === 'white' ? 'var(--background)' : 'transparent', color]]]) + \" \" + \"col-12 text-center terms-and-policies-bar__social-networks-col\"\n  }, __jsx(SocialNetworks, {\n    className: \"social-networks\"\n  })), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"3455797165\", [layoutColor === 'white' ? 'var(--background)' : 'transparent', color]]]) + \" \" + \"gad-logo col-12 text-center\"\n  }, __jsx(GADLogo, null)))), __jsx(_JSXStyle, {\n    id: \"3455797165\",\n    dynamic: [layoutColor === 'white' ? 'var(--background)' : 'transparent', color]\n  }, \".terms-and-policies-bar.__jsx-style-dynamic-selector{background-color:\".concat(layoutColor === 'white' ? 'var(--background)' : 'transparent', \";color:\").concat(color, \";font-size:11px;line-height:1;padding-top:10px;padding-bottom:5px;}.terms-and-policies-bar.__jsx-style-dynamic-selector .mobile.__jsx-style-dynamic-selector{display:none;}.terms-and-policies-bar.__jsx-style-dynamic-selector .desktop.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}@media (max-width:767px){.terms-and-policies-bar.__jsx-style-dynamic-selector .mobile.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}.terms-and-policies-bar.__jsx-style-dynamic-selector .desktop.__jsx-style-dynamic-selector{display:none;}.gad-logo.__jsx-style-dynamic-selector{margin:15px 0;}.copyright.__jsx-style-dynamic-selector{margin-top:10px;}.links.__jsx-style-dynamic-selector{margin:10px 0;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}.aling.__jsx-style-dynamic-selector{margin-top:-10px;}.logo-gad.__jsx-style-dynamic-selector{display:none!important;}.terms-and-policies-bar__social-networks-col.__jsx-style-dynamic-selector{padding-right:0;}.terms-and-policies-bar__social-networks-col.__jsx-style-dynamic-selector .social-networks{margin-left:-2.5px;}}.terms-and-policies-bar.__jsx-style-dynamic-selector p.__jsx-style-dynamic-selector{margin-bottom:5px;}.terms-and-policies-bar.__jsx-style-dynamic-selector ul.__jsx-style-dynamic-selector{-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;list-style-type:none;margin-right:-5px;margin-bottom:0;margin-left:-5px;padding-left:0;}.terms-and-policies-bar.__jsx-style-dynamic-selector ul.__jsx-style-dynamic-selector li.__jsx-style-dynamic-selector{display:inline;padding-right:5px;padding-left:5px;}.terms-and-policies-bar.__jsx-style-dynamic-selector ul.__jsx-style-dynamic-selector li.__jsx-style-dynamic-selector:last-child{margin-left:auto;}@media (min-width:768px){.terms-and-policies-bar.__jsx-style-dynamic-selector{font-size:12px;line-height:1.25;padding:15px 5px;}.terms-and-policies-bar.__jsx-style-dynamic-selector p.__jsx-style-dynamic-selector{margin-bottom:0;}.terms-and-policies-bar.__jsx-style-dynamic-selector ul.__jsx-style-dynamic-selector{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end;margin-right:-10px;}.terms-and-policies-bar.__jsx-style-dynamic-selector ul.__jsx-style-dynamic-selector li.__jsx-style-dynamic-selector{padding-right:10px;padding-left:10px;}.terms-and-policies-bar.__jsx-style-dynamic-selector ul.__jsx-style-dynamic-selector li.__jsx-style-dynamic-selector:last-child{margin-left:0;}}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/rafael/Projects/somosgad/dale/components/layout/Footer.js */\")));\n};\n\n_s3(TermsAndPoliciesBar, \"+C1P7ukOg/azcV4AZ819oyezFOE=\");\n\n_c4 = TermsAndPoliciesBar;\nvar FooterLink = React.forwardRef(_c5 = _s4(function (_ref5, ref) {\n  _s4();\n\n  var children = _ref5.children,\n      onClick = _ref5.onClick,\n      href = _ref5.href,\n      target = _ref5.target;\n  var theme = useContext(ThemeContext);\n  var color = Color(theme.colors.texts).hsl().string();\n  var colorHover = Color(theme.colors.white).hsl().string();\n  return __jsx(React.Fragment, null, __jsx(\"a\", _extends({\n    href: href,\n    onClick: onClick,\n    ref: ref,\n    target: target\n  }, {\n    className: _JSXStyle.dynamic([[\"1053952221\", [color, colorHover, colorHover]]])\n  }), children), __jsx(_JSXStyle, {\n    id: \"1053952221\",\n    dynamic: [color, colorHover, colorHover]\n  }, \"a.__jsx-style-dynamic-selector{color:\".concat(color, \";display:inline-block;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:color .2s;transition:color .2s;}a.__jsx-style-dynamic-selector::after{border-bottom:1px solid \").concat(colorHover, \";content:'';display:block;opacity:0;-webkit-transition:opacity .2s,-webkit-transform .2s;-webkit-transition:opacity .2s,transform .2s;transition:opacity .2s,transform .2s;-webkit-transform:translateY(-2px);-ms-transform:translateY(-2px);transform:translateY(-2px);}a.__jsx-style-dynamic-selector:focus,a.__jsx-style-dynamic-selector:hover{color:\").concat(colorHover, \";}a.__jsx-style-dynamic-selector:focus.__jsx-style-dynamic-selector::after,a.__jsx-style-dynamic-selector:hover.__jsx-style-dynamic-selector::after{opacity:1;-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0);}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/rafael/Projects/somosgad/dale/components/layout/Footer.js */\")));\n}, \"+C1P7ukOg/azcV4AZ819oyezFOE=\"));\n_c6 = FooterLink;\n\nvar GADLogo = function GADLogo(_) {\n  return __jsx(React.Fragment, null, __jsx(\"a\", {\n    href: \"//somosgad.com\",\n    target: \"_blank\",\n    className: \"jsx-270065734\" + \" \" + \"signature d-inline-block\"\n  }, __jsx(\"img\", {\n    alt: \"GAD_\",\n    height: \"19\",\n    src: \"/static/logos/gad.svg\",\n    width: \"35\",\n    className: \"jsx-270065734\"\n  })), __jsx(_JSXStyle, {\n    id: \"270065734\"\n  }, \"img.jsx-270065734{height:17px;min-width:30px;}@media (min-width:768px){img.jsx-270065734{height:19px;min-width:35px;}}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/rafael/Projects/somosgad/dale/components/layout/Footer.js */\"));\n}; // display: grid;\n// flex - wrap: nowrap;\n// grid - template - columns: 35px 27px;\n\n\n_c7 = GADLogo;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Footer\");\n$RefreshReg$(_c2, \"NavFooter\");\n$RefreshReg$(_c3, \"SocialNetworks\");\n$RefreshReg$(_c4, \"TermsAndPoliciesBar\");\n$RefreshReg$(_c5, \"FooterLink$React.forwardRef\");\n$RefreshReg$(_c6, \"FooterLink\");\n$RefreshReg$(_c7, \"GADLogo\");","map":{"version":3,"sources":["/Users/rafael/Projects/somosgad/dale/components/layout/Footer.js"],"names":["Color","classNames","Link","React","useContext","IconContext","FaFacebookSquare","IoLogoInstagram","IoLogoTwitter","ReactSVG","CONFIG","UserContext","ActiveLink","WHITE","ThemeContext","packageJson","Footer","apiVersion","layoutColor","NavFooter","className","user","menu","icon","label","href","classes","theme","backgroundColor","colors","background","hsl","string","textAndFillColor","texts","map","item","key","SocialNetworks","socialNetworks","Array","isArray","color","backgroundContrast2","colorHover","white","size","slug","name","toLowerCase","includes","link","clubName","TermsAndPoliciesBar","appName","appVersion","version","showVersions","versionsLine","FooterLink","forwardRef","ref","children","onClick","target","GADLogo","_"],"mappings":"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","sourcesContent":["import Color from 'color'\nimport classNames from 'classnames'\nimport Link from 'next/link'\nimport React, { useContext } from 'react'\nimport { IconContext } from 'react-icons'\nimport { FaFacebookSquare } from 'react-icons/fa'\nimport { IoLogoInstagram, IoLogoTwitter } from 'react-icons/io'\nimport ReactSVG from 'react-svg'\nimport { CONFIG } from '../../config'\nimport UserContext from '../../contexts/UserContext'\nimport ActiveLink from '../ActiveLink'\nimport { WHITE } from '~/constants/colors'\nimport { ThemeContext } from 'styled-components'\nimport packageJson from '~/package.json'\n\nexport default function Footer({ apiVersion, layoutColor }) {\n  return (\n    <footer className=\"footer\">\n      <NavFooter className=\"d-lg-none\" />\n      <TermsAndPoliciesBar apiVersion={apiVersion} layoutColor={layoutColor} />\n      <style jsx>{`\n        .footer {\n          padding-bottom: 65px;\n        }\n        @media (min-width: 768px) {\n          .footer {\n            padding-bottom: 0;\n          }\n        }\n      `}</style>\n    </footer>\n  )\n}\n\nconst NavFooter = ({ className }) => {\n\n  const { user } = useContext(UserContext)\n  const menu = [\n    { icon: 'home', label: 'Inicio', href: '/', },\n    // { icon: 'live', label: 'Ahora', },\n    { icon: 'categories', label: 'Categorías', href: '/categories', },\n    // { icon: 'downloads', label: 'Descargas', href: '/downloads', },\n    { icon: 'add', label: 'Mi Lista', href: user ? '/wishlist' : '/login', },\n    { icon: 'search', label: 'Buscar', href: '/movies', },\n    // { icon: 'scan', label: 'Escanear', },\n  ]\n  const classes = classNames('nav-footer', className)\n  const theme = useContext(ThemeContext)\n  const backgroundColor = Color(theme.colors.background).hsl().string()\n  const textAndFillColor = Color(theme.colors.texts).hsl().string()\n\n  return (\n    <nav className={classes}>\n      {menu.map((item, key) => (\n        <ActiveLink href={item.href} {...{ key }}>\n          <a>\n            <span className=\"icon\">\n              <ReactSVG src={`/static/icons/${item.icon}.svg`} />\n            </span>\n            {item.label}\n          </a>\n        </ActiveLink>\n      ))}\n      <style jsx>{`\n        .nav-footer {\n          align-items: flex-end;\n          background-color: ${backgroundColor};\n          bottom: 0;\n          box-shadow: 0 0 5px rgba(var(--black-rgb), .9);\n          display: flex;\n          /* font-size: 10px; */\n          font-size: 13px;\n          justify-content: space-evenly;\n          left: 0;\n          line-height: 20px;\n          padding: 10px;\n          position: fixed;\n          z-index: 10;\n          width: 100%;\n        }\n        .nav-footer a {\n          align-items: center;\n          color: ${textAndFillColor};\n          display: flex;\n          flex-direction: column;\n          fill: ${textAndFillColor};\n          text-decoration: none;\n        }\n        .nav-footer a.active {\n          color: var(--white);\n          fill: var(--white);\n        }\n        .nav-footer a .icon {\n          margin-bottom: 5px;\n          width: 20px;\n        }\n        .nav-footer a .icon :global(path),\n        .nav-footer a .icon :global(polygon),\n        .nav-footer a .icon :global(rect) {\n          fill: inherit;\n        }\n      `}</style>\n    </nav>\n  )\n}\n\nconst SocialNetworks = ({ className }) => {\n  if (!CONFIG.socialNetworks && Array.isArray(CONFIG.socialNetworks)) {\n    return\n  }\n  const theme = useContext(ThemeContext)\n  const color = Color(theme.colors.backgroundContrast2).hsl().string()\n  const colorHover = Color(theme.colors.white).hsl().string()\n  return (\n    <IconContext.Provider value={{ size: '24px' }}>\n      <ul className={`list-inline ${className} `}>\n        {CONFIG.socialNetworks.map((item, key) => {\n          const slug = item.name.toLowerCase()\n          if (!['facebook', 'instagram', 'twitter'].includes(slug)) return\n          return (\n            <li key={key}>\n              <a href={item.link} target=\"_blank\" title={`${CONFIG.clubName} ${item.name}`}>\n                {slug === 'facebook' ?\n                  <FaFacebookSquare />\n                  : slug === 'instagram' ?\n                    <IoLogoInstagram />\n                    : slug === 'twitter' &&\n                    <IoLogoTwitter />\n                }\n              </a>\n\n            </li>\n\n          )\n        })}\n      </ul>\n      <div className=\"logo-gad\" ><GADLogo /></div>\n\n      <style jsx>{`\n       @media (max-width: 768px) {\n        .logo-gad {\n        padding-left:38px;\n       }\n      }\n        .logo-gad {\n          display:none;\n\n        }\n        ul {\n          display: inline-flex;\n          justify-content: center;\n          margin: 5px 0;\n        }\n        a {\n          color: ${color};\n          display: block;\n          padding: 2.5px;\n          transition: color .3s;\n        }\n\n          a {\n            margin-right: 1px;\n            margin-left: 1px;\n            padding: 5px;\n          }\n        }\n        a:focus,\n        a:hover {\n          color: ${colorHover};\n          transition: color .125s;\n        }\n      `}</style>\n    </IconContext.Provider>\n  )\n}\n\nconst TermsAndPoliciesBar = ({ apiVersion, layoutColor }) => {\n  const { appName } = CONFIG\n  const { version: appVersion } = packageJson\n  const showVersions = true\n  const versionsLine = showVersions ? `v${appVersion}` + (apiVersion ? ` (api ${apiVersion})` : '') : ''\n  const theme = useContext(ThemeContext)\n  const color = Color(theme.colors.texts).hsl().string()\n  return (\n    <div className=\"terms-and-policies-bar\">\n      <div className=\"desktop container-fluid\">\n        <div className=\"row align-items-center\">\n\n          <div className=\"col-12 col-sm-4 text-md-left\">\n            <p>{`${appName} @ 2020 - Todos los derechos reservados`}</p>\n          </div>\n\n          {/* social icons */}\n          <div className=\"col-4 col-md-4 text-md-center terms-and-policies-bar__social-networks-col\">\n            <SocialNetworks className=\"social-networks\" />\n          </div>\n\n          <div className=\"col-8 col-sm-4 text-md-right aling\">\n            <ul>\n\n              {/* privacy policy */}\n              <li><Link href=\"/privacy\" passHref>\n                <FooterLink>Política de Privacidad</FooterLink>\n              </Link></li>\n\n              {/* terms of use */}\n              <li><Link href=\"/terminos-y-politicas\" passHref>\n                <FooterLink>Términos y políticas</FooterLink>\n              </Link></li>\n\n              <li className=\"logo-gad\"><GADLogo /></li>\n\n            </ul>\n          </div>\n        </div>\n      </div>\n      <div className=\"container-fluid mobile\">\n        <div className=\"row align-items-center\">\n\n          <div className=\"copyright col-12 text-center\">\n            <p>{`${appName} @ 2020`}</p>\n            <p>Todos los derechos reservados</p>\n          </div>\n\n          <div className=\"links col-12\">\n            <ul>\n              <li><Link href=\"/privacy\" passHref>\n                <FooterLink>Política de Privacidad</FooterLink>\n              </Link></li>\n              <li><Link href=\"/terminos-y-politicas\" passHref>\n                <FooterLink>Términos y políticas</FooterLink>\n              </Link></li>\n            </ul>\n          </div>\n          <div className=\"col-12 text-center terms-and-policies-bar__social-networks-col\">\n            <SocialNetworks className=\"social-networks\" />\n          </div>\n\n          <div className=\"gad-logo col-12 text-center\">\n            <GADLogo />\n          </div>\n\n        </div>\n      </div>\n      <style jsx>{`\n\n        .terms-and-policies-bar {\n          background-color: ${layoutColor === 'white' ? 'var(--background)' : 'transparent'};\n          color: ${color};\n          font-size: 11px;\n          line-height: 1;\n          padding-top: 10px;\n          padding-bottom: 5px;\n        }\n        \n        .terms-and-policies-bar .mobile {\n          display: none;\n        }\n        \n        .terms-and-policies-bar .desktop {\n          display: flex;\n        }\n        \n        @media (max-width: 767px) {\n        \n          .terms-and-policies-bar .mobile {\n            display: flex;\n          }\n          .terms-and-policies-bar .desktop {\n            display: none;\n          }\n          \n          .gad-logo {\n            margin: 15px 0;\n          }\n          \n          .copyright {\n            margin-top: 10px;\n          }\n          \n          .links {\n            margin: 10px 0;\n            display: flex;\n            justify-content: center;\n          }\n          \n          .aling {\n            margin-top: -10px;\n          }\n          .logo-gad {\n            display:none!important;\n          }\n          .terms-and-policies-bar__social-networks-col {\n            padding-right: 0;\n          }\n          .terms-and-policies-bar__social-networks-col :global(.social-networks) {\n            margin-left: -2.5px;\n          }\n        }\n        .terms-and-policies-bar p {\n          margin-bottom: 5px;\n        }\n        .terms-and-policies-bar ul {\n          align-items: flex-start;\n          display: flex;\n          justify-content: space-between;\n          list-style-type: none;\n          margin-right: -5px;\n          margin-bottom: 0;\n          margin-left: -5px;\n          padding-left: 0;\n        }\n        .terms-and-policies-bar ul li {\n          display: inline;\n          padding-right: 5px;\n          padding-left: 5px;\n        }\n        .terms-and-policies-bar ul li:last-child {\n          margin-left: auto;\n        }\n        @media (min-width: 768px) {\n          .terms-and-policies-bar {\n            font-size: 12px;\n            line-height: 1.25;\n            padding: 15px 5px;\n          }\n          .terms-and-policies-bar p {\n            margin-bottom: 0;\n          }\n          .terms-and-policies-bar ul {\n            align-items: center;\n            justify-content: flex-end;\n            margin-right: -10px;\n          }\n          .terms-and-policies-bar ul li {\n            padding-right: 10px;\n            padding-left: 10px;\n          }\n          .terms-and-policies-bar ul li:last-child {\n            margin-left: 0;\n          }\n        }\n      `}</style>\n    </div>\n  )\n}\n\nconst FooterLink = React.forwardRef(({ children, onClick, href, target }, ref) => {\n  const theme = useContext(ThemeContext)\n  const color = Color(theme.colors.texts).hsl().string()\n  const colorHover = Color(theme.colors.white).hsl().string()\n  return <>\n    <a {...{ href, onClick, ref, target }}>{children}</a>\n    <style jsx>{`\n      a {\n        color: ${color};\n        display: inline-block;\n        text-decoration: none;\n        transition: color .2s;\n      }\n      a::after {\n        border-bottom: 1px solid ${colorHover};\n        content: '';\n        display: block;\n        opacity: 0;\n        transition: opacity .2s, transform .2s;\n        transform: translateY(-2px);\n      }\n      a:focus,\n      a:hover {\n        color: ${colorHover};\n      }\n      a:focus::after,\n      a:hover::after {\n        opacity: 1;\n        transform: translateY(0);\n      }\n    `}</style>\n  </>\n})\n\nconst GADLogo = _ => {\n  return <>\n    <a className=\"signature d-inline-block\" href=\"//somosgad.com\" target=\"_blank\">\n      <img alt=\"GAD_\" height=\"19\" src=\"/static/logos/gad.svg\" width=\"35\" />\n    </a>\n    <style jsx>{`\n      img {\n        height: 17px;\n        min-width: 30px;\n      }\n      @media (min-width: 768px) {\n        img {\n          height: 19px;\n          min-width: 35px;\n        }\n      }\n    `}</style>\n  </>\n}\n// display: grid;\n// flex - wrap: nowrap;\n// grid - template - columns: 35px 27px;\n"]},"metadata":{},"sourceType":"module"}