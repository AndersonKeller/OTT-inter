{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Router from 'next/router';\nimport nookies from 'nookies';\nimport { useEffect, useState, useContext } from 'react';\nimport Button from '~/components/button';\nimport H2 from '~/components/h2';\nimport Layout from '~/components/layout/Layout';\nimport withAuth from '~/components/withAuth';\nimport { CONFIG } from '~/config';\nimport { STATIC_PATH, TENANT } from '~/constants/constants';\nimport LogoApp from '~/components/LogoApp';\nimport UserContext from '~/contexts/UserContext';\n\nconst RegisterConfirmPage = ({\n  downloadLink,\n  layoutProps,\n  link\n}) => {\n  const {\n    signOut,\n    user\n  } = useContext(UserContext);\n  const {\n    0: seconds,\n    1: setSeconds\n  } = useState(10);\n  const {\n    0: timer,\n    1: setTimer\n  } = useState(true); // useEffect(_ => {\n  //   if (timer) {\n  //     const interval = setInterval(_ => {\n  //       setSeconds(seconds => {\n  //         if (seconds - 1 <= 0) {\n  //           clearInterval(interval)\n  //           setTimer(false)\n  //           window.open(downloadLink, '_self');\n  //         }\n  //         return seconds - 1\n  //       })\n  //     }, 1000)\n  //     return _ => clearInterval(interval)\n  //   }\n  // }, [timer])\n\n  function handleClick() {\n    setTimer(false);\n  }\n\n  function getUserName() {\n    const nameArray = user.name.split(' ');\n    const userName = nameArray.length > 1 ? `${nameArray[0]} ${nameArray[nameArray.length - 1]}` : nameArray.join('');\n    return userName;\n  }\n\n  return __jsx(Layout, layoutProps, __jsx(\"div\", {\n    style: {\n      backgroundImage: `url('/static/${TENANT}/subs/background.jpg')`\n    },\n    className: \"jsx-1599985065\" + \" \" + \"card-wrapper d-flex align-items-center justify-content-center h-100 responsive\"\n  }, __jsx(\"div\", {\n    className: \"jsx-1599985065\" + \" \" + \"card\"\n  }, __jsx(\"div\", {\n    style: {\n      backgroundColor: \"#242627\",\n      padding: \"25px 15px\",\n      border: \"none\",\n      borderRadius: \"0\",\n      justifyContent: \"center\",\n      display: \"flex\",\n      width: \"100%\"\n    },\n    className: \"jsx-1599985065\" + \" \" + \"card-header text-center\"\n  }, __jsx(\"div\", {\n    className: \"jsx-1599985065\" + \" \" + \"img-logoApp-card img\"\n  }, \" \", __jsx(LogoApp, null))), __jsx(\"div\", {\n    className: \"jsx-1599985065\" + \" \" + \"card-body\"\n  }, __jsx(\"div\", {\n    className: \"jsx-1599985065\" + \" \" + \"aling-row\"\n  }, __jsx(\"h2\", {\n    mb: 3,\n    uppercase: true,\n    className: \"jsx-1599985065\" + \" \" + \"h2\"\n  }, \"\\xA1Bienvenido\")), __jsx(\"div\", {\n    className: \"jsx-1599985065\" + \" \" + \"aling-row\"\n  }, __jsx(H2, {\n    className: \"text-center-gracias\",\n    style: {\n      color: \"#6b6868\",\n      width: \"305px\"\n    }\n  }, \"Gracias por completar tu perfil de \")), __jsx(\"div\", {\n    className: \"jsx-1599985065\" + \" \" + \"register-confirm__btn-container btn-confirm\"\n  }, __jsx(Button, {\n    href: \"/index\",\n    target: \"_blank\"\n  }, \"Ir a La UPlay  \", __jsx(\"span\", {\n    className: \"jsx-1599985065\"\n  }))), !timer && __jsx(\"p\", {\n    className: \"jsx-1599985065\" + \" \" + \"small register-confirm__small\"\n  }, \"Su plan se activar\\xE1 despu\\xE9s de la confirmaci\\xF3n del pago.\")))), __jsx(_JSXStyle, {\n    id: \"1599985065\"\n  }, [\".register-confirm.jsx-1599985065{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;height:100%;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;line-height:normal;padding-bottom:2.5%;}\", \"h1.jsx-1599985065{color:var(--primary);}\", \".register-confirm__lead.jsx-1599985065{margin-bottom:30px;}\", \".btn-confirm.jsx-1599985065{-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}\", \".register-confirm__btn-container.jsx-1599985065 .btn,.register-confirm__btn-container.jsx-1599985065 .btn:active{font-size:24px!important;line-height:1;width:40%;border:solid 1px;color:red!important;background-color:white!important;}\", \".register-confirm__small.jsx-1599985065{margin-top:30px;opacity:.5;}\", \"h2.jsx-1599985065{color:black!important;}\", \".nombre-title.jsx-1599985065{color:red!important;}\", \"div.card-subtitle.jsx-1599985065{font-size:1.1em;font-weight:500;margin-bottom:2.5em;max-width:380px;}\", \".register-confirm.jsx-1599985065{padding-top:50px;padding-bottom:50px;color:#666666;}\", \".aling-row.jsx-1599985065{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;padding:5px;text-align:center;}\", \".card.jsx-1599985065{width:100%;max-width:800px;margin:110px 0;background-color:rgba(255,255,255,0.85);border-radius:0;border:none;}\", \"@media(max-width:765px){.register-confirm__btn-container.jsx-1599985065 .btn,.register-confirm__btn-container.jsx-1599985065 .btn:active{width:80%;}.responsive.jsx-1599985065{padding:20px 30px 15px 30px!important;padding:0px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;height:100%!importat;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;height:100%!important;}.aling-row.jsx-1599985065{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;padding:5px;text-align:center;}.card-body.jsx-1599985065{background-image:url()!important;}label.jsx-1599985065{display:inline-block;margin-bottom:.5rem;text-align:center;}.justify-content-end.jsx-1599985065{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center!important;-webkit-justify-content:center!important;-ms-flex-pack:center!important;justify-content:center!important;}form.jsx-1599985065{padding:0px!important;}.row.jsx-1599985065{display:-ms-flexbox;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;margin-right:0px;margin-left:0px;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;padding:5px;}.col-8.jsx-1599985065{max-width:100%!important;}.offset-3.jsx-1599985065{margin-left:0px;}}\"]));\n};\n\nRegisterConfirmPage.getInitialProps = async ctx => {\n  const {\n    api,\n    query,\n    res,\n    user\n  } = ctx; // if the user hasn't completed the registry\n\n  if (!user.register_completed_at) {\n    const message = JSON.stringify({\n      info: 'Necesitas completar tu registro.'\n    });\n    nookies.set(ctx, 'flash_message', message, {\n      path: '/'\n    });\n\n    if (res) {\n      res.redirect('/register/wizard/complete-test');\n      res.end();\n      return {};\n    } else {\n      Router.back();\n    }\n  } // // get download_link and link from router query if it comes\n  // let {download_link: downloadLink, link} = query\n  //\n  // // if it doesn't come, try to get the last cash order\n  // if (!downloadLink || !link) {\n  //   const {data: cashOrder} = await api.get('cash-orders/last');\n  //\n  //   // if no pending cash order is found, redirect to user account\n  //   if (!cashOrder) {\n  //     const message = JSON.stringify({ info: 'No tiene recibos bancarios abiertos.' })\n  //     nookies.set(ctx, 'flash_message', message, { path: '/' })\n  //     if (res) {\n  //       res.redirect('/user/account')\n  //       res.end()\n  //       return {}\n  //     } else {\n  //       Router.back()\n  //     }\n  //   }\n  //\n  //   downloadLink = cashOrder.download_link\n  //   link = cashOrder.link\n  // }\n\n\n  return {};\n};\n\nexport default withAuth(RegisterConfirmPage, true);","map":{"version":3,"sources":["/Users/rafael/Projects/somosgad/dale/pages/register/confirm.js"],"names":["Router","nookies","useEffect","useState","useContext","Button","H2","Layout","withAuth","CONFIG","STATIC_PATH","TENANT","LogoApp","UserContext","RegisterConfirmPage","downloadLink","layoutProps","link","signOut","user","seconds","setSeconds","timer","setTimer","handleClick","getUserName","nameArray","name","split","userName","length","join","backgroundImage","backgroundColor","padding","border","borderRadius","justifyContent","display","width","color","getInitialProps","ctx","api","query","res","register_completed_at","message","JSON","stringify","info","set","path","redirect","end","back"],"mappings":"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","sourcesContent":["import Router from 'next/router'\nimport nookies from 'nookies'\nimport { useEffect, useState, useContext } from 'react'\nimport Button from '~/components/button'\nimport H2 from '~/components/h2'\nimport Layout from '~/components/layout/Layout'\nimport withAuth from '~/components/withAuth'\nimport { CONFIG } from '~/config'\nimport { STATIC_PATH, TENANT } from '~/constants/constants'\nimport LogoApp from '~/components/LogoApp';\nimport UserContext from '~/contexts/UserContext'\n\nconst RegisterConfirmPage = ({ downloadLink, layoutProps, link }) => {\n\n  const { signOut, user } = useContext(UserContext)\n\n  const [seconds, setSeconds] = useState(10)\n  const [timer, setTimer] = useState(true)\n\n  // useEffect(_ => {\n  //   if (timer) {\n  //     const interval = setInterval(_ => {\n  //       setSeconds(seconds => {\n  //         if (seconds - 1 <= 0) {\n  //           clearInterval(interval)\n  //           setTimer(false)\n  //           window.open(downloadLink, '_self');\n  //         }\n  //         return seconds - 1\n  //       })\n  //     }, 1000)\n  //     return _ => clearInterval(interval)\n  //   }\n  // }, [timer])\n\n  function handleClick() {\n    setTimer(false)\n  }\n\n    function getUserName() {\n    const nameArray = user.name.split(' ')\n    const userName = nameArray.length > 1 ?\n      `${nameArray[0]} ${nameArray[nameArray.length - 1]}` : nameArray.join('')\n    return userName\n  }\n\n  return (\n    <Layout {...layoutProps}>\n      {/* <div className=\"register-confirm container text-center\"> */}\n           <div\n        className=\"card-wrapper d-flex align-items-center justify-content-center h-100 responsive\"\n        style={{\n          backgroundImage: `url('/static/${TENANT}/subs/background.jpg')`,\n        }}\n      >\n      <div className=\"card\">\n          <div className={\"card-header text-center\"} style={{\n            backgroundColor: \"#242627\",\n            padding: \"25px 15px\",\n            border: \"none\",\n            borderRadius: \"0\",\n            justifyContent: \"center\",\n            display: \"flex\",\n            width: \"100%\",\n          }}>\n            <div className=\"img-logoApp-card img\"> <LogoApp /></div>\n          </div>\n          <div className=\"card-body\">\n            <div className=\"aling-row\">\n            {/* {renderComponents()} */}\n            <h2 className=\"h2\" mb={3} uppercase>¡Bienvenido\n            {/* <span className=\"nombre-title\"> { getUserName() }</span> */}\n            </h2>\n            </div>\n\n        <div className=\"aling-row\">\n          <H2 className=\"text-center-gracias\" style={{color:\"#6b6868\", width:\"305px\"}}>Gracias por completar tu perfil de </H2>\n        </div>\n\n         <div className=\"register-confirm__btn-container btn-confirm\">\n          <Button  href=\"/index\" target=\"_blank\">Ir a La UPlay  <span></span></Button>\n        </div>\n        {/* <div className=\"register-confirm__btn-container\">\n          <Button href={link} onClick={handleClick} target=\"_blank\">Abrir Recibo Bancario</Button>\n        </div> */}\n\n        {!timer && (\n          <p className=\"small register-confirm__small\">Su plan se activará después de la confirmación del pago.</p>\n        )}\n\n\n          </div>\n        </div>\n      </div>\n      <style jsx>{`\n        .register-confirm {\n          align-items: center;\n          display: flex;\n          flex-direction: column;\n          height: 100%;\n          justify-content: center;\n          line-height: normal;\n          padding-bottom: 2.5%;\n        }\n        h1 {\n          color: var(--primary);\n        }\n        .register-confirm__lead {\n          margin-bottom: 30px;\n        }\n        .btn-confirm{\n            justify-content: center;\n         display: flex;\n        }\n        .register-confirm__btn-container :global(.btn),\n        .register-confirm__btn-container :global(.btn):active {\n\n          font-size:24px!important;\n          line-height: 1;\n          width: 40%;\n          border: solid 1px;\n          color:red!important;\n          background-color:white!important;\n        }\n        .register-confirm__small {\n          margin-top: 30px;\n          opacity: .5;\n        }\n\n        h2{\n          color:black!important;\n        }\n\n        .nombre-title{\n          color:red!important;\n        }\n\n\n\n         div.card-subtitle {\n          font-size: 1.1em;\n          font-weight: 500;\n          margin-bottom: 2.5em;\n          max-width: 380px;\n        }\n\n        .register-confirm {\n          padding-top: 50px;\n          padding-bottom: 50px;\n          color: #666666;\n        }\n\n      .aling-row {\n          display: flex;\n          justify-content: center;\n          padding: 5px;\n         text-align: center;\n      }\n\n\n      .card {\n        width: 100%;\n        max-width: 800px;\n        margin: 110px 0;\n        background-color: rgba(255, 255, 255, 0.85);\n        border-radius: 0;\n        border: none;\n\n      }\n\n     @media(max-width: 765px) {\n\n        .register-confirm__btn-container :global(.btn),\n        .register-confirm__btn-container :global(.btn):active {\n          width: 80%;\n        }\n\n        .responsive {\n          padding: 20px 30px 15px 30px!important;\n          padding: 0px;\n          display: flex;\n          flex-wrap: wrap;\n          height: 100%!importat;\n          justify-content: center;\n          height:100%!important;\n        }\n\n        .aling-row {\n          display: flex;\n          justify-content: center;\n          padding: 5px;\n          text-align: center;\n         }\n\n         .card-body {\n          background-image: url()!important;\n         }\n\n         label {\n          display: inline-block;\n          margin-bottom: .5rem;\n          text-align: center;\n        }\n\n        .justify-content-end {\n          display:flex;\n          justify-content:center!important;\n         }\n\n         form {\n          padding 0px!important;\n         }\n\n        .row {\n\n          display: -ms-flexbox;\n          display: flex;\n          -ms-flex-wrap: wrap;\n          margin-right: 0px;\n          margin-left: 0px;\n          justify-content: center;\n          padding: 5px;\n        }\n\n        .col-8 {\n          max-width: 100%!important;\n        }\n\n        .offset-3 {\n         margin-left:0px;\n       }\n\n\n      `}</style>\n    </Layout>\n  )\n}\n\nRegisterConfirmPage.getInitialProps = async ctx => {\n\n  const {api, query, res, user} = ctx\n\n  // if the user hasn't completed the registry\n  if (!user.register_completed_at) {\n    const message = JSON.stringify({ info: 'Necesitas completar tu registro.' })\n    nookies.set(ctx, 'flash_message', message, { path: '/' })\n    if (res) {\n      res.redirect('/register/wizard/complete-test')\n      res.end()\n      return {}\n    } else {\n      Router.back()\n    }\n  }\n\n  // // get download_link and link from router query if it comes\n  // let {download_link: downloadLink, link} = query\n  //\n  // // if it doesn't come, try to get the last cash order\n  // if (!downloadLink || !link) {\n  //   const {data: cashOrder} = await api.get('cash-orders/last');\n  //\n  //   // if no pending cash order is found, redirect to user account\n  //   if (!cashOrder) {\n  //     const message = JSON.stringify({ info: 'No tiene recibos bancarios abiertos.' })\n  //     nookies.set(ctx, 'flash_message', message, { path: '/' })\n  //     if (res) {\n  //       res.redirect('/user/account')\n  //       res.end()\n  //       return {}\n  //     } else {\n  //       Router.back()\n  //     }\n  //   }\n  //\n  //   downloadLink = cashOrder.download_link\n  //   link = cashOrder.link\n  // }\n\n  return {}\n}\n\nexport default withAuth(RegisterConfirmPage, true)\n"]},"metadata":{},"sourceType":"module"}