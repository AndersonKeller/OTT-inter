{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport FormGroup from \"~/components/layout/AuthModal/FormGroup\";\nimport Label from \"~/components/Form/Label\";\nimport Input from \"~/components/layout/AuthModal/Input\";\nimport { useEffect, useState } from \"react\";\nimport withAuth from \"~/components/withAuth\";\nimport SelectFormGroup from \"~/components/Form/SelectFormGroup\";\nimport InvalidFeedback from \"~/components/Form/InvalidFeedback\";\n\nvar Address = function Address(_ref) {\n  _s();\n\n  var api = _ref.api,\n      error = _ref.error,\n      handleInputChange = _ref.handleInputChange,\n      setValues = _ref.setValues,\n      loading = _ref.loading,\n      requireds = _ref.requireds,\n      values = _ref.values,\n      formData = _ref.formData,\n      setFormData = _ref.setFormData;\n  // TODO: FIX hardcoded country configuration.\n  var argCountryId = 11;\n  var braCountryId = 32;\n  var chlCountryId = 48; // Isso NÂO É uma boa prática. Deve ser mudado. Porém a estrutura de estado do app impede outra implementação.\n  // let formDataHasProperties = formData.hasOwnProperty(\"country_id\")\n  //                             && formData.hasOwnProperty(\"address_1st_level\")\n  //                             && formData.hasOwnProperty(\"city\")\n  //                             && formData.hasOwnProperty(\"address_3rd_level\")\n  //                             && formData.hasOwnProperty(\"address\");\n  // const {\n  //   country_id: countryId,\n  //   address_1st_level,\n  //   city,\n  //   address_3rd_level,\n  //   address\n  // } = formData;\n  // } = formDataHasProperties ? formData : values;\n\n  var _useState = useState(),\n      countries = _useState[0],\n      setCountries = _useState[1];\n\n  var _useState2 = useState(),\n      selectedCountry = _useState2[0],\n      setSelectedCountry = _useState2[1];\n\n  useEffect(function (_) {\n    (function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_) {\n        var _yield$api$get, data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return api.get(\"countries\");\n\n              case 2:\n                _yield$api$get = _context.sent;\n                data = _yield$api$get.data;\n                setCountries(data);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    })()();\n  }, []);\n\n  var handleCountryChange = function handleCountryChange(e) {\n    var _objectSpread2;\n\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value; // setValues({\n    //   ...values,\n    //   [name]: value,\n    //   address_1st_level: \"\"\n    // });\n\n    setFormData(_objectSpread(_objectSpread({}, formData), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, name, value), _defineProperty(_objectSpread2, \"address_1st_level\", \"\"), _objectSpread2)));\n    onChangeCountry();\n  };\n\n  var firstLevelLabel = formData.country_id == argCountryId ? \"Provincia\" : formData.country_id == braCountryId ? \"Estado\" : formData.country_id == chlCountryId ? \"Región\" : \"State\";\n  var firstLevelPluralLabel = formData.country_id == argCountryId ? \"Provincias\" : formData.country_id == braCountryId ? \"Estados\" : formData.country_id == chlCountryId ? \"Regiones\" : \"States\";\n\n  var _useState3 = useState(),\n      firstLevelList = _useState3[0],\n      setFirstLevelList = _useState3[1]; // useEffect(\n  //   _ => {\n  //     (async _ => {\n  //       onChangeCountry();\n  //     })();\n  //   },\n  //   []\n  // );\n\n\n  var onChangeCountry = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var parsedCountryId, _ref4, addresses;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              parsedCountryId = parseInt(formData.country_id);\n\n              if (![argCountryId, braCountryId, chlCountryId].includes(parsedCountryId)) {\n                _context2.next = 7;\n                break;\n              }\n\n              _context2.next = 4;\n              return api.get(\"address-1st-levels\", {\n                params: {\n                  country_id: formData.country_id\n                }\n              });\n\n            case 4:\n              _context2.t0 = _context2.sent;\n              _context2.next = 8;\n              break;\n\n            case 7:\n              _context2.t0 = {\n                data: null\n              };\n\n            case 8:\n              _ref4 = _context2.t0;\n              addresses = _ref4.data;\n              setFirstLevelList(addresses);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onChangeCountry() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var cityLabel = formData.country_id == braCountryId ? \"Cidade\" : formData.country_id == chlCountryId ? \"Provincia\" : \"Ciudad\";\n  var thirdLevelLabel = formData.country_id == chlCountryId ? \"Ciudad / Comuna\" : \"District\";\n  return __jsx(\"div\", {\n    className: \"address\"\n  }, __jsx(SelectFormGroup, {\n    error: error,\n    label: \"Pa\\xEDs\",\n    loading: loading,\n    list: countries,\n    listMapValue: \"id\",\n    name: \"country_id\",\n    onChange: handleCountryChange,\n    pluralLabel: \"Pa\\xEDses\",\n    requireds: requireds,\n    value: formData.country_id\n  }), [argCountryId, braCountryId, chlCountryId].map(function (id) {\n    return id + \"\";\n  }).includes(formData.country_id) && __jsx(SelectFormGroup, {\n    error: error,\n    label: firstLevelLabel,\n    loading: loading,\n    list: firstLevelList,\n    listMapValue: \"id\",\n    name: \"address_1st_level\",\n    onChange: handleInputChange,\n    pluralLabel: firstLevelPluralLabel,\n    requireds: requireds,\n    value: formData.address_1st_level\n  }), [braCountryId, chlCountryId].map(function (id) {\n    return id + \"\";\n  }).includes(formData.country_id) && __jsx(FormGroup, null, __jsx(Label, {\n    htmlFor: \"city\"\n  }, cityLabel), __jsx(Input, {\n    id: \"city\",\n    name: \"city\",\n    onChange: handleInputChange,\n    required: requireds,\n    type: \"text\",\n    value: formData.city\n  }), __jsx(InvalidFeedback, {\n    error: error,\n    loading: loading,\n    name: \"city\"\n  })), [chlCountryId].map(function (id) {\n    return id + \"\";\n  }).includes(formData.country_id) && __jsx(FormGroup, null, __jsx(Label, {\n    htmlFor: \"address_3rd_level\"\n  }, thirdLevelLabel), __jsx(Input, {\n    id: \"address_3rd_level\",\n    name: \"address_3rd_level\",\n    onChange: handleInputChange,\n    required: requireds,\n    type: \"text\",\n    value: formData.address_3rd_level\n  }), __jsx(InvalidFeedback, {\n    error: error,\n    loading: loading,\n    name: \"address_3rd_level\"\n  })), __jsx(FormGroup, null, __jsx(Label, {\n    htmlFor: \"address\"\n  }, \"Direcci\\xF3n\"), __jsx(Input, {\n    id: \"address\",\n    name: \"address\",\n    onChange: handleInputChange,\n    required: requireds,\n    type: \"text\",\n    value: formData.address\n  }), __jsx(InvalidFeedback, {\n    error: error,\n    loading: loading,\n    name: \"address\"\n  })));\n};\n\n_s(Address, \"aZPl8IVKRG6AtM2dp+N7wD9IubE=\");\n\n_c = Address;\nexport default _c2 = withAuth(Address, true);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Address\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/rafael/Projects/somosgad/dale/pages/register/wizard/partials/address.js"],"names":["FormGroup","Label","Input","useEffect","useState","withAuth","SelectFormGroup","InvalidFeedback","Address","api","error","handleInputChange","setValues","loading","requireds","values","formData","setFormData","argCountryId","braCountryId","chlCountryId","countries","setCountries","selectedCountry","setSelectedCountry","_","get","data","handleCountryChange","e","target","name","value","onChangeCountry","firstLevelLabel","country_id","firstLevelPluralLabel","firstLevelList","setFirstLevelList","parsedCountryId","parseInt","includes","params","addresses","cityLabel","thirdLevelLabel","map","id","address_1st_level","city","address_3rd_level","address"],"mappings":"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","sourcesContent":["import FormGroup from \"~/components/layout/AuthModal/FormGroup\";\nimport Label from \"~/components/Form/Label\";\nimport Input from \"~/components/layout/AuthModal/Input\";\nimport { useEffect, useState } from \"react\";\nimport withAuth from \"~/components/withAuth\";\nimport SelectFormGroup from \"~/components/Form/SelectFormGroup\";\nimport InvalidFeedback from \"~/components/Form/InvalidFeedback\";\n\nconst Address = ({\n  api,\n  error,\n  handleInputChange,\n  setValues,\n  loading,\n  requireds,\n  values,\n  formData,\n  setFormData\n}) => {\n  // TODO: FIX hardcoded country configuration.\n  const argCountryId = 11;\n  const braCountryId = 32;\n  const chlCountryId = 48;\n\n  // Isso NÂO É uma boa prática. Deve ser mudado. Porém a estrutura de estado do app impede outra implementação.\n  // let formDataHasProperties = formData.hasOwnProperty(\"country_id\")\n  //                             && formData.hasOwnProperty(\"address_1st_level\")\n  //                             && formData.hasOwnProperty(\"city\")\n  //                             && formData.hasOwnProperty(\"address_3rd_level\")\n  //                             && formData.hasOwnProperty(\"address\");\n\n  // const {\n  //   country_id: countryId,\n  //   address_1st_level,\n  //   city,\n  //   address_3rd_level,\n  //   address\n  // } = formData;\n  // } = formDataHasProperties ? formData : values;\n\n  const [countries, setCountries] = useState();\n  const [selectedCountry, setSelectedCountry] = useState();\n\n  useEffect(_ => {\n    (async _ => {\n      const { data } = await api.get(\"countries\");\n      setCountries(data);\n    })();\n  }, []);\n\n  const handleCountryChange = e => {\n    const { name, value } = e.target;\n    // setValues({\n    //   ...values,\n    //   [name]: value,\n    //   address_1st_level: \"\"\n    // });\n    setFormData({\n      ...formData,\n      [name]: value,\n      address_1st_level: \"\"\n    });\n\n    onChangeCountry()\n\n  };\n\n  const firstLevelLabel = formData.country_id == argCountryId\n    ? \"Provincia\"\n    : formData.country_id == braCountryId\n      ? \"Estado\"\n      : formData.country_id == chlCountryId\n        ? \"Región\"\n        : \"State\";\n\n  const firstLevelPluralLabel = formData.country_id == argCountryId\n    ? \"Provincias\"\n    : formData.country_id == braCountryId\n      ? \"Estados\"\n      : formData.country_id == chlCountryId\n        ? \"Regiones\"\n        : \"States\";\n\n  const [firstLevelList, setFirstLevelList] = useState();\n\n  // useEffect(\n  //   _ => {\n  //     (async _ => {\n  //       onChangeCountry();\n  //     })();\n  //   },\n  //   []\n  // );\n\n  let onChangeCountry = async () => {\n    const parsedCountryId = parseInt(formData.country_id);\n    const { data: addresses } = [\n      argCountryId,\n      braCountryId,\n      chlCountryId\n    ].includes(parsedCountryId)\n      ? await api.get(\"address-1st-levels\", {\n        params: {\n          country_id: formData.country_id\n        }\n      })\n      : { data: null };\n    setFirstLevelList(addresses);\n  }\n\n  const cityLabel = formData.country_id == braCountryId\n    ? \"Cidade\"\n    : formData.country_id == chlCountryId\n      ? \"Provincia\"\n      : \"Ciudad\";\n\n  const thirdLevelLabel =\n  formData.country_id == chlCountryId ? \"Ciudad / Comuna\" : \"District\";\n\n  return (\n    <div className=\"address\">\n      {/* country */}\n      <SelectFormGroup\n        error={error}\n        label=\"País\"\n        loading={loading}\n        list={countries}\n        listMapValue=\"id\"\n        name=\"country_id\"\n        onChange={handleCountryChange}\n        pluralLabel=\"Países\"\n        requireds={requireds}\n        value={formData.country_id}\n      />\n\n      {/* 1st level */}\n      {[argCountryId, braCountryId, chlCountryId]\n        .map(id => id + \"\")\n        .includes(formData.country_id) && (\n        <SelectFormGroup\n          error={error}\n          label={firstLevelLabel}\n          loading={loading}\n          list={firstLevelList}\n          listMapValue=\"id\"\n          name=\"address_1st_level\"\n          onChange={handleInputChange}\n          pluralLabel={firstLevelPluralLabel}\n          requireds={requireds}\n          value={formData.address_1st_level}\n        />\n      )}\n\n      {/* city */}\n      {[braCountryId, chlCountryId].  map(id => id + \"\").includes(formData.country_id) && (\n        <FormGroup>\n          <Label htmlFor=\"city\">{cityLabel}</Label>\n          <Input\n            id=\"city\"\n            name=\"city\"\n            onChange={handleInputChange}\n            required={requireds}\n            type=\"text\"\n            value={formData.city}\n          />\n          <InvalidFeedback error={error} loading={loading} name=\"city\" />\n        </FormGroup>\n      )}\n\n      {/* 3rd level */}\n      {[chlCountryId].map(id => id + \"\").includes(formData.country_id) && (\n        <FormGroup>\n          <Label htmlFor=\"address_3rd_level\">{thirdLevelLabel}</Label>\n          <Input\n            id=\"address_3rd_level\"\n            name=\"address_3rd_level\"\n            onChange={handleInputChange}\n            required={requireds}\n            type=\"text\"\n            value={formData.address_3rd_level}\n          />\n          <InvalidFeedback\n            error={error}\n            loading={loading}\n            name=\"address_3rd_level\"\n          />\n        </FormGroup>\n      )}\n\n      <FormGroup>\n        <Label htmlFor=\"address\">Dirección</Label>\n        <Input\n          id=\"address\"\n          name=\"address\"\n          onChange={handleInputChange}\n          required={requireds}\n          type=\"text\"\n          value={formData.address}\n        />\n        <InvalidFeedback error={error} loading={loading} name=\"address\" />\n      </FormGroup>\n    </div>\n  );\n};\n\nexport default withAuth(Address, true);\n"]},"metadata":{},"sourceType":"module"}