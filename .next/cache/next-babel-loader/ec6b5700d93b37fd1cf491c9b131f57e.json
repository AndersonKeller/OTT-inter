{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Error from 'next/error';\nimport { STATIC_PATH } from '../constants/constants';\nimport * as Sentry from '@sentry/node';\nimport Color from 'color';\nimport { useContext } from 'react';\nimport { ThemeContext } from 'styled-components';\n\nfunction CustomError(_ref) {\n  var statusCode = _ref.statusCode;\n  var theme = useContext(ThemeContext);\n  var backgroundColor = Color(theme.colors.background).hsl().string();\n  var title = statusCode === 503 ? 'Servidor no disponible' : null;\n  return __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"2207119790\", [backgroundColor, STATIC_PATH]]]) + \" \" + \"error\"\n  }, __jsx(Error, {\n    statusCode: statusCode,\n    title: title\n  }), __jsx(_JSXStyle, {\n    id: \"2207119790\",\n    dynamic: [backgroundColor, STATIC_PATH]\n  }, [\".error>div{background:\".concat(backgroundColor, \" !important;color:#fff !important;}\"), \".error>div>div::after{content:url(\".concat(STATIC_PATH, \"/logos/logo_project@2x.png);display:block;height:auto;margin-right:auto;margin-top:15px;margin-left:auto;max-width:100%;width:150px;}\"), \".error>div h1{border-right-color:rgba(255,255,255,.3) !important;}\"]));\n}\n\nCustomError.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var res, err, asPath, errorInitialProps;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            res = _ref2.res, err = _ref2.err, asPath = _ref2.asPath;\n            _context.next = 3;\n            return Error.getInitialProps({\n              res: res,\n              err: err\n            });\n\n          case 3:\n            errorInitialProps = _context.sent;\n            // Workaround for https://github.com/zeit/next.js/issues/8592, mark when\n            // getInitialProps has run\n            errorInitialProps.hasGetInitialPropsRun = true;\n\n            if (!res) {\n              _context.next = 8;\n              break;\n            }\n\n            // Running on the server, the response object is available.\n            //\n            // Next.js will pass an err on the server if a page's `getInitialProps`\n            // threw or returned a Promise that rejected\n            Sentry.captureException(err);\n            return _context.abrupt(\"return\", errorInitialProps);\n\n          case 8:\n            // If this point is reached, getInitialProps was called without any\n            // information about what the error might be. This is unexpected and may\n            // indicate a bug introduced in Next.js, so record it in Sentry\n            Sentry.captureException(new Error(\"_error.js getInitialProps missing data at path: \".concat(asPath)));\n            return _context.abrupt(\"return\", errorInitialProps);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default CustomError;","map":{"version":3,"sources":["/Users/rafael/Projects/somosgad/dale/pages/_error.js"],"names":["Error","STATIC_PATH","Sentry","Color","useContext","ThemeContext","CustomError","statusCode","theme","backgroundColor","colors","background","hsl","string","title","getInitialProps","res","err","asPath","errorInitialProps","hasGetInitialPropsRun","captureException"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAO,KAAKC,MAAZ,MAAwB,cAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,YAAT,QAA6B,mBAA7B;;AAEA,SAASC,WAAT,OAAqC;AAAA,MAAdC,UAAc,QAAdA,UAAc;AACnC,MAAMC,KAAK,GAAGJ,UAAU,CAACC,YAAD,CAAxB;AACA,MAAMI,eAAe,GAAGN,KAAK,CAACK,KAAK,CAACE,MAAN,CAAaC,UAAd,CAAL,CAA+BC,GAA/B,GAAqCC,MAArC,EAAxB;AACA,MAAMC,KAAK,GAAGP,UAAU,KAAK,GAAf,GAAqB,wBAArB,GAAgD,IAA9D;AACA,SACE;AAAA,kDAOoBE,eAPpB,EAWqBR,WAXrB,aAAe;AAAf,KACE,MAAC,KAAD;AACE,IAAA,UAAU,EAAEM,UADd;AAEE,IAAA,KAAK,EAAEO;AAFT,IADF;AAAA;AAAA,cAOoBL,eAPpB,EAWqBR,WAXrB;AAAA,sCAOoBQ,eAPpB,sFAWqBR,WAXrB,mNADF;AA2BD;;AAEDK,WAAW,CAACS,eAAZ;AAAA,uEAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,GAAT,SAASA,GAAT,EAAcC,GAAd,SAAcA,GAAd,EAAmBC,MAAnB,SAAmBA,MAAnB;AAAA;AAAA,mBACIlB,KAAK,CAACe,eAAN,CAAsB;AAAEC,cAAAA,GAAG,EAAHA,GAAF;AAAOC,cAAAA,GAAG,EAAHA;AAAP,aAAtB,CADJ;;AAAA;AACtBE,YAAAA,iBADsB;AAG5B;AACA;AACAA,YAAAA,iBAAiB,CAACC,qBAAlB,GAA0C,IAA1C;;AAL4B,iBAOxBJ,GAPwB;AAAA;AAAA;AAAA;;AAQ1B;AACA;AACA;AACA;AAEAd,YAAAA,MAAM,CAACmB,gBAAP,CAAwBJ,GAAxB;AAb0B,6CAenBE,iBAfmB;;AAAA;AA2B5B;AACA;AACA;AACAjB,YAAAA,MAAM,CAACmB,gBAAP,CACE,IAAIrB,KAAJ,2DAA6DkB,MAA7D,EADF;AA9B4B,6CAkCrBC,iBAlCqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9B;;AAAA;AAAA;AAAA;AAAA;;AAqCA,eAAeb,WAAf","sourcesContent":["import Error from 'next/error'\nimport { STATIC_PATH } from '../constants/constants'\nimport * as Sentry from '@sentry/node'\nimport Color from 'color'\nimport { useContext } from 'react'\nimport { ThemeContext } from 'styled-components'\n\nfunction CustomError({ statusCode }) {\n  const theme = useContext(ThemeContext)\n  const backgroundColor = Color(theme.colors.background).hsl().string()\n  const title = statusCode === 503 ? 'Servidor no disponible' : null\n  return (\n    <div className=\"error\">\n      <Error\n        statusCode={statusCode}\n        title={title}\n      />\n      <style global jsx>{`\n        .error > div {\n          background: ${backgroundColor} !important;\n          color: #fff !important;\n        }\n        .error > div > div::after {\n          content: url(${STATIC_PATH}/logos/logo_project@2x.png);\n          display: block;\n          height: auto;\n          margin-right: auto;\n          margin-top: 15px;\n          margin-left: auto;\n          max-width: 100%;\n          width: 150px;\n        }\n        .error > div h1 {\n          border-right-color: rgba(255, 255, 255, .3) !important;\n        }\n      `}</style>\n    </div>\n  )\n}\n\nCustomError.getInitialProps = async ({ res, err, asPath }) => {\n  const errorInitialProps = await Error.getInitialProps({ res, err })\n\n  // Workaround for https://github.com/zeit/next.js/issues/8592, mark when\n  // getInitialProps has run\n  errorInitialProps.hasGetInitialPropsRun = true\n\n  if (res) {\n    // Running on the server, the response object is available.\n    //\n    // Next.js will pass an err on the server if a page's `getInitialProps`\n    // threw or returned a Promise that rejected\n\n    Sentry.captureException(err)\n\n    return errorInitialProps\n    // Running on the client (browser).\n    //\n    // Next.js will provide an err if:\n    //\n    //  - a page's `getInitialProps` threw or returned a Promise that rejected\n    //  - an exception was thrown somewhere in the React lifecycle (render,\n    //    componentDidMount, etc) that was caught by Next.js's React Error\n    //    Boundary. Read more about what types of exceptions are caught by Error\n    //    Boundaries: https://reactjs.org/docs/error-boundaries.html\n  }\n\n  // If this point is reached, getInitialProps was called without any\n  // information about what the error might be. This is unexpected and may\n  // indicate a bug introduced in Next.js, so record it in Sentry\n  Sentry.captureException(\n    new Error(`_error.js getInitialProps missing data at path: ${asPath}`)\n  )\n\n  return errorInitialProps\n}\n\nexport default CustomError\n"]},"metadata":{},"sourceType":"module"}