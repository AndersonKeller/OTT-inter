{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport api from '../../../services/api';\nimport FormGroup from './FormGroup';\nimport Input from './Input';\nimport Button from '../../button';\n\nvar PasswordTab = function PasswordTab(_ref) {\n  _s();\n\n  var setLoading = _ref.setLoading;\n\n  var _useState = useState(''),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(false),\n      emailSent = _useState2[0],\n      setEmailSent = _useState2[1];\n\n  var _useState3 = useState(''),\n      message = _useState3[0],\n      setMessage = _useState3[1];\n\n  var _useState4 = useState(false),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var _yield$api$post, data, _error$response, _data, status;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              setLoading(true);\n              _context.prev = 2;\n              _context.next = 5;\n              return api().post('/forgot', {\n                email: email\n              });\n\n            case 5:\n              _yield$api$post = _context.sent;\n              data = _yield$api$post.data;\n              console.table(data);\n              setEmailSent(true);\n              setMessage(data.message);\n              _context.next = 16;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](2);\n              console.table(_context.t0);\n\n              if (_context.t0.response) {\n                _error$response = _context.t0.response, _data = _error$response.data, status = _error$response.status;\n                if (_data) setError(_data);\n              } else {\n                setError({\n                  message: 'An error has occurred!'\n                });\n                console.log('error', _context.t0);\n              }\n\n            case 16:\n              setLoading(false);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 12]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, emailSent ? __jsx(\"p\", null, message) : __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"intro-text\",\n    style: {\n      marginBottom: 15\n    }\n  }, __jsx(\"p\", null, \"\\xBFOlvidaste tu clave?\")), __jsx(\"form\", {\n    method: \"post\",\n    onSubmit: handleSubmit\n  }, __jsx(FormGroup, null, __jsx(Input, {\n    autoFocus: true,\n    id: \"email_recover\",\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    },\n    placeholder: \"E-mail\",\n    required: true,\n    type: \"email\",\n    value: email\n  }), error && __jsx(\"div\", {\n    className: \"invalid-feedback\"\n  }, error.message)), __jsx(Button, {\n    block: true,\n    className: \"enter-btn\",\n    size: \"sm\",\n    type: \"submit\"\n  }, \"Enviar Recuperaci\\xF3n\"))));\n};\n\n_s(PasswordTab, \"7ioOb18Q+OMuaD+YwWZb0FIFSw0=\");\n\n_c = PasswordTab;\nexport default PasswordTab;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordTab\");","map":{"version":3,"sources":["/Users/rafael/Projects/somosgad/dale/components/layout/AuthModal/PasswordTab.js"],"names":["useState","api","FormGroup","Input","Button","PasswordTab","setLoading","email","setEmail","emailSent","setEmailSent","message","setMessage","error","setError","handleSubmit","e","preventDefault","post","data","console","table","response","status","log","marginBottom","target","value"],"mappings":"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","sourcesContent":["import {useState} from 'react'\nimport api from '../../../services/api'\nimport FormGroup from './FormGroup'\nimport Input from './Input'\nimport Button from '../../button'\n\nconst PasswordTab = ({setLoading}) => {\n\n  const [email,setEmail] = useState('')\n  const [emailSent, setEmailSent] = useState(false)\n  const [message, setMessage] = useState('')\n  const [error, setError] = useState(false)\n\n  const handleSubmit = async e => {\n    e.preventDefault()\n    setLoading(true)\n    try{\n      let { data } = await api().post('/forgot', {\n        email\n      })\n      console.table(data)\n      setEmailSent(true)\n      setMessage(data.message)\n    }catch(error){\n      console.table(error)\n      if (error.response) {\n        const { data, status } = error.response\n        if(data) setError(data)\n      } else {\n        setError({message: 'An error has occurred!'})\n        console.log('error', error)\n      }\n    }\n    setLoading(false)\n  }\n\n  return (\n    <>\n      {emailSent ?\n        <p>\n          {message}\n          {/* Acceda al correo electrónico registrado para para recuperar tu clave. */}\n        </p>\n      :\n        <div>\n          <div className=\"intro-text\" style={{ marginBottom: 15 }}>\n            <p>¿Olvidaste tu clave?</p>\n          </div>\n          <form method=\"post\" onSubmit={handleSubmit}>\n            <FormGroup>\n              <Input\n                autoFocus\n                id=\"email_recover\"\n                onChange={e => setEmail(e.target.value)}\n                placeholder=\"E-mail\"\n                required\n                type=\"email\"\n                value={email}\n              />\n              {error && <div className=\"invalid-feedback\">{error.message}</div>}\n            </FormGroup>\n            <Button block className=\"enter-btn\" size=\"sm\" type=\"submit\">Enviar Recuperación</Button>\n          </form>\n        </div>\n      }\n    </>\n  )\n}\n\nexport default PasswordTab\n"]},"metadata":{},"sourceType":"module"}