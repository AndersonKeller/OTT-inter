{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport FormGroup from \"~/components/layout/AuthModal/FormGroup\";\nimport Label from \"~/components/Form/Label\";\nimport Input from \"~/components/layout/AuthModal/Input\";\nimport withAuth from \"~/components/withAuth\";\nimport InvalidFeedback from \"~/components/Form/InvalidFeedback\";\nimport { HAS_WINDOW } from \"~/constants/constants\";\nimport useScript from \"@charlietango/use-script\";\nimport Select from \"~/components/Select/Select\";\nimport Button from \"~/components/button\";\nimport MaskedInput from \"react-text-mask\";\nimport UserContext from \"~/contexts/UserContext\";\nimport { ThemeContext } from \"styled-components\";\nimport Color from \"color\";\nimport NameProject from \"~/components/NameProject\";\nimport { toast } from \"react-toastify\";\n\nconst Payment = ({\n  layoutProps,\n  userData,\n  package_id,\n  packages,\n  api,\n  requireds,\n  handleSubmit,\n  handleFormState,\n  formData,\n  setFormData\n}) => {\n  const theme = useContext(ThemeContext);\n  const primaryColor = Color(theme.colors.primary).hsl().string();\n  const [ready, status] = useScript(\"https://secure.mlstatic.com/sdk/javascript/v1/mercadopago.js\");\n  let selectedPackage = null;\n\n  if (packages && package_id) {\n    selectedPackage = packages.items.find(i => i.id == package_id);\n  }\n\n  const {\n    user\n  } = useContext(UserContext);\n  const {\n    0: error,\n    1: setError\n  } = useState({\n    errors: {}\n  });\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    package_id: \"\",\n    paymentMethodId: null,\n    payment_os: null,\n    cash_paymentMethodId: null,\n    terms: null,\n    discount_id: null,\n    cardNumber: null,\n    cardHolderName: null,\n    cardExpirationDate: null,\n    cardSecurityCode: null,\n    paymentMethodCode: null,\n    docType: \"RUT\",\n    docNumber: null\n  });\n  const {\n    0: cardImg,\n    1: setCardImg\n  } = useState(null);\n  const {\n    0: creditCard,\n    1: setCreditCard\n  } = useState(null);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState();\n  const businessUnitPublicKey = 'APP_USR-fe20d55f-f7d1-49e0-855b-4d5c147ddd0b';\n  const {\n    0: isMercadoPagoReady,\n    1: setIsMercadoPagoReady\n  } = useState(false);\n  const MercadoPago = ready && HAS_WINDOW ? window.Mercadopago : null;\n  const credit_card_id = 1;\n  const debit_card_id = 2;\n  const isCardPayment = [credit_card_id, debit_card_id].includes(values.paymentMethodId);\n  const {\n    0: payMethods,\n    1: setPayMethods\n  } = useState();\n  useEffect(_ => {\n    if (MercadoPago) {\n      MercadoPago.setPublishableKey(businessUnitPublicKey);\n      setIsMercadoPagoReady(true);\n      setPayMethods(MercadoPago.getPaymentMethods());\n    }\n  }, [MercadoPago]);\n  /* handle payment method change */\n\n  function onPaymentChange(e) {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      paymentMethodId: parseInt(e.target.value, 10),\n      cash_paymentMethodId: null\n    }));\n  }\n\n  function onCashPaymentMethodChange(e) {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      cash_paymentMethodId: parseInt(e.target.value, 10)\n    }));\n  }\n\n  const handleInputChange = e => {\n    const {\n      checked,\n      name,\n      value,\n      type\n    } = e.target;\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      [name]: type === \"checkbox\" ? checked ? value === \"true\" ? true : value : false : value\n    }));\n  };\n\n  const handleInputChangeCreditCardNumber = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      [name]: value\n    }));\n    let cardnumber = value;\n\n    if (cardnumber.length >= 6) {\n      let bin = cardnumber.substring(0, 6);\n      MercadoPago.getPaymentMethod({\n        bin: bin\n      }, (status, details) => {\n        if (details.length > 0) {\n          setCardImg(details[0].secure_thumbnail);\n          setCreditCard(details[0]);\n          setValues(_objectSpread(_objectSpread({}, values), {}, {\n            [\"paymentMethodCode\"]: details[0].id,\n            [\"cardNumber\"]: cardnumber\n          }));\n        }\n      });\n    }\n  }; // payment methods\n\n\n  const {\n    0: paymentMethods,\n    1: setPaymentMethods\n  } = useState(); // get payment methods\n\n  useEffect(_ => {\n    const getPaymentMethods = async _ => {\n      const {\n        data\n      } = await api.get(\"payment-methods\");\n      const tempList = [];\n      tempList.push(data[0]);\n      setPaymentMethods(tempList);\n    };\n\n    getPaymentMethods();\n  }, []); // cash payment methods\n\n  const {\n    0: cashPaymentMethods,\n    1: setCashPaymentMethods\n  } = useState(); // get cash payment methods\n\n  useEffect(_ => {\n    const getCashPaymentMethods = async _ => {\n      const {\n        data\n      } = await api.get(\"cash-payment-methods\");\n      setCashPaymentMethods(data);\n    };\n\n    getCashPaymentMethods();\n  }, []);\n\n  let payMethodsHtml = () => {\n    {\n      payMethods && payMethods.map((m, key) => {\n        return __jsx(\"div\", {\n          className: \"col-6 col-md\"\n        }, m.id);\n      });\n    }\n  };\n\n  const submitCredit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    let expirationMonth = \"\";\n    let expirationYear = \"\";\n\n    if (values.cardExpirationDate) {\n      expirationMonth = values.cardExpirationDate.split(\"/\")[0];\n      expirationYear = values.cardExpirationDate.split(\"/\")[1];\n    }\n\n    switch (values.paymentMethodId) {\n      case 1:\n      case 2:\n        MercadoPago.createToken({\n          cardNumber: values.cardNumber,\n          cardholderName: values.cardHolderName,\n          cardExpirationMonth: expirationMonth,\n          cardExpirationYear: expirationYear,\n          securityCode: values.cardSecurityCode,\n          docType: values.docType,\n          docNumber: values.docNumber,\n          email: user.email\n        }, async (statusCode, response) => {\n          let token = \"\";\n\n          if (response && response.cause && response.cause.length > 0) {\n            let errors = [];\n\n            for (let error of response.cause) {\n              if (error.code === \"E301\") {\n                errors[\"cardNumber\"] = \"Há algo de errado com esse número. Digite novamente.\";\n              }\n\n              if (error.code === \"E302\") {\n                errors[\"cardSecurityCode\"] = \"Confira o código de segurança.\";\n              }\n\n              if (error.code === \"316\") {\n                error[\"cardHolderName\"] = \"Por favor, digite um nome válido.\";\n              }\n\n              if (error.code === \"324\") {\n                errors[\"docType\"] = \"Confira seu documento.\";\n              }\n\n              if (error.code === \"325\" || error.code === \"326\") {\n                errors[\"cardExpirationDate\"] = \"Confira a data.\";\n              }\n            }\n\n            setError({\n              errors: errors\n            });\n          }\n\n          try {\n            token = response.id;\n            const res = await api.post(`register/subscribe`, {\n              package_id: package_id,\n              payment_method_id: values.paymentMethodId,\n              payment_method_code: values.paymentMethodCode,\n              token: token\n            });\n            handleSubmit(4, null);\n          } catch (error) {\n            if (error.response) {\n              const {\n                data,\n                status\n              } = error.response;\n              MercadoPago.clearSession();\n              toast.error(data.message, {\n                delay: 500,\n                autoClose: 5000\n              });\n\n              if (status === 422) {\n                setError(data);\n              }\n            } else if (error.request) {\n              setError(error);\n            } else {\n              setError(error);\n            }\n          } finally {\n            setLoading(false);\n          }\n\n          setLoading(false);\n        });\n        break;\n\n      case 3:\n        try {\n          const res = await api.post(`register/subscribe`, {\n            package_id: package_id,\n            payment_method_id: values.paymentMethodId,\n            payment_method_code: values.paymentMethodCode\n          });\n          open(res.data.url);\n          setLoading(false);\n        } catch (e) {\n          setLoading(false);\n          console.log(e);\n        }\n\n        break;\n    }\n  };\n\n  function open(url) {\n    const win = window.open(url, '_blank');\n\n    if (win != null) {\n      win.focus();\n    }\n  }\n\n  return __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"506162247\", [primaryColor, primaryColor, primaryColor]]]) + \" \" + \"register-confirm container text-center responsive\"\n  }, __jsx(\"h2\", {\n    className: _JSXStyle.dynamic([[\"506162247\", [primaryColor, primaryColor, primaryColor]]]) + \" \" + \"card-title text-center\"\n  }, __jsx(\"span\", {\n    className: _JSXStyle.dynamic([[\"506162247\", [primaryColor, primaryColor, primaryColor]]]) + \" \" + \"text-primary\"\n  }, \"\\xA1\"), \"S\\xE9 parte de \", __jsx(NameProject, null), __jsx(\"span\", {\n    className: _JSXStyle.dynamic([[\"506162247\", [primaryColor, primaryColor, primaryColor]]]) + \" \" + \"text-primary\"\n  }, \"!\")), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"506162247\", [primaryColor, primaryColor, primaryColor]]]) + \" \" + \"row\"\n  }, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"506162247\", [primaryColor, primaryColor, primaryColor]]]) + \" \" + \"col-md-6 paymentMethod\"\n  }, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"506162247\", [primaryColor, primaryColor, primaryColor]]]) + \" \" + \"row w-100\"\n  }, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"506162247\", [primaryColor, primaryColor, primaryColor]]]) + \" \" + \"col-12\"\n  }, __jsx(FormGroup, null, __jsx(Label, {\n    htmlFor: \"paymentMethodId\",\n    style: \"margin: 0;\"\n  }, \"Paga con\"), __jsx(Select, {\n    id: \"paymentMethodId\",\n    name: \"paymentMethodId\",\n    required: requireds,\n    onChange: onPaymentChange,\n    value: values.paymentMethodId\n  }, __jsx(\"option\", {\n    value: \"0\",\n    className: _JSXStyle.dynamic([[\"506162247\", [primaryColor, primaryColor, primaryColor]]])\n  }, \"Seleccione\"), paymentMethods && paymentMethods.map((paymentMethod, key) => __jsx(\"option\", {\n    key: paymentMethod.id,\n    state: values.paymentMethodId,\n    value: paymentMethod.id,\n    className: _JSXStyle.dynamic([[\"506162247\", [primaryColor, primaryColor, primaryColor]]])\n  }, paymentMethod.name))), __jsx(InvalidFeedback, {\n    error: error,\n    loading: loading,\n    name: \"paymentMethodId\"\n  })))), (values.paymentMethodId == 1 || values.paymentMethodId == 2) && __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"506162247\", [primaryColor, primaryColor, primaryColor]]]) + \" \" + \"row\"\n  }, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"506162247\", [primaryColor, primaryColor, primaryColor]]]) + \" \" + \"col-12\"\n  }, __jsx(FormGroup, null, __jsx(Label, {\n    htmlFor: \"cardHolderName\"\n  }, \"Nombre impreso en tarjeta\"), __jsx(Input, {\n    id: \"cardHolderName\",\n    name: \"cardHolderName\",\n    required: requireds,\n    type: \"text\",\n    onChange: handleInputChange\n  }))), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"506162247\", [primaryColor, primaryColor, primaryColor]]]) + \" \" + \"col-12\"\n  }, __jsx(FormGroup, null, __jsx(Label, {\n    htmlFor: \"docNumber\"\n  }, \"RUT\"), __jsx(Input, {\n    className: \"form-control\",\n    onChange: handleInputChange,\n    id: \"docNumber\",\n    name: \"docNumber\",\n    maxLength: 20\n  }), __jsx(InvalidFeedback, {\n    error: error,\n    loading: loading,\n    name: \"docNumber\"\n  }))), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"506162247\", [primaryColor, primaryColor, primaryColor]]]) + \" \" + \"col-12\"\n  }, __jsx(FormGroup, null, __jsx(Label, {\n    htmlFor: \"cardNumber\"\n  }, \"N\\xFAmero de Tarjeta\"), __jsx(\"img\", {\n    src: cardImg,\n    className: _JSXStyle.dynamic([[\"506162247\", [primaryColor, primaryColor, primaryColor]]]) + \" \" + \"creditCardBrand\"\n  }), __jsx(MaskedInput, {\n    mask: [/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/],\n    guide: false,\n    className: \"form-control\",\n    onChange: handleInputChangeCreditCardNumber,\n    id: \"cardNumber\",\n    name: \"cardNumber\"\n  }), __jsx(InvalidFeedback, {\n    error: error,\n    loading: loading,\n    name: \"cardNumber\"\n  }))), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"506162247\", [primaryColor, primaryColor, primaryColor]]]) + \" \" + \"col-6\"\n  }, __jsx(FormGroup, null, __jsx(Label, {\n    htmlFor: \"card-duedate\"\n  }, \"Expiraci\\xF3n\"), __jsx(MaskedInput, {\n    mask: [/\\d/, /\\d/, \"/\", /\\d/, /\\d/],\n    guide: false,\n    className: \"form-control\",\n    placeholder: \"MM/AA\",\n    name: \"cardExpirationDate\",\n    onChange: handleInputChange\n  }), __jsx(InvalidFeedback, {\n    error: error,\n    loading: loading,\n    name: \"cardExpirationDate\"\n  }))), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"506162247\", [primaryColor, primaryColor, primaryColor]]]) + \" \" + \"col-6\"\n  }, __jsx(FormGroup, null, __jsx(Label, {\n    htmlFor: \"card-cvv\"\n  }, \"CVV\"), __jsx(MaskedInput, {\n    mask: [/\\d/, /\\d/, /\\d/],\n    guide: false,\n    className: \"form-control\",\n    name: \"cardSecurityCode\",\n    onChange: handleInputChange,\n    placeholder: \"***\"\n  }), __jsx(InvalidFeedback, {\n    error: error,\n    loading: loading,\n    name: \"cardSecurityCode\"\n  }))), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"506162247\", [primaryColor, primaryColor, primaryColor]]]) + \" \" + \"col-12\"\n  }, __jsx(Button, {\n    block: true,\n    color: \"secondary\",\n    type: \"button\",\n    disabled: loading,\n    loading: loading,\n    onClick: submitCredit\n  }, \"Pagar\"))), values.paymentMethodId == 3 && __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"506162247\", [primaryColor, primaryColor, primaryColor]]]) + \" \" + \"row\"\n  }, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"506162247\", [primaryColor, primaryColor, primaryColor]]]) + \" \" + \"col-12\"\n  }, __jsx(Button, {\n    block: true,\n    color: \"secondary\",\n    type: \"button\",\n    disabled: loading,\n    loading: loading,\n    onClick: submitCredit\n  }, \"Gerar Boleto\")))), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"506162247\", [primaryColor, primaryColor, primaryColor]]]) + \" \" + \"col-md-6\"\n  }, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"506162247\", [primaryColor, primaryColor, primaryColor]]]) + \" \" + \"product-summary\"\n  }, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"506162247\", [primaryColor, primaryColor, primaryColor]]]) + \" \" + \"product-image\"\n  }), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"506162247\", [primaryColor, primaryColor, primaryColor]]]) + \" \" + \"product-name-group\"\n  }, __jsx(\"h6\", {\n    className: _JSXStyle.dynamic([[\"506162247\", [primaryColor, primaryColor, primaryColor]]])\n  }, \"Est\\xE1s comprando:\"), __jsx(\"p\", {\n    className: _JSXStyle.dynamic([[\"506162247\", [primaryColor, primaryColor, primaryColor]]]) + \" \" + \"product-name\"\n  }, \"Suscripci\\xF3n - \", __jsx(\"strong\", {\n    className: _JSXStyle.dynamic([[\"506162247\", [primaryColor, primaryColor, primaryColor]]])\n  }, selectedPackage.name), \" recurrente\")), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"506162247\", [primaryColor, primaryColor, primaryColor]]]) + \" \" + \"price-breakdown\"\n  }, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"506162247\", [primaryColor, primaryColor, primaryColor]]]) + \" \" + \"checkout-total\"\n  }, __jsx(\"h6\", {\n    className: _JSXStyle.dynamic([[\"506162247\", [primaryColor, primaryColor, primaryColor]]])\n  }, \"Total\"), __jsx(\"p\", {\n    className: _JSXStyle.dynamic([[\"506162247\", [primaryColor, primaryColor, primaryColor]]]) + \" \" + \"price\"\n  }, \" \", selectedPackage.amount)))), __jsx(Button, {\n    color: \"primary\",\n    onClick: () => handleFormState(3)\n  }, \"Volver\"))), __jsx(_JSXStyle, {\n    id: \"506162247\",\n    dynamic: [primaryColor, primaryColor, primaryColor]\n  }, [\".card{min-height:600px;}\", `.text-primary{color:${primaryColor} !important;}`, `strong.text-primary{color:${primaryColor} !important;}`, \"h2.card-title{font-weight:normal;color:#000;margin-bottom:1em;font-size:1.7em;}\", \".pay-methods{margin:32px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;}\", \"div.card-subtitle{font-size:1.1em;font-weight:500;margin-bottom:2.5em;}\", `.text-primary{color:${primaryColor} !important;}`, \".register-confirm{color:#666666;}\", \"@media (max-width:765px){.card-title{padding:5px 15px;}.responsive{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}label{display:inline-block;margin-bottom:0.5rem;text-align:center;}.justify-content-end{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center !important;-webkit-justify-content:center !important;-ms-flex-pack:center !important;justify-content:center !important;}.row{display:-ms-flexbox;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;margin-right:0px;margin-left:0px;}.col-8{max-width:100% !important;}.offset-3{margin-left:0px;}}\"]));\n};\n\nexport default withAuth(Payment, true);","map":{"version":3,"sources":["/Users/rafael/Projects/somosgad/dale/pages/register/wizard/payment.js"],"names":["React","useContext","useEffect","useState","FormGroup","Label","Input","withAuth","InvalidFeedback","HAS_WINDOW","useScript","Select","Button","MaskedInput","UserContext","ThemeContext","Color","NameProject","toast","Payment","layoutProps","userData","package_id","packages","api","requireds","handleSubmit","handleFormState","formData","setFormData","theme","primaryColor","colors","primary","hsl","string","ready","status","selectedPackage","items","find","i","id","user","error","setError","errors","values","setValues","paymentMethodId","payment_os","cash_paymentMethodId","terms","discount_id","cardNumber","cardHolderName","cardExpirationDate","cardSecurityCode","paymentMethodCode","docType","docNumber","cardImg","setCardImg","creditCard","setCreditCard","loading","setLoading","businessUnitPublicKey","isMercadoPagoReady","setIsMercadoPagoReady","MercadoPago","window","Mercadopago","credit_card_id","debit_card_id","isCardPayment","includes","payMethods","setPayMethods","_","setPublishableKey","getPaymentMethods","onPaymentChange","e","parseInt","target","value","onCashPaymentMethodChange","handleInputChange","checked","name","type","handleInputChangeCreditCardNumber","cardnumber","length","bin","substring","getPaymentMethod","details","secure_thumbnail","paymentMethods","setPaymentMethods","data","get","tempList","push","cashPaymentMethods","setCashPaymentMethods","getCashPaymentMethods","payMethodsHtml","map","m","key","submitCredit","preventDefault","expirationMonth","expirationYear","split","createToken","cardholderName","cardExpirationMonth","cardExpirationYear","securityCode","email","statusCode","response","token","cause","code","res","post","payment_method_id","payment_method_code","clearSession","message","delay","autoClose","request","open","url","console","log","win","focus","paymentMethod","amount"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport FormGroup from \"~/components/layout/AuthModal/FormGroup\";\nimport Label from \"~/components/Form/Label\";\nimport Input from \"~/components/layout/AuthModal/Input\";\nimport withAuth from \"~/components/withAuth\";\nimport InvalidFeedback from \"~/components/Form/InvalidFeedback\";\nimport { HAS_WINDOW } from \"~/constants/constants\";\nimport useScript from \"@charlietango/use-script\";\nimport Select from \"~/components/Select/Select\";\nimport Button from \"~/components/button\";\nimport MaskedInput from \"react-text-mask\";\nimport UserContext from \"~/contexts/UserContext\";\nimport { ThemeContext } from \"styled-components\";\nimport Color from \"color\";\nimport NameProject from \"~/components/NameProject\";\nimport { toast } from \"react-toastify\";\n\nconst Payment = ({\n  layoutProps,\n  userData,\n  package_id,\n  packages,\n  api,\n  requireds,\n  handleSubmit,\n  handleFormState,\n  formData,\n  setFormData\n}) => {\n  const theme = useContext(ThemeContext);\n  const primaryColor = Color(theme.colors.primary)\n    .hsl()\n    .string();\n\n  const [ready, status] = useScript(\n    \"https://secure.mlstatic.com/sdk/javascript/v1/mercadopago.js\"\n  );\n\n  let selectedPackage = null;\n  if (packages && package_id) {\n    selectedPackage = packages.items.find(i => i.id == package_id);\n  }\n\n  const { user } = useContext(UserContext);\n  const [error, setError] = useState({\n    errors: {}\n  });\n\n  const [values, setValues] = useState({\n    package_id: \"\",\n    paymentMethodId: null,\n    payment_os: null,\n    cash_paymentMethodId: null,\n    terms: null,\n    discount_id: null,\n    cardNumber: null,\n    cardHolderName: null,\n    cardExpirationDate: null,\n    cardSecurityCode: null,\n    paymentMethodCode: null,\n    docType: \"RUT\",\n    docNumber: null\n  });\n\n  const [cardImg, setCardImg] = useState(null);\n  const [creditCard, setCreditCard] = useState(null);\n\n  const [loading, setLoading] = useState();\n\n  const businessUnitPublicKey = 'APP_USR-fe20d55f-f7d1-49e0-855b-4d5c147ddd0b'\n  const [isMercadoPagoReady, setIsMercadoPagoReady] = useState(false)\n  const MercadoPago = ready && HAS_WINDOW ? window.Mercadopago : null\n\n  const credit_card_id = 1;\n  const debit_card_id = 2;\n  const isCardPayment = [credit_card_id, debit_card_id].includes(\n    values.paymentMethodId\n  );\n\n  const [payMethods, setPayMethods] = useState();\n\n  useEffect(\n    _ => {\n      if (MercadoPago) {\n        MercadoPago.setPublishableKey(businessUnitPublicKey);\n        setIsMercadoPagoReady(true);\n        setPayMethods(MercadoPago.getPaymentMethods());\n      }\n    },\n    [MercadoPago]\n  );\n\n  /* handle payment method change */\n  function onPaymentChange(e) {\n    setValues({\n      ...values,\n      paymentMethodId: parseInt(e.target.value, 10),\n      cash_paymentMethodId: null\n    });\n  }\n\n  function onCashPaymentMethodChange(e) {\n    setValues({\n      ...values,\n      cash_paymentMethodId: parseInt(e.target.value, 10)\n    });\n  }\n\n  const handleInputChange = e => {\n    const { checked, name, value, type } = e.target;\n    setValues({\n      ...values,\n      [name]:\n        type === \"checkbox\"\n          ? checked\n            ? value === \"true\"\n              ? true\n              : value\n            : false\n          : value\n    });\n  };\n\n  const handleInputChangeCreditCardNumber = e => {\n    const { name, value } = e.target;\n\n    setValues({\n      ...values,\n      [name]: value\n    });\n\n    let cardnumber = value;\n\n    if (cardnumber.length >= 6) {\n      let bin = cardnumber.substring(0, 6);\n\n      MercadoPago.getPaymentMethod(\n        {\n          bin: bin\n        },\n        (status, details) => {\n          if (details.length > 0) {\n            setCardImg(details[0].secure_thumbnail);\n            setCreditCard(details[0]);\n            setValues({\n              ...values,\n              [\"paymentMethodCode\"]: details[0].id,\n              [\"cardNumber\"]: cardnumber\n            });\n          }\n        }\n      );\n    }\n  };\n\n  // payment methods\n  const [paymentMethods, setPaymentMethods] = useState();\n\n  // get payment methods\n  useEffect(_ => {\n    const getPaymentMethods = async _ => {\n      const { data } = await api.get(\"payment-methods\");\n      const tempList = [];\n      tempList.push(data[0]);\n      setPaymentMethods(tempList);\n    };\n    getPaymentMethods();\n  }, []);\n\n  // cash payment methods\n  const [cashPaymentMethods, setCashPaymentMethods] = useState();\n\n  // get cash payment methods\n  useEffect(_ => {\n    const getCashPaymentMethods = async _ => {\n      const { data } = await api.get(\"cash-payment-methods\");\n      setCashPaymentMethods(data);\n    };\n    getCashPaymentMethods();\n  }, []);\n\n  let payMethodsHtml = () => {\n    {\n      payMethods &&\n        payMethods.map((m, key) => {\n          return <div className=\"col-6 col-md\">{m.id}</div>;\n        });\n    }\n  };\n\n  const submitCredit = async e => {\n    e.preventDefault();\n\n    setLoading(true);\n    let expirationMonth = \"\";\n    let expirationYear = \"\";\n\n    if (values.cardExpirationDate) {\n      expirationMonth = values.cardExpirationDate.split(\"/\")[0];\n      expirationYear = values.cardExpirationDate.split(\"/\")[1];\n    }\n\n    switch (values.paymentMethodId) {\n      case 1:\n      case 2:\n        MercadoPago.createToken(\n          {\n            cardNumber: values.cardNumber,\n            cardholderName: values.cardHolderName,\n            cardExpirationMonth: expirationMonth,\n            cardExpirationYear: expirationYear,\n            securityCode: values.cardSecurityCode,\n            docType: values.docType,\n            docNumber: values.docNumber,\n            email: user.email\n          },\n          async (statusCode, response) => {\n            let token = \"\";\n\n            if (response && response.cause && response.cause.length > 0) {\n              let errors = [];\n              for (let error of response.cause) {\n                if (error.code === \"E301\") {\n                  errors[\"cardNumber\"] =\n                    \"Há algo de errado com esse número. Digite novamente.\";\n                }\n                if (error.code === \"E302\") {\n                  errors[\"cardSecurityCode\"] = \"Confira o código de segurança.\";\n                }\n                if (error.code === \"316\") {\n                  error[\"cardHolderName\"] = \"Por favor, digite um nome válido.\";\n                }\n                if (error.code === \"324\") {\n                  errors[\"docType\"] = \"Confira seu documento.\";\n                }\n                if (error.code === \"325\" || error.code === \"326\") {\n                  errors[\"cardExpirationDate\"] = \"Confira a data.\";\n                }\n              }\n              setError({\n                errors: errors\n              });\n            }\n\n            try {\n              token = response.id;\n\n              const res = await api.post(`register/subscribe`, {\n                package_id: package_id,\n                payment_method_id: values.paymentMethodId,\n                payment_method_code: values.paymentMethodCode,\n                token: token\n              });\n\n              handleSubmit(4, null);\n            } catch (error) {\n              if (error.response) {\n                const { data, status } = error.response;\n\n                MercadoPago.clearSession();\n\n                toast.error(data.message, { delay: 500, autoClose: 5000 });\n\n                if (status === 422) {\n                  setError(data);\n                }\n              } else if (error.request) {\n                setError(error);\n              } else {\n                setError(error);\n              }\n            } finally {\n              setLoading(false);\n            }\n\n            setLoading(false);\n          }\n        );\n        break;\n      case 3:\n        try {\n          const res = await api.post(`register/subscribe`, {\n            package_id: package_id,\n            payment_method_id: values.paymentMethodId,\n            payment_method_code: values.paymentMethodCode\n          });\n\n          open(res.data.url);\n\n          setLoading(false)\n\n        } catch (e) {\n          setLoading(false);\n          console.log(e);\n        }\n\n        break;\n    }\n\n  }\n\n  function open(url) {\n    const win = window.open(url, '_blank');\n    if (win != null) {\n      win.focus();\n    }\n  }\n\n  return (\n    <div className=\"register-confirm container text-center responsive\">\n      <h2 className=\"card-title text-center\">\n        <span className={\"text-primary\"}>¡</span>Sé parte de {<NameProject />}\n        <span className={\"text-primary\"}>!</span>\n      </h2>\n      <div className=\"row\">\n        <div className=\"col-md-6 paymentMethod\">\n          <div className=\"row w-100\">\n            <div className=\"col-12\">\n              <FormGroup>\n                <Label htmlFor=\"paymentMethodId\" style=\"margin: 0;\">\n                  Paga con\n                </Label>\n                <Select\n                  id=\"paymentMethodId\"\n                  name=\"paymentMethodId\"\n                  required={requireds}\n                  onChange={onPaymentChange}\n                  value={values.paymentMethodId}\n                >\n                  <option value=\"0\">Seleccione</option>\n                  {paymentMethods &&\n                    paymentMethods.map((paymentMethod, key) => (\n                      <option\n                        key={paymentMethod.id}\n                        state={values.paymentMethodId}\n                        value={paymentMethod.id}\n                      >\n                        {paymentMethod.name}\n                      </option>\n                    ))}\n                </Select>\n                <InvalidFeedback\n                  error={error}\n                  loading={loading}\n                  name=\"paymentMethodId\"\n                />\n              </FormGroup>\n            </div>\n          </div>\n          {(values.paymentMethodId == 1 || values.paymentMethodId == 2) && (\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <FormGroup>\n                  <Label htmlFor=\"cardHolderName\">\n                    Nombre impreso en tarjeta\n                  </Label>\n                  <Input\n                    id=\"cardHolderName\"\n                    name=\"cardHolderName\"\n                    required={requireds}\n                    type=\"text\"\n                    onChange={handleInputChange}\n                  />\n                </FormGroup>\n              </div>\n              <div className=\"col-12\">\n                <FormGroup>\n                  <Label htmlFor=\"docNumber\">RUT</Label>\n                  <Input\n                    className={\"form-control\"}\n                    onChange={handleInputChange}\n                    id=\"docNumber\"\n                    name=\"docNumber\"\n                    maxLength={20}\n                  />\n                  <InvalidFeedback\n                    error={error}\n                    loading={loading}\n                    name=\"docNumber\"\n                  />\n                </FormGroup>\n              </div>\n              <div className=\"col-12\">\n                <FormGroup>\n                  <Label htmlFor=\"cardNumber\">Número de Tarjeta</Label>\n                  <img src={cardImg} className=\"creditCardBrand\" />\n                  <MaskedInput\n                    mask={[\n                      /\\d/,\n                      /\\d/,\n                      /\\d/,\n                      /\\d/,\n                      /\\d/,\n                      /\\d/,\n                      /\\d/,\n                      /\\d/,\n                      /\\d/,\n                      /\\d/,\n                      /\\d/,\n                      /\\d/,\n                      /\\d/,\n                      /\\d/,\n                      /\\d/,\n                      /\\d/\n                    ]}\n                    guide={false}\n                    className={\"form-control\"}\n                    onChange={handleInputChangeCreditCardNumber}\n                    id=\"cardNumber\"\n                    name=\"cardNumber\"\n                  />\n                  <InvalidFeedback\n                    error={error}\n                    loading={loading}\n                    name=\"cardNumber\"\n                  />\n                </FormGroup>\n              </div>\n\n              <div className=\"col-6\">\n                <FormGroup>\n                  <Label htmlFor=\"card-duedate\">Expiración</Label>\n                  <MaskedInput\n                    mask={[/\\d/, /\\d/, \"/\", /\\d/, /\\d/]}\n                    guide={false}\n                    className={\"form-control\"}\n                    placeholder={\"MM/AA\"}\n                    name={\"cardExpirationDate\"}\n                    onChange={handleInputChange}\n                  />\n                  <InvalidFeedback\n                    error={error}\n                    loading={loading}\n                    name=\"cardExpirationDate\"\n                  />\n                </FormGroup>\n              </div>\n              <div className=\"col-6\">\n                <FormGroup>\n                  <Label htmlFor=\"card-cvv\">CVV</Label>\n                  <MaskedInput\n                    mask={[/\\d/, /\\d/, /\\d/]}\n                    guide={false}\n                    className={\"form-control\"}\n                    name={\"cardSecurityCode\"}\n                    onChange={handleInputChange}\n                    placeholder={\"***\"}\n                  />\n                  <InvalidFeedback\n                    error={error}\n                    loading={loading}\n                    name=\"cardSecurityCode\"\n                  />\n                </FormGroup>\n              </div>\n              <div className=\"col-12\">\n                <Button\n                  block\n                  color=\"secondary\"\n                  type=\"button\"\n                  disabled={loading}\n                  loading={loading}\n                  onClick={submitCredit}\n                >\n                  Pagar\n                </Button>\n              </div>\n            </div>\n          )}\n\n          {values.paymentMethodId == 3 && (\n            <div className={\"row\"}>\n              <div className=\"col-12\">\n                <Button\n                  block\n                  color=\"secondary\"\n                  type=\"button\"\n                  disabled={loading}\n                  loading={loading}\n                  onClick={submitCredit}\n                >\n                  Gerar Boleto\n                </Button>\n              </div>\n            </div>\n          )}\n\n\n        </div>\n\n        <div className=\"col-md-6\">\n          <div className=\"product-summary\">\n            <div className=\"product-image\">\n              {/*<img src=\"/static/lau/subs/plan_hero.png\" alt=\"\" />*/}\n            </div>\n            <div className={\"product-name-group\"}>\n              <h6>Estás comprando:</h6>\n              <p className={\"product-name\"}>\n                Suscripción - <strong>{selectedPackage.name}</strong> recurrente\n              </p>\n            </div>\n            <div className={\"price-breakdown\"}>\n              <div className=\"checkout-total\">\n                <h6>Total</h6>\n                <p className={\"price\"}> {selectedPackage.amount}</p>\n              </div>\n            </div>\n          </div>\n          <Button color=\"primary\" onClick={() => handleFormState(3)}>\n            Volver\n          </Button>\n        </div>\n      </div>\n      <style jsx global={true}>{`\n        .card {\n          min-height: 600px;\n        }\n        .text-primary {\n          color: ${ primaryColor} !important;\n        }\n\n        strong.text-primary {\n          color: ${ primaryColor} !important;\n        }\n\n        h2.card-title {\n          font-weight: normal;\n          color: #000;\n          margin-bottom: 1em;\n          font-size: 1.7em;\n        }\n\n        .pay-methods {\n          margin: 32px;\n          display: flex;\n          flex-wrap: wrap;\n        }\n        div.card-subtitle {\n          font-size: 1.1em;\n          font-weight: 500;\n          margin-bottom: 2.5em;\n        }\n\n        .text-primary {\n          color: ${ primaryColor} !important;\n        }\n        .register-confirm {\n          color: #666666;\n        }\n        @media (max-width: 765px) {\n          .card-title {\n            padding: 5px 15px;\n          }\n          .responsive {\n            display: flex;\n            flex-wrap: wrap;\n            justify-content: center;\n          }\n          label {\n            display: inline-block;\n            margin-bottom: 0.5rem;\n            text-align: center;\n          }\n\n          .justify-content-end {\n            display: flex;\n            justify-content: center !important;\n          }\n          .row {\n            display: -ms-flexbox;\n            display: flex;\n            -ms-flex-wrap: wrap;\n            margin-right: 0px;\n            margin-left: 0px;\n          }\n          .col-8 {\n            max-width: 100% !important;\n          }\n          .offset-3 {\n            margin-left: 0px;\n          }\n        }\n      ` }</style>\n    </div>\n  )\n}\n\nexport default withAuth(Payment, true);\n"]},"metadata":{},"sourceType":"module"}