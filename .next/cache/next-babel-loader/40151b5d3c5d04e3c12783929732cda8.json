{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// import sleep from 'sleep-promise'\nimport Layout from '~/components/layout/Layout';\nimport FormGroup from '~/components/layout/AuthModal/FormGroup';\nimport Label from '~/components/layout/AuthModal/Label';\nimport Input from '~/components/layout/AuthModal/Input';\nimport { useContext, useState } from 'react';\nimport withAuth from '~/components/withAuth';\nimport { IS_PRODUCTION } from \"~/constants/constants\";\nimport UserContext from \"~/contexts/UserContext\";\nimport Select from \"~/components/Select/Select\";\nimport Loading from \"~/components/Loading/Loading\"; // import Address from \"~/pages/register/wizard/partials/address\"\n\nvar Address = function Address(_ref) {\n  _s();\n\n  var api = _ref.api,\n      error = _ref.error,\n      handleInputChange = _ref.handleInputChange,\n      setValues = _ref.setValues,\n      loading = _ref.loading,\n      requireds = _ref.requireds,\n      values = _ref.values;\n  var argCountryId = 11;\n  var braCountryId = 32;\n  var chlCountryId = 48;\n  var countryId = values.country_id,\n      address_1st_level = values.address_1st_level,\n      city = values.city,\n      address_3rd_level = values.address_3rd_level,\n      address = values.address;\n\n  var _useState = useState(),\n      countries = _useState[0],\n      setCountries = _useState[1];\n\n  useEffect(function (_) {\n    (function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_) {\n        var _yield$api$get, data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return api.get('countries');\n\n              case 2:\n                _yield$api$get = _context.sent;\n                data = _yield$api$get.data;\n                setCountries(data);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    })()();\n  }, []);\n\n  var handleCountryChange = function handleCountryChange(e) {\n    var _objectSpread2;\n\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    setValues(_objectSpread(_objectSpread({}, values), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, name, value), _defineProperty(_objectSpread2, \"address_1st_level\", ''), _objectSpread2)));\n  };\n\n  var firstLevelLabel = countryId == argCountryId ? 'Provincia' : countryId == braCountryId ? 'Estado' : countryId == chlCountryId ? 'RegiÃ³n' : 'State';\n  var firstLevelPluralLabel = countryId == argCountryId ? 'Provincias' : countryId == braCountryId ? 'Estados' : countryId == chlCountryId ? 'Regiones' : 'States';\n\n  var _useState2 = useState(),\n      firstLevelList = _useState2[0],\n      setFirstLevelList = _useState2[1];\n\n  useEffect(function (_) {\n    (function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_) {\n        var parsedCountryId, _ref4, addresses;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                parsedCountryId = parseInt(countryId);\n\n                if (![argCountryId, braCountryId, chlCountryId].includes(parsedCountryId)) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                _context2.next = 4;\n                return api.get('address-1st-levels', {\n                  params: {\n                    country_id: countryId\n                  }\n                });\n\n              case 4:\n                _context2.t0 = _context2.sent;\n                _context2.next = 8;\n                break;\n\n              case 7:\n                _context2.t0 = {\n                  data: null\n                };\n\n              case 8:\n                _ref4 = _context2.t0;\n                addresses = _ref4.data;\n                setFirstLevelList(addresses);\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    })()();\n  }, [countryId]);\n  var cityLabel = countryId == braCountryId ? 'Cidade' : countryId == chlCountryId ? 'Provincia' : 'Ciudad';\n  var thirdLevelLabel = countryId == chlCountryId ? 'Comuna' : 'District';\n  return __jsx(\"div\", {\n    className: \"address\"\n  }, __jsx(\"h3\", {\n    className: \"h3\"\n  }, \"Ubicaci\\xF3n\"), __jsx(SelectFormGroup, {\n    error: error,\n    label: \"Pa\\xEDs\",\n    loading: loading,\n    list: countries,\n    listMapValue: \"id\",\n    name: \"country_id\",\n    onChange: handleCountryChange,\n    pluralLabel: \"Pa\\xEDses\",\n    requireds: requireds,\n    value: countryId\n  }), [argCountryId, braCountryId, chlCountryId].map(function (id) {\n    return id + '';\n  }).includes(countryId) && __jsx(SelectFormGroup, {\n    error: error,\n    label: firstLevelLabel,\n    loading: loading,\n    list: firstLevelList,\n    listMapValue: \"id\",\n    name: \"address_1st_level\",\n    onChange: handleInputChange,\n    pluralLabel: firstLevelPluralLabel,\n    requireds: requireds,\n    value: address_1st_level\n  }), [braCountryId, chlCountryId].map(function (id) {\n    return id + '';\n  }).includes(countryId) && __jsx(FormGroup, null, __jsx(Label, {\n    htmlFor: \"city\"\n  }, cityLabel), __jsx(Input, {\n    id: \"city\",\n    name: \"city\",\n    onChange: handleInputChange,\n    required: requireds,\n    type: \"text\",\n    value: city\n  }), __jsx(InvalidFeedback, {\n    error: error,\n    loading: loading,\n    name: \"city\"\n  })), [chlCountryId].map(function (id) {\n    return id + '';\n  }).includes(countryId) && __jsx(FormGroup, null, __jsx(Label, {\n    htmlFor: \"address_3rd_level\"\n  }, thirdLevelLabel), __jsx(Input, {\n    id: \"address_3rd_level\",\n    name: \"address_3rd_level\",\n    onChange: handleInputChange,\n    required: requireds,\n    type: \"text\",\n    value: address_3rd_level\n  }), __jsx(InvalidFeedback, {\n    error: error,\n    loading: loading,\n    name: \"address_3rd_level\"\n  })), __jsx(FormGroup, null, __jsx(Label, {\n    htmlFor: \"address\"\n  }, \"Direcci\\xF3n\"), __jsx(Input, {\n    id: \"address\",\n    name: \"address\",\n    onChange: handleInputChange,\n    required: requireds,\n    type: \"text\",\n    value: address\n  }), __jsx(InvalidFeedback, {\n    error: error,\n    loading: loading,\n    name: \"address\"\n  })));\n};\n\n_s(Address, \"cSsZ5S0IzjSw6pBDM5oB+1xY34c=\");\n\n_c = Address;\nexport default _c2 = withAuth(Address, true);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Address\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/rafael/Projects/somosgad/dale/pages/register/wizard/partials/address.js"],"names":["Layout","FormGroup","Label","Input","useContext","useState","withAuth","IS_PRODUCTION","UserContext","Select","Loading","Address","api","error","handleInputChange","setValues","loading","requireds","values","argCountryId","braCountryId","chlCountryId","countryId","country_id","address_1st_level","city","address_3rd_level","address","countries","setCountries","useEffect","_","get","data","handleCountryChange","e","target","name","value","firstLevelLabel","firstLevelPluralLabel","firstLevelList","setFirstLevelList","parsedCountryId","parseInt","includes","params","addresses","cityLabel","thirdLevelLabel","map","id"],"mappings":"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","sourcesContent":["// import sleep from 'sleep-promise'\nimport Layout from '~/components/layout/Layout'\nimport FormGroup from '~/components/layout/AuthModal/FormGroup'\nimport Label from '~/components/layout/AuthModal/Label'\nimport Input from '~/components/layout/AuthModal/Input'\nimport { useContext, useState } from 'react'\nimport withAuth from '~/components/withAuth'\nimport { IS_PRODUCTION } from \"~/constants/constants\";\nimport UserContext from \"~/contexts/UserContext\";\nimport Select from \"~/components/Select/Select\";\nimport Loading from \"~/components/Loading/Loading\";\n// import Address from \"~/pages/register/wizard/partials/address\"\n\nconst Address = ({\n                   api,\n                   error,\n                   handleInputChange,\n                   setValues,\n                   loading,\n                   requireds,\n                   values,\n                 }) => {\n\n  const argCountryId = 11\n  const braCountryId = 32\n  const chlCountryId = 48\n\n  const { country_id: countryId, address_1st_level, city, address_3rd_level, address } = values\n\n  const [ countries, setCountries ] = useState()\n\n  useEffect( _ => {\n    (async _ => {\n      const { data } = await api.get('countries')\n      setCountries(data)\n    })()\n  }, [])\n\n  const handleCountryChange = e => {\n    const { name, value } = e.target\n    setValues({\n      ...values,\n      [name]: value,\n      address_1st_level: '',\n    })\n  }\n\n  const firstLevelLabel = countryId == argCountryId ? 'Provincia' :\n    countryId == braCountryId ? 'Estado' :\n      countryId == chlCountryId ? 'RegiÃ³n' :\n        'State'\n\n  const firstLevelPluralLabel = countryId == argCountryId ? 'Provincias' :\n    countryId == braCountryId ? 'Estados' :\n      countryId == chlCountryId ? 'Regiones' :\n        'States'\n\n  const [ firstLevelList, setFirstLevelList ] = useState()\n\n  useEffect(_ => {\n    (async _ => {\n      const parsedCountryId = parseInt(countryId)\n      const { data: addresses } = [argCountryId, braCountryId, chlCountryId].includes(parsedCountryId) ?\n        await api.get('address-1st-levels', {\n          params: {\n            country_id: countryId,\n          },\n        }) : { data: null }\n      setFirstLevelList(addresses)\n    })()\n  }, [countryId])\n\n  const cityLabel = countryId == braCountryId ? 'Cidade' :\n    countryId == chlCountryId ? 'Provincia' :\n      'Ciudad'\n\n  const thirdLevelLabel = countryId == chlCountryId ? 'Comuna' : 'District'\n\n  return (\n    <div className=\"address\">\n      <h3 className=\"h3\">UbicaciÃ³n</h3>\n\n      {/* country */}\n      <SelectFormGroup\n        error={error}\n        label=\"PaÃ­s\"\n        loading={loading}\n        list={countries}\n        listMapValue=\"id\"\n        name=\"country_id\"\n        onChange={handleCountryChange}\n        pluralLabel=\"PaÃ­ses\"\n        requireds={requireds}\n        value={countryId}\n      />\n\n      {/* 1st level */}\n      {[argCountryId, braCountryId, chlCountryId].map(id => id+'').includes(countryId) && (\n        <SelectFormGroup\n          error={error}\n          label={firstLevelLabel}\n          loading={loading}\n          list={firstLevelList}\n          listMapValue=\"id\"\n          name=\"address_1st_level\"\n          onChange={handleInputChange}\n          pluralLabel={firstLevelPluralLabel}\n          requireds={requireds}\n          value={address_1st_level}\n        />\n      )}\n\n      {/* city */}\n      {[braCountryId, chlCountryId].map(id => id+'').includes(countryId) && (\n        <FormGroup>\n          <Label htmlFor=\"city\">{cityLabel}</Label>\n          <Input\n            id=\"city\"\n            name=\"city\"\n            onChange={handleInputChange}\n            required={requireds}\n            type=\"text\"\n            value={city}\n          />\n          <InvalidFeedback error={error} loading={loading} name=\"city\" />\n        </FormGroup>\n      )}\n\n      {/* 3rd level */}\n      {[chlCountryId].map(id => id+'').includes(countryId) && (\n        <FormGroup>\n          <Label htmlFor=\"address_3rd_level\">{thirdLevelLabel}</Label>\n          <Input\n            id=\"address_3rd_level\"\n            name=\"address_3rd_level\"\n            onChange={handleInputChange}\n            required={requireds}\n            type=\"text\"\n            value={address_3rd_level}\n          />\n          <InvalidFeedback error={error} loading={loading} name=\"address_3rd_level\" />\n        </FormGroup>\n      )}\n\n      <FormGroup>\n        <Label htmlFor=\"address\">DirecciÃ³n</Label>\n        <Input\n          id=\"address\"\n          name=\"address\"\n          onChange={handleInputChange}\n          required={requireds}\n          type=\"text\"\n          value={address}\n        />\n        <InvalidFeedback error={error} loading={loading} name=\"address\" />\n      </FormGroup>\n\n    </div>\n  )\n}\n\nexport default withAuth(Address, true);\n"]},"metadata":{},"sourceType":"module"}