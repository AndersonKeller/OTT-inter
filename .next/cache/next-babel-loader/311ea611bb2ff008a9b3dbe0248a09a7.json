{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useRouter } from 'next/router';\nimport { createContext, useState } from 'react';\nexport var AuthModalContext = createContext();\nexport function AuthModalProvider(_ref) {\n  var children = _ref.children;\n  var allowedTabs = ['login', 'password', 'register'];\n  var router = useRouter();\n  var _router$query = router.query,\n      modal = _router$query.modal,\n      code = _router$query.code,\n      socialProvider = _router$query.socialProvider;\n  var shouldAutoOpen = allowedTabs.includes(modal);\n\n  var _useState = useState(shouldAutoOpen ? true : false),\n      show = _useState[0],\n      setShow = _useState[1];\n\n  var _useState2 = useState(shouldAutoOpen ? modal : 'login'),\n      tab = _useState2[0],\n      setTab = _useState2[1];\n\n  var _useState3 = useState([]),\n      tabsHistory = _useState3[0],\n      setTabHistory = _useState3[1];\n\n  var _useState4 = useState(),\n      packageId = _useState4[0],\n      setPackageId = _useState4[1];\n\n  function backTab() {\n    if (tabsHistory.length <= 1) {\n      throw \"can't back tab 'cause there are no more tabs on history\";\n    }\n\n    var newTab = tabsHistory[tabsHistory.length - 2];\n    setTab(newTab);\n    var newTabHistory = tabsHistory.slice(0, -1);\n    setTabHistory(newTabHistory);\n    return true;\n  }\n\n  function changeTab(tabName) {\n    validateTab(tabName);\n    setTab(tabName);\n    var newTabHistory = [].concat(_toConsumableArray(tabsHistory), [tabName]);\n    setTabHistory(newTabHistory);\n    return true;\n  }\n\n  function closeAuthModal() {\n    setShow(false);\n    return true;\n  }\n\n  function openAuthModal() {\n    var wishedTab = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'login';\n    var packageId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    validateTab(wishedTab);\n\n    if (tab !== wishedTab) {\n      setTab(wishedTab);\n    }\n\n    var newTabHistory = [wishedTab];\n    setTabHistory(newTabHistory);\n    setPackageId(packageId);\n    setShow(true);\n    return true;\n  }\n\n  function validateTab(tabName) {\n    if (!allowedTabs.includes(tabName)) {\n      throw 'unknown tab';\n    }\n\n    return true;\n  }\n\n  return __jsx(AuthModalContext.Provider, {\n    value: _objectSpread({}, {\n      backTab: backTab,\n      changeTab: changeTab,\n      closeAuthModal: closeAuthModal,\n      openAuthModal: openAuthModal,\n      packageId: packageId,\n      show: show,\n      tab: tab,\n      tabsHistory: tabsHistory,\n      code: code,\n      socialProvider: socialProvider\n    })\n  }, children);\n}","map":{"version":3,"sources":["/Users/rafael/Projects/somosgad/dale/contexts/AuthModalContext.js"],"names":["useRouter","createContext","useState","AuthModalContext","AuthModalProvider","children","allowedTabs","router","query","modal","code","socialProvider","shouldAutoOpen","includes","show","setShow","tab","setTab","tabsHistory","setTabHistory","packageId","setPackageId","backTab","length","newTab","newTabHistory","slice","changeTab","tabName","validateTab","closeAuthModal","openAuthModal","wishedTab"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router'\nimport { createContext, useState } from 'react'\n\nexport const AuthModalContext = createContext()\n\nexport function AuthModalProvider({ children }) {\n\n  const allowedTabs = ['login', 'password', 'register']\n  const router = useRouter()\n  const { modal, code, socialProvider } = router.query\n  const shouldAutoOpen = allowedTabs.includes(modal)\n  const [ show, setShow ] = useState(shouldAutoOpen ? true : false)\n  const [ tab, setTab ] = useState(shouldAutoOpen ? modal : 'login')\n  const [ tabsHistory, setTabHistory ] = useState([])\n  const [ packageId, setPackageId ] = useState()\n\n  function backTab() {\n    if (tabsHistory.length <= 1) {\n      throw \"can't back tab 'cause there are no more tabs on history\"\n    }\n    const newTab = tabsHistory[tabsHistory.length - 2]\n    setTab(newTab)\n    const newTabHistory = tabsHistory.slice(0, -1)\n    setTabHistory(newTabHistory)\n    return true\n  }\n\n  function changeTab(tabName) {\n    validateTab(tabName)\n    setTab(tabName)\n    const newTabHistory = [...tabsHistory, tabName]\n    setTabHistory(newTabHistory)\n    return true\n  }\n\n  function closeAuthModal() {\n    setShow(false)\n    return true\n  }\n\n  function openAuthModal(wishedTab = 'login', packageId = null) {\n    validateTab(wishedTab)\n    if (tab !== wishedTab) {\n      setTab(wishedTab)\n    }\n    const newTabHistory = [wishedTab]\n    setTabHistory(newTabHistory)\n    setPackageId(packageId)\n    setShow(true)\n    return true\n  }\n\n  function validateTab(tabName) {\n    if ( ! allowedTabs.includes(tabName)) {\n      throw 'unknown tab'\n    }\n    return true\n  }\n\n  return (\n    <AuthModalContext.Provider value={{...{\n      backTab,\n      changeTab,\n      closeAuthModal,\n      openAuthModal,\n      packageId,\n      show,\n      tab,\n      tabsHistory,\n      code,\n      socialProvider\n    }}}>\n      {children}\n    </AuthModalContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}