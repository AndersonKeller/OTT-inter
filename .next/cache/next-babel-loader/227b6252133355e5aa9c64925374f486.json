{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n// nextjs imports\nimport Router from 'next/router';\nimport Head from 'next/head'; // react imports\n\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport nookies from 'nookies'; // app imports\n\nimport FormGroup from '~/components/layout/AuthModal/FormGroup';\nimport withAuth from '~/components/withAuth';\nimport { FkInput } from '~/components/Formik/fields';\nimport Layout from '~/components/layout/Layout';\nimport Button from '~/components/button';\nimport api from '~/services/api';\nimport { CONFIG } from '~/config';\nimport CardLogoHeader from '~/components/CardLogoHeader/index';\nimport { StyleForm } from '~/components/layout/changeEmail/index';\n\nconst changeEmailPage = ({\n  layoutProps,\n  user,\n  updateUser\n}) => {\n  const handleSubmit = async (fields, actions) => {\n    var msg = '';\n\n    try {\n      const res = await api().post('email', fields);\n      updateUser(res.data);\n      msg = JSON.stringify({\n        success: \"Acceda al correo electrónico para confirmación\"\n      });\n    } catch (error) {\n      var {\n        message\n      } = error.message ? error : error.response ? error.response.data : '';\n      console.table(error);\n      msg = JSON.stringify({\n        error: \"An Error Occured while updating: \" + message\n      });\n    } finally {\n      nookies.set({}, 'flash_message', msg, {\n        path: '/'\n      });\n      Router.push('/user/account');\n    }\n  };\n\n  return __jsx(Layout, layoutProps, __jsx(\"div\", {\n    className: \"detail\"\n  }, user && __jsx(Formik, {\n    initialValues: (({\n      email: oldEmail\n    }) => {\n      return {\n        oldEmail,\n        email: ''\n      };\n    })(user),\n    validationSchema: getYupSchema(),\n    onSubmit: handleSubmit,\n    component: DataForm\n  })));\n};\n\nconst DataForm = ({\n  isSubmitting\n}) => __jsx(Form, null, __jsx(CardLogoHeader, null, __jsx(StyleForm, null, __jsx(\"h1\", {\n  className: \"h2\"\n}, \"Cambiar Email\"), __jsx(\"div\", {\n  class: \"painel\"\n}, __jsx(\"div\", {\n  className: \"row\"\n}, __jsx(\"div\", {\n  style: {\n    width: \"100%\"\n  }\n}, __jsx(FormGroup, {\n  className: \"form-input\"\n}, __jsx(FkInput, {\n  name: \"oldEmail\",\n  label: \"Email Actual\",\n  type: \"email\",\n  disabled: true\n}))))), __jsx(\"div\", {\n  className: \"row row-aling \"\n}, __jsx(\"div\", {\n  className: \"input-aling\"\n}, __jsx(FormGroup, {\n  className: \"form-input\"\n}, __jsx(FkInput, {\n  name: \"email\",\n  label: \"Nuevo Email\",\n  type: \"email\"\n}))), __jsx(\"div\", {\n  style: {\n    padding: \" 20px\"\n  }\n}, __jsx(Button, {\n  style: {\n    bakground: \"#008e38!important\"\n  },\n  type: \"submit\",\n  disabled: isSubmitting,\n  loading: isSubmitting\n}, \"Aceptar\")))))); // create Yup validation Schema\n\n\nconst getYupSchema = _ => {\n  const nullable3CharMinString = Yup.string().trim().nullable().required('Obligatorio').min(3, 'Debe tener 3 caracteres o más.');\n  return Yup.object({\n    email: nullable3CharMinString.email('Correo inválido')\n  });\n};\n\nexport default withAuth(changeEmailPage);","map":{"version":3,"sources":["/Users/rafael/Projects/somosgad/dale/pages/user/changeEmail.js"],"names":["Router","Head","Formik","Form","Yup","nookies","FormGroup","withAuth","FkInput","Layout","Button","api","CONFIG","CardLogoHeader","StyleForm","changeEmailPage","layoutProps","user","updateUser","handleSubmit","fields","actions","msg","res","post","data","JSON","stringify","success","error","message","response","console","table","set","path","push","email","oldEmail","getYupSchema","DataForm","isSubmitting","width","padding","bakground","_","nullable3CharMinString","string","trim","nullable","required","min","object"],"mappings":"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","sourcesContent":["// nextjs imports\nimport Router from 'next/router'\nimport Head from 'next/head'\n\n// react imports\nimport { Formik, Form } from 'formik'\nimport * as Yup from 'yup'\n\nimport nookies from 'nookies'\n\n// app imports\nimport FormGroup from '~/components/layout/AuthModal/FormGroup'\nimport withAuth from '~/components/withAuth'\nimport { FkInput } from '~/components/Formik/fields'\nimport Layout from '~/components/layout/Layout'\nimport Button from '~/components/button'\nimport api from '~/services/api'\nimport { CONFIG } from '~/config'\nimport CardLogoHeader from '~/components/CardLogoHeader/index'\nimport { StyleForm } from '~/components/layout/changeEmail/index'\n\nconst changeEmailPage = ({ layoutProps, user, updateUser }) => {\n\n  const handleSubmit = async (fields, actions) => {\n    var msg = ''\n\n    try {\n      const res = await api().post('email', fields)\n      updateUser(res.data)\n      msg = JSON.stringify({ success: \"Acceda al correo electrónico para confirmación\" })\n\n    } catch (error) {\n      var { message } = error.message ? error : error.response ? error.response.data : ''\n      console.table(error);\n      msg = JSON.stringify({ error: \"An Error Occured while updating: \" + message })\n    } finally {\n      nookies.set({}, 'flash_message', msg, { path: '/' })\n      Router.push('/user/account')\n    }\n  }\n\n  return (\n    <Layout {...layoutProps}>\n\n\n      <div className=\"detail\">\n\n        {user &&\n          <Formik\n            initialValues={\n              (({ email: oldEmail }) => {\n                return { oldEmail, email: '' }\n              })(user)\n            }\n            validationSchema={getYupSchema()}\n            onSubmit={handleSubmit}\n            component={DataForm}\n          />\n        }\n      </div>\n\n\n    </Layout>\n  );\n}\n\n\n\nconst DataForm = ({ isSubmitting }) => <Form>\n\n\n\n  <CardLogoHeader>\n    <StyleForm>\n      <h1 className=\"h2\">Cambiar Email</h1>\n      <div class=\"painel\">\n        <div className=\"row\">\n          <div style={{ width: \"100%\" }}>\n            <FormGroup className=\"form-input\">\n              <FkInput name=\"oldEmail\" label=\"Email Actual\" type=\"email\" disabled />\n            </FormGroup>\n          </div>\n        </div>\n      </div>\n      <div className=\"row row-aling \" >\n        <div className=\"input-aling\">\n          <FormGroup className=\"form-input\">\n            <FkInput name=\"email\" label=\"Nuevo Email\" type=\"email\" />\n          </FormGroup>\n        </div>\n        <div style={{ padding: \" 20px\" }} >\n          <Button style={{ bakground: \"#008e38!important\" }} type=\"submit\" disabled={isSubmitting} loading={isSubmitting}>\n            Aceptar\n      </Button>\n        </div>\n      </div>\n    </StyleForm>\n  </CardLogoHeader >\n</Form >\n// create Yup validation Schema\nconst getYupSchema = _ => {\n  const nullable3CharMinString = Yup.string()\n    .trim().nullable()\n    .required('Obligatorio')\n    .min(3, 'Debe tener 3 caracteres o más.')\n\n  return Yup.object({\n    email: nullable3CharMinString\n      .email('Correo inválido'),\n  })\n}\n\nexport default withAuth(changeEmailPage)\n"]},"metadata":{},"sourceType":"module"}