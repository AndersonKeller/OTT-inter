{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useContext, useEffect, useState } from \"react\";\nimport FormGroup from \"~/components/layout/AuthModal/FormGroup\";\nimport Label from \"~/components/Form/Label\";\nimport Input from \"~/components/layout/AuthModal/Input\";\nimport InputRadio from \"~/components/Form/InputRadio\";\nimport withAuth from \"~/components/withAuth\";\nimport InvalidFeedback from \"~/components/Form/InvalidFeedback\";\nimport { HAS_WINDOW } from \"~/constants/constants\";\nimport useScript from \"@charlietango/use-script\";\nimport Select from \"~/components/Select/Select\";\nimport Button from \"~/components/button\";\nimport MaskedInput from 'react-text-mask';\nimport UserContext from \"~/contexts/UserContext\";\n\nconst Payment = ({\n  layoutProps,\n  userData,\n  package_id,\n  packages,\n  api,\n  error,\n  requireds\n}) => {\n  const [ready, status] = useScript('https://secure.mlstatic.com/sdk/javascript/v1/mercadopago.js');\n  let selectedPackage = null;\n\n  if (packages && package_id) {\n    selectedPackage = packages.items.find(i => i.id == package_id);\n    console.log(selectedPackage);\n  }\n\n  const {\n    user\n  } = useContext(UserContext);\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    package_id: '',\n    payment_method_id: null,\n    payment_os: null,\n    cash_payment_method_id: null,\n    terms: null,\n    discount_id: null,\n    cardNumber: null,\n    cardHolderName: null,\n    cardExpirationDate: null,\n    cardSecurityCode: null,\n    docType: \"CPF\",\n    docNumber: null\n  });\n  const {\n    0: cardImg,\n    1: setCardImg\n  } = useState(null);\n  const {\n    0: creditCard,\n    1: setCreditCard\n  } = useState(null);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState();\n  const businessUnitPublicKey = 'TEST-7205c1be-9805-4308-bf00-6557c5b56b88';\n  const {\n    0: isMercadoPagoReady,\n    1: setIsMercadoPagoReady\n  } = useState(false);\n  const MercadoPago = ready && HAS_WINDOW ? window.Mercadopago : null;\n  const credit_card_id = 1;\n  const debit_card_id = 2;\n  const isCardPayment = [credit_card_id, debit_card_id].includes(values.payment_method_id);\n  useEffect(_ => {\n    if (MercadoPago) {\n      MercadoPago.setPublishableKey(businessUnitPublicKey);\n      setIsMercadoPagoReady(true);\n    }\n  }, [MercadoPago]);\n  /* handle payment method change */\n\n  function onPaymentChange(e) {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      payment_method_id: parseInt(e.target.value, 10),\n      cash_payment_method_id: null\n    }));\n  }\n\n  function onCashPaymentMethodChange(e) {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      cash_payment_method_id: parseInt(e.target.value, 10)\n    }));\n  }\n\n  const handleInputChange = e => {\n    const {\n      checked,\n      name,\n      value,\n      type\n    } = e.target;\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      [name]: type === 'checkbox' ? checked ? value === 'true' ? true : value : false : value\n    }));\n  };\n\n  const handleInputChangeCreditCardNumber = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      [name]: value\n    }));\n    let cardnumber = value;\n\n    if (cardnumber.length >= 6) {\n      let bin = cardnumber.substring(0, 6);\n      MercadoPago.getPaymentMethod({\n        \"bin\": bin\n      }, (status, details) => {\n        if (details.length > 0) {\n          setCardImg(details[0].secure_thumbnail);\n          setCreditCard(details[0]);\n        }\n      });\n    }\n  }; // payment methods\n\n\n  const {\n    0: paymentMethods,\n    1: setPaymentMethods\n  } = useState(); // get payment methods\n\n  useEffect(_ => {\n    const getPaymentMethods = async _ => {\n      const {\n        data\n      } = await api.get('payment-methods');\n      setPaymentMethods(data);\n    };\n\n    getPaymentMethods();\n  }, []); // cash payment methods\n\n  const {\n    0: cashPaymentMethods,\n    1: setCashPaymentMethods\n  } = useState(); // get cash payment methods\n\n  useEffect(_ => {\n    const getCashPaymentMethods = async _ => {\n      const {\n        data\n      } = await api.get('cash-payment-methods');\n      setCashPaymentMethods(data);\n    };\n\n    getCashPaymentMethods();\n  }, []);\n  /* token */\n\n  async function createToken() {\n    const promise = new Promise((resolve, reject) => {\n      const additionalData = {\n        holder_name: document.getElementById('cardholder-name').value // custom_data: document.getElementById('custom').value,\n\n      };\n      MercadoPago.createToken(additionalData, result => {\n        const json = JSON.parse(result);\n        console.log('json', json);\n        json.token ? resolve(json) : reject(json);\n      });\n    });\n    return promise;\n  }\n\n  const submitCredit = async e => {\n    e.preventDefault(); // console.log(MercadoPago.getIdentificationTypes());\n    // return;\n\n    setLoading(true);\n    const paymentData = values.package_id && values.payment_method_id && isCardPayment ? await createToken() : null;\n    let expirationMonth = values.cardExpirationDate.split('/')[0];\n    let expirationYear = values.cardExpirationDate.split('/')[1];\n    console.log({\n      cardNumber: values.cardNumber,\n      cardholderName: values.cardHolderName,\n      cardExpirationMonth: expirationMonth,\n      cardExpirationYear: expirationYear,\n      securityCode: values.cardSecurityCode,\n      docType: values.docType,\n      docNumber: values.docNumber,\n      email: user.email\n    });\n    MercadoPago.createToken({\n      cardNumber: values.cardNumber,\n      cardholderName: values.cardHolderName,\n      cardExpirationMonth: expirationMonth,\n      cardExpirationYear: expirationYear,\n      securityCode: values.cardSecurityCode,\n      docType: values.docType,\n      docNumber: values.docNumber,\n      email: user.email\n    }, (statusCode, response) => {\n      if (response && response.cause.length > 0) {\n        for (let error of response.cause) {\n          if (error.code === \"E301\") {}\n        }\n      }\n    }); // const data = { ...values, payment_os: paymentData }\n    //\n    // try {\n    //\n    //   const res = await api.post(`register/subscribe`, {\n    //     package_id: package_id,\n    //     payment_method_id: values.payment_method_id,\n    //     token: \"\"\n    //   })\n    //\n    //   // handleSubmit(1)\n    //\n    // } catch (error) {\n    //\n    //   if (error.response) {\n    //     const { data, status } = error.response\n    //     if (status === 422) {\n    //       setError(data)\n    //     }\n    //   } else if (error.request) {\n    //     setError(error)\n    //   } else {\n    //     setError(error)\n    //   }\n    //\n    // } finally {\n    //   setLoading(false)\n    // }\n  };\n\n  return __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"offset-md-2 col-md-8\"\n  }, __jsx(\"h3\", {\n    className: \"h3\"\n  }, \"Pago\"), __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-md-6 paymentMethod\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-12\"\n  }, __jsx(FormGroup, null, __jsx(Label, {\n    htmlFor: \"payment_method_id\",\n    style: \"margin: 0;\"\n  }, \"Pague com\"), __jsx(Select, {\n    id: \"payment_method_id\",\n    name: \"payment_method_id\",\n    required: requireds,\n    onChange: onPaymentChange,\n    value: values.payment_method_id\n  }, __jsx(\"option\", {\n    value: \"0\"\n  }, \"Selecione\"), paymentMethods && paymentMethods.map((paymentMethod, key) => __jsx(\"option\", {\n    key: paymentMethod.id,\n    state: values.payment_method_id,\n    value: paymentMethod.id\n  }, paymentMethod.name))), __jsx(InvalidFeedback, {\n    error: error,\n    loading: loading,\n    name: \"gender_id\"\n  }))), __jsx(\"div\", {\n    className: \"col-12\"\n  }, __jsx(FormGroup, null, __jsx(Label, {\n    htmlFor: \"cardHolderName\"\n  }, \"Nombre impreso en tarjeta\"), __jsx(Input, {\n    id: \"cardHolderName\",\n    name: \"cardHolderName\",\n    required: requireds,\n    type: \"text\",\n    onChange: handleInputChange\n  }))), __jsx(\"div\", {\n    className: \"col-12\"\n  }, __jsx(FormGroup, null, __jsx(Label, {\n    htmlFor: \"card-number\"\n  }, \"Nro Cart\\xE3o\"), __jsx(\"img\", {\n    src: cardImg,\n    class: \"creditCardBrand\"\n  }), __jsx(MaskedInput, {\n    mask: [/\\d/, /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/],\n    guide: false,\n    class: \"form-control\" // placeholder={\"***\"}\n    ,\n    onChange: handleInputChangeCreditCardNumber,\n    id: \"cardNumber\",\n    name: \"cardNumber\"\n  }))), __jsx(\"div\", {\n    className: \"col-12\"\n  }, __jsx(FormGroup, null, __jsx(Label, {\n    htmlFor: \"docNumber\"\n  }, \"Documento\"), __jsx(Input, {\n    class: \"form-control\" // placeholder={\"***\"}\n    ,\n    onChange: handleInputChange,\n    id: \"docNumber\",\n    name: \"docNumber\",\n    maxLength: 20\n  }))), __jsx(\"div\", {\n    className: \"col-6\"\n  }, __jsx(FormGroup, null, __jsx(Label, {\n    htmlFor: \"card-duedate\"\n  }, \"Dt Vencimento\"), __jsx(MaskedInput, {\n    mask: [/\\d/, /\\d/, '/', /\\d/, /\\d/],\n    guide: false,\n    class: \"form-control\",\n    placeholder: \"MM/AA\",\n    name: \"cardExpirationDate\",\n    onChange: handleInputChange\n  }))), __jsx(\"div\", {\n    className: \"col-6\"\n  }, __jsx(FormGroup, null, __jsx(Label, {\n    htmlFor: \"card-cvv\"\n  }, \"CVV\"), __jsx(MaskedInput, {\n    mask: [/\\d/, /\\d/, /\\d/],\n    guide: false,\n    class: \"form-control\",\n    name: \"cardSecurityCode\",\n    onChange: handleInputChange,\n    placeholder: \"***\"\n  }))), __jsx(\"div\", {\n    className: \"col-12\"\n  }, __jsx(Button, {\n    block: true,\n    color: \"secondary\",\n    type: \"button\",\n    disabled: loading,\n    loading: loading,\n    onClick: submitCredit\n  }, \"Pagar\"))), __jsx(\"div\", null, isCardPayment ? __jsx(\"div\", {\n    className: \"card-inputs\"\n  }, __jsx(FormGroup, null, __jsx(Label, {\n    htmlFor: \"cardholder-name\"\n  }, \"Nombre impreso en tarjeta\"), __jsx(Input, {\n    id: \"cardholder-name\",\n    name: \"cardHolderName\",\n    required: requireds,\n    type: \"text\",\n    onChange: handleInputChange\n  })), __jsx(FormGroup, null, __jsx(\"div\", {\n    id: \"card-secure-fields\"\n  }), __jsx(InvalidFeedback, {\n    error: error,\n    loading: loading,\n    name: \"payment_os\"\n  })), __jsx(Button, {\n    block: true,\n    color: \"secondary\",\n    type: \"button\",\n    disabled: loading,\n    loading: loading,\n    onClick: submitCredit\n  }, \"Pagar\")) // cash payment methods\n  : values.payment_method_id === 3 && __jsx(FormGroup, null, cashPaymentMethods == null ? __jsx(\"p\", null, \"Cargando...\") : cashPaymentMethods.length ? cashPaymentMethods.map((item, key) => __jsx(InputRadio, {\n    key: key,\n    label: item.name,\n    name: \"cash_payment_method_id\",\n    onChange: onCashPaymentMethodChange,\n    state: values.cash_payment_method_id,\n    value: item.id\n  })) : __jsx(\"p\", null, \"Sin m\\xE9todo de pago configurado.\"), __jsx(InvalidFeedback, {\n    error: error,\n    loading: loading,\n    name: \"cash_payment_method_id\"\n  }), __jsx(Button, {\n    block: true,\n    color: \"secondary\",\n    type: \"submit\",\n    disabled: loading,\n    loading: loading\n  }, \"Pagar\")))), __jsx(\"div\", {\n    className: \"col-md-6\"\n  }, __jsx(\"div\", {\n    class: \"product-summary\"\n  }, __jsx(\"div\", {\n    className: \"product-image\"\n  }, __jsx(\"img\", {\n    src: \"https://place-hold.it/280x125\",\n    alt: \"\"\n  })), __jsx(\"div\", {\n    className: \"product-name-group\"\n  }, __jsx(\"h6\", null, \"Voc\\xEA est\\xE1 comprando:\"), __jsx(\"p\", {\n    class: \"product-name\"\n  }, \"Assinatura LaU Play - \", __jsx(\"strong\", null, selectedPackage.name), \" recorrente\")), __jsx(\"div\", {\n    class: \"price-breakdown\"\n  }, __jsx(\"div\", {\n    className: \"checkout-total\"\n  }, __jsx(\"h6\", null, \"Total\"), __jsx(\"p\", {\n    class: \"price\"\n  }, \"$ \", selectedPackage.amount))))))));\n};\n\nexport default withAuth(Payment, true);","map":{"version":3,"sources":["/Users/rafael/Projects/somosgad/dale/pages/register/wizard/payment.js"],"names":["useContext","useEffect","useState","FormGroup","Label","Input","InputRadio","withAuth","InvalidFeedback","HAS_WINDOW","useScript","Select","Button","MaskedInput","UserContext","Payment","layoutProps","userData","package_id","packages","api","error","requireds","ready","status","selectedPackage","items","find","i","id","console","log","user","values","setValues","payment_method_id","payment_os","cash_payment_method_id","terms","discount_id","cardNumber","cardHolderName","cardExpirationDate","cardSecurityCode","docType","docNumber","cardImg","setCardImg","creditCard","setCreditCard","loading","setLoading","businessUnitPublicKey","isMercadoPagoReady","setIsMercadoPagoReady","MercadoPago","window","Mercadopago","credit_card_id","debit_card_id","isCardPayment","includes","_","setPublishableKey","onPaymentChange","e","parseInt","target","value","onCashPaymentMethodChange","handleInputChange","checked","name","type","handleInputChangeCreditCardNumber","cardnumber","length","bin","substring","getPaymentMethod","details","secure_thumbnail","paymentMethods","setPaymentMethods","getPaymentMethods","data","get","cashPaymentMethods","setCashPaymentMethods","getCashPaymentMethods","createToken","promise","Promise","resolve","reject","additionalData","holder_name","document","getElementById","result","json","JSON","parse","token","submitCredit","preventDefault","paymentData","expirationMonth","split","expirationYear","cardholderName","cardExpirationMonth","cardExpirationYear","securityCode","email","statusCode","response","cause","code","map","paymentMethod","key","item","amount"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport FormGroup from \"~/components/layout/AuthModal/FormGroup\";\nimport Label from \"~/components/Form/Label\";\nimport Input from \"~/components/layout/AuthModal/Input\";\nimport InputRadio from \"~/components/Form/InputRadio\";\nimport withAuth from \"~/components/withAuth\";\nimport InvalidFeedback from \"~/components/Form/InvalidFeedback\"\nimport { HAS_WINDOW } from \"~/constants/constants\";\nimport useScript from \"@charlietango/use-script\";\nimport Select from \"~/components/Select/Select\";\nimport Button from \"~/components/button\";\nimport MaskedInput from 'react-text-mask'\nimport UserContext from \"~/contexts/UserContext\";\n\nconst Payment = ({\n                   layoutProps,\n                   userData,\n                   package_id,\n                   packages,\n                   api,\n                   error,\n                   requireds\n                 }) => {\n\n  const [ready, status] = useScript('https://secure.mlstatic.com/sdk/javascript/v1/mercadopago.js')\n\n\n  let selectedPackage = null\n  if (packages && package_id) {\n    selectedPackage = packages.items.find(i => i.id == package_id)\n    console.log(selectedPackage)\n  }\n\n  const { user } = useContext(UserContext)\n\n\n  const [values, setValues] = useState({\n    package_id: '',\n    payment_method_id: null,\n    payment_os: null,\n    cash_payment_method_id: null,\n    terms: null,\n    discount_id: null,\n    cardNumber: null,\n    cardHolderName: null,\n    cardExpirationDate: null,\n    cardSecurityCode: null,\n    docType: \"CPF\",\n    docNumber: null,\n  })\n\n  const [cardImg, setCardImg] = useState(null);\n  const [creditCard, setCreditCard] = useState(null);\n\n  const [loading, setLoading] = useState();\n\n  const businessUnitPublicKey = 'TEST-7205c1be-9805-4308-bf00-6557c5b56b88'\n  const [isMercadoPagoReady, setIsMercadoPagoReady] = useState(false)\n  const MercadoPago = ready && HAS_WINDOW ? window.Mercadopago : null\n\n  const credit_card_id = 1\n  const debit_card_id = 2\n  const isCardPayment = [credit_card_id, debit_card_id].includes(values.payment_method_id)\n\n\n  useEffect(_ => {\n    if (MercadoPago) {\n      MercadoPago.setPublishableKey(businessUnitPublicKey)\n      setIsMercadoPagoReady(true)\n    }\n  }, [MercadoPago])\n\n\n  /* handle payment method change */\n  function onPaymentChange(e) {\n    setValues({\n      ...values,\n      payment_method_id: parseInt(e.target.value, 10),\n      cash_payment_method_id: null,\n    })\n  }\n\n  function onCashPaymentMethodChange(e) {\n    setValues({\n      ...values,\n      cash_payment_method_id: parseInt(e.target.value, 10),\n    })\n  }\n\n  const handleInputChange = e => {\n    const { checked, name, value, type } = e.target\n    setValues({\n      ...values,\n      [name]: type === 'checkbox' ?\n        (checked ? (value === 'true' ? true : value) : false) :\n        value,\n    })\n  }\n\n  const handleInputChangeCreditCardNumber = e => {\n\n    const { name, value } = e.target\n\n    setValues({\n      ...values,\n      [name]: value,\n    })\n\n    let cardnumber = value;\n\n    if (cardnumber.length >= 6) {\n      let bin = cardnumber.substring(0, 6);\n\n      MercadoPago.getPaymentMethod({\n        \"bin\": bin\n      }, (status, details) => {\n        if (details.length > 0) {\n          setCardImg(details[0].secure_thumbnail);\n          setCreditCard(details[0]);\n        }\n      });\n\n    }\n  }\n\n  // payment methods\n  const [paymentMethods, setPaymentMethods] = useState()\n\n  // get payment methods\n  useEffect(_ => {\n    const getPaymentMethods = async _ => {\n      const { data } = await api.get('payment-methods')\n      setPaymentMethods(data)\n    }\n    getPaymentMethods()\n  }, [])\n\n  // cash payment methods\n  const [cashPaymentMethods, setCashPaymentMethods] = useState()\n\n  // get cash payment methods\n  useEffect(_ => {\n    const getCashPaymentMethods = async _ => {\n      const { data } = await api.get('cash-payment-methods')\n      setCashPaymentMethods(data)\n    }\n    getCashPaymentMethods()\n  }, [])\n\n  /* token */\n  async function createToken() {\n\n    const promise = new Promise((resolve, reject) => {\n\n      const additionalData = {\n        holder_name: document.getElementById('cardholder-name').value,\n        // custom_data: document.getElementById('custom').value,\n      }\n\n      MercadoPago.createToken(additionalData, (result) => {\n        const json = JSON.parse(result)\n        console.log('json', json)\n        json.token ? resolve(json) : reject(json)\n      })\n\n    })\n\n    return promise\n\n  }\n\n\n  const submitCredit = async e => {\n\n    e.preventDefault();\n\n    // console.log(MercadoPago.getIdentificationTypes());\n    // return;\n    setLoading(true);\n\n    const paymentData = values.package_id && values.payment_method_id && isCardPayment ? await createToken() : null\n\n    let expirationMonth = values.cardExpirationDate.split('/')[0];\n    let expirationYear = values.cardExpirationDate.split('/')[1];\n\n\n    console.log({\n      cardNumber: values.cardNumber,\n      cardholderName: values.cardHolderName,\n      cardExpirationMonth: expirationMonth,\n      cardExpirationYear: expirationYear,\n      securityCode: values.cardSecurityCode,\n      docType: values.docType,\n      docNumber: values.docNumber,\n      email: user.email\n    })\n\n    MercadoPago.createToken({\n      cardNumber: values.cardNumber,\n      cardholderName: values.cardHolderName,\n      cardExpirationMonth: expirationMonth,\n      cardExpirationYear: expirationYear,\n      securityCode: values.cardSecurityCode,\n      docType: values.docType,\n      docNumber: values.docNumber,\n      email: user.email\n    }, (statusCode, response) => {\n\n      if (response && response.cause.length > 0) {\n\n        for (let error of response.cause) {\n\n          if (error.code === \"E301\") {\n\n          }\n\n        }\n\n      }\n\n    });\n\n\n    // const data = { ...values, payment_os: paymentData }\n    //\n    // try {\n    //\n    //   const res = await api.post(`register/subscribe`, {\n    //     package_id: package_id,\n    //     payment_method_id: values.payment_method_id,\n    //     token: \"\"\n    //   })\n    //\n    //   // handleSubmit(1)\n    //\n    // } catch (error) {\n    //\n    //   if (error.response) {\n    //     const { data, status } = error.response\n    //     if (status === 422) {\n    //       setError(data)\n    //     }\n    //   } else if (error.request) {\n    //     setError(error)\n    //   } else {\n    //     setError(error)\n    //   }\n    //\n    // } finally {\n    //   setLoading(false)\n    // }\n\n\n  }\n\n  return (\n    <div className=\"row\">\n      <div className=\"offset-md-2 col-md-8\">\n\n        <h3 className=\"h3\">Pago</h3>\n\n        <div className=\"row\">\n\n          <div className=\"col-md-6 paymentMethod\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <FormGroup>\n                  <Label htmlFor=\"payment_method_id\" style=\"margin: 0;\">Pague com</Label>\n                  <Select\n                    id=\"payment_method_id\"\n                    name=\"payment_method_id\"\n                    required={ requireds }\n                    onChange={ onPaymentChange }\n                    value={ values.payment_method_id }\n                  >\n                    <option value=\"0\">Selecione</option>\n                    { paymentMethods && paymentMethods.map((paymentMethod, key) => (\n                      <option\n                        key={ paymentMethod.id }\n                        state={ values.payment_method_id }\n                        value={ paymentMethod.id }\n                      >\n                        { paymentMethod.name }\n                      </option>\n                    )) }\n                  </Select>\n                  <InvalidFeedback error={ error } loading={ loading } name=\"gender_id\"/>\n                </FormGroup>\n              </div>\n              <div className=\"col-12\">\n                <FormGroup>\n                  <Label htmlFor=\"cardHolderName\">Nombre impreso en tarjeta</Label>\n                  <Input id=\"cardHolderName\" name=\"cardHolderName\" required={ requireds } type=\"text\"\n                         onChange={ handleInputChange }/>\n                </FormGroup>\n              </div>\n              <div className=\"col-12\">\n                <FormGroup>\n                  <Label htmlFor=\"card-number\">Nro Cartão</Label>\n                  <img src={ cardImg } class=\"creditCardBrand\"/>\n                  <MaskedInput\n                    mask={ [/\\d/, /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/] }\n                    guide={ false }\n                    class={ \"form-control\" }\n                    // placeholder={\"***\"}\n                    onChange={ handleInputChangeCreditCardNumber }\n                    id=\"cardNumber\" name=\"cardNumber\"\n                  />\n                  {/*<Input id=\"card-number\" name=\"card-number\" value={ values.credit_card_number } required={ requireds }*/ }\n                  {/*       type=\"text\"  maxLength={ 19 }/>*/ }\n                </FormGroup>\n              </div>\n              <div className=\"col-12\">\n                <FormGroup>\n                  <Label htmlFor=\"docNumber\">Documento</Label>\n                  <Input\n                    class={ \"form-control\" }\n                    // placeholder={\"***\"}\n                    onChange={ handleInputChange }\n                    id=\"docNumber\" name=\"docNumber\"\n                    maxLength={ 20 }\n                  />\n                  {/*<Input id=\"card-number\" name=\"card-number\" value={ values.credit_card_number } required={ requireds }*/ }\n                  {/*       type=\"text\"  maxLength={ 19 }/>*/ }\n                </FormGroup>\n              </div>\n              <div className=\"col-6\">\n                <FormGroup>\n                  <Label htmlFor=\"card-duedate\">Dt Vencimento</Label>\n                  {/*<InputMask mask=\"99/99\" class=\"form-control\" value={values.due_date} onChange={handleInputChange} maskChar={null} placeholder={\"MM/YY\"}/>*/ }\n                  <MaskedInput\n                    mask={ [/\\d/, /\\d/, '/', /\\d/, /\\d/,] }\n                    guide={ false }\n                    class={ \"form-control\" }\n                    placeholder={ \"MM/AA\" }\n                    name={ \"cardExpirationDate\" }\n                    onChange={ handleInputChange }\n                  />\n                </FormGroup>\n              </div>\n              <div className=\"col-6\">\n                <FormGroup>\n                  <Label htmlFor=\"card-cvv\">CVV</Label>\n                  <MaskedInput\n                    mask={ [/\\d/, /\\d/, /\\d/] }\n                    guide={ false }\n                    class={ \"form-control\" }\n                    name={ \"cardSecurityCode\" }\n                    onChange={ handleInputChange }\n                    placeholder={ \"***\" }\n                  />\n                </FormGroup>\n              </div>\n              <div className=\"col-12\">\n                <Button block color=\"secondary\" type=\"button\" disabled={ loading }\n                        loading={ loading } onClick={ submitCredit }>Pagar</Button>\n              </div>\n            </div>\n            <div>\n              {/* credit / debit card */ }\n              { isCardPayment ? (\n                <div className=\"card-inputs\">\n\n                  <FormGroup>\n                    <Label htmlFor=\"cardholder-name\">Nombre impreso en tarjeta</Label>\n                    <Input id=\"cardholder-name\" name=\"cardHolderName\" required={ requireds } type=\"text\"\n                           onChange={ handleInputChange }/>\n                  </FormGroup>\n\n                  {/* mandatory data */ }\n\n                  {/* card fields */ }\n                  <FormGroup>\n                    <div id=\"card-secure-fields\"/>\n                    <InvalidFeedback error={ error } loading={ loading } name=\"payment_os\"/>\n                  </FormGroup>\n\n\n                  <Button block color=\"secondary\" type=\"button\" disabled={ loading }\n                          loading={ loading } onClick={ submitCredit }>Pagar</Button>\n                </div>\n\n                // cash payment methods\n              ) : values.payment_method_id === 3 && (\n                <FormGroup>\n                  { cashPaymentMethods == null ? (\n                    <p>Cargando...</p>\n                  ) : cashPaymentMethods.length ? cashPaymentMethods.map((item, key) => (\n                    <InputRadio\n                      key={ key }\n                      label={ item.name }\n                      name=\"cash_payment_method_id\"\n                      onChange={ onCashPaymentMethodChange }\n                      state={ values.cash_payment_method_id }\n                      value={ item.id }\n                    />\n                  )) : (\n                    <p>Sin método de pago configurado.</p>\n                  ) }\n                  <InvalidFeedback error={ error } loading={ loading } name=\"cash_payment_method_id\"/>\n                  <Button block color=\"secondary\" type=\"submit\" disabled={ loading }\n                          loading={ loading }>Pagar</Button>\n                </FormGroup>\n              ) }\n            </div>\n          </div>\n\n          <div className=\"col-md-6\">\n            <div class=\"product-summary\">\n              <div className=\"product-image\">\n                <img src=\"https://place-hold.it/280x125\" alt=\"\"/>\n              </div>\n              <div className={ \"product-name-group\" }>\n                <h6>\n                  Você está comprando:\n                </h6>\n                <p class={ \"product-name\" }>\n                  Assinatura LaU Play - <strong>{ selectedPackage.name }</strong> recorrente\n                </p>\n              </div>\n              <div class={ \"price-breakdown\" }>\n                <div className=\"checkout-total\">\n                  <h6>\n                    Total\n                  </h6>\n                  <p class={ \"price\" }>\n                    $ { selectedPackage.amount }\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  )\n}\n\nexport default withAuth(Payment, true);\n"]},"metadata":{},"sourceType":"module"}