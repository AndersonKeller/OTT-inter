{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// nextjs imports\nimport Router from 'next/router';\nimport Head from 'next/head'; // import Link   from 'next/link'\n// react imports\n\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport nookies from 'nookies'; // app imports\n\nimport FormGroup from '~/components/layout/AuthModal/FormGroup';\nimport withAuth from '~/components/withAuth';\nimport { FkInput } from '~/components/Formik/fields';\nimport Layout from '~/components/layout/Layout';\nimport Button from '~/components/button';\nimport api from '~/services/api';\nimport { CONFIG } from '~/config';\nimport { StyleChangePassword } from '~/components/layout/changePassword/index';\nimport CardLogoHeader from '~/components/CardLogoHeader/index';\n\nconst passwordPage = ({\n  layoutProps,\n  user\n}) => {\n  const handleSubmit = async (fields, actions) => {\n    var msg = undefined;\n\n    try {\n      const {\n        data: {\n          message\n        }\n      } = await api().post('password', _objectSpread({\n        email: fields.username\n      }, fields));\n      msg = {\n        success: message || \"Cambio de datos completo.\"\n      };\n    } catch ({\n      response: {\n        data: {\n          errors\n        }\n      },\n      message: error\n    }) {\n      msg = errors ? actions.setErrors(errors) : {\n        error: 'Problemas al realizar esta operación. Inténtalo de nuevo más tarde'\n      };\n      console.log(error);\n    } finally {\n      if (msg) {\n        msg = JSON.stringify(msg);\n        nookies.set({}, 'flash_message', msg, {\n          path: '/'\n        });\n        Router.push('/user/account');\n      }\n    }\n  };\n\n  return __jsx(Layout, layoutProps, __jsx(Head, null, __jsx(\"title\", null, \"Cambiar la Contrase\\xF1a < \", CONFIG.appName)), user && __jsx(Formik, {\n    initialValues: (({\n      email: username\n    }) => {\n      return {\n        username,\n        oldpassword: '',\n        password: '',\n        password_confirmation: ''\n      };\n    })(user),\n    validationSchema: getYupSchema(),\n    onSubmit: handleSubmit,\n    component: DataForm\n  }));\n};\n\nconst DataForm = ({\n  isSubmitting,\n  status\n}) => __jsx(Form, null, status && __jsx(\"div\", {\n  className: \"invalid-feedback\"\n}, __jsx(\"h5\", null, status.error)), __jsx(CardLogoHeader, null, __jsx(StyleChangePassword, null, __jsx(\"h1\", {\n  className: \"h2\"\n}, \"Cambiar la contrase\\xF1a\"), __jsx(\"div\", {\n  class: \"painel\"\n}, __jsx(\"div\", {\n  className: \"row\"\n}, __jsx(FormGroup, null, __jsx(FkInput, {\n  name: \"username\",\n  type: \"hidden\",\n  label: \"Username\",\n  autoComplete: \"username\"\n}))), __jsx(\"div\", {\n  className: \"row\"\n}, __jsx(FormGroup, null, __jsx(FkInput, {\n  name: \"oldpassword\",\n  type: \"password\",\n  label: \"Contrase\\xF1a anterior\",\n  autoComplete: \"current-password\"\n}))), __jsx(\"div\", {\n  className: \"row\"\n}, __jsx(FormGroup, null, __jsx(FkInput, {\n  name: \"password\",\n  type: \"password\",\n  label: \"Nueva contrase\\xF1a\",\n  autoComplete: \"new-password\"\n})))), __jsx(\"div\", {\n  className: \"row row-aling\"\n}, __jsx(\"div\", {\n  className: \"painel\"\n}, __jsx(FormGroup, null, __jsx(FkInput, {\n  name: \"password_confirmation\",\n  type: \"password\",\n  label: \"Confirmar nueva contrase\\xF1a\",\n  autoComplete: \"new-password\"\n})), __jsx(\"hr\", null)), __jsx(\"div\", {\n  className: \" aling-button\"\n}, __jsx(Button, {\n  type: \"submit\",\n  disabled: isSubmitting,\n  loading: isSubmitting\n}, \"Aceptar\")))))); // create Yup validation Schema\n\n\nconst getYupSchema = _ => {\n  const nullable8CharMinString = Yup.string().nullable().required('Obligatorio').min(8, 'Debe tener 8 caracteres o más');\n  return Yup.object({\n    password: nullable8CharMinString.max(255, 'Debe tener 255 caracteres o menos'),\n    password_confirmation: nullable8CharMinString.max(255, 'Debe tener 255 caracteres o menos').oneOf([Yup.ref('password'), null], 'Las contraseñas deben coincidir'),\n    oldpassword: Yup.string().nullable()\n  });\n};\n\nexport default withAuth(passwordPage);","map":{"version":3,"sources":["/Users/rafael/Projects/somosgad/dale/pages/user/changePassword.js"],"names":["Router","Head","Formik","Form","Yup","nookies","FormGroup","withAuth","FkInput","Layout","Button","api","CONFIG","StyleChangePassword","CardLogoHeader","passwordPage","layoutProps","user","handleSubmit","fields","actions","msg","undefined","data","message","post","email","username","success","response","errors","error","setErrors","console","log","JSON","stringify","set","path","push","appName","oldpassword","password","password_confirmation","getYupSchema","DataForm","isSubmitting","status","_","nullable8CharMinString","string","nullable","required","min","object","max","oneOf","ref"],"mappings":"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","sourcesContent":["// nextjs imports\nimport Router from 'next/router'\nimport Head from 'next/head'\n// import Link   from 'next/link'\n\n// react imports\nimport { Formik, Form } from 'formik'\nimport * as Yup from 'yup'\nimport nookies from 'nookies'\n\n// app imports\nimport FormGroup from '~/components/layout/AuthModal/FormGroup'\nimport withAuth from '~/components/withAuth'\nimport { FkInput } from '~/components/Formik/fields'\nimport Layout from '~/components/layout/Layout'\nimport Button from '~/components/button'\nimport api from '~/services/api'\nimport { CONFIG } from '~/config'\nimport { StyleChangePassword } from '~/components/layout/changePassword/index'\nimport CardLogoHeader from '~/components/CardLogoHeader/index'\n\nconst passwordPage = ({ layoutProps, user }) => {\n\n  const handleSubmit = async (fields, actions) => {\n    var msg = undefined\n\n    try {\n      const { data: { message } } = await api().post('password', {\n        email: fields.username,\n        ...fields\n      })\n      msg = { success: message || \"Cambio de datos completo.\" }\n\n    } catch ({ response: { data: { errors } }, message: error }) {\n      msg = errors ?\n        actions.setErrors(errors) : { error: 'Problemas al realizar esta operación. Inténtalo de nuevo más tarde' }\n\n      console.log(error)\n\n    } finally {\n      if (msg) {\n        msg = JSON.stringify(msg)\n        nookies.set({}, 'flash_message', msg, { path: '/' })\n        Router.push('/user/account')\n      }\n    }\n  }\n\n  return (\n    <Layout {...layoutProps}>\n      <Head>\n        <title>Cambiar la Contraseña &lt; {CONFIG.appName}</title>\n      </Head>\n      {user &&\n        <Formik\n          initialValues={\n            (({ email: username }) => {\n              return { username, oldpassword: '', password: '', password_confirmation: '' }\n            })(user)\n          }\n          validationSchema={getYupSchema()}\n          onSubmit={handleSubmit}\n          component={DataForm}\n        />\n      }\n      {/* <style jsx>{`\n        .rgpage {\n          padding-top: 40px;\n          padding-bottom: 120px;\n        }\n        .h2 {\n          margin-bottom: 10px;\n        }\n        hr {\n          margin-top: 25px;\n          margin-bottom: 15px;\n          background-color: white;\n        }\n      `}</style> */}\n    </Layout>\n  );\n\n}\n\nconst DataForm = ({ isSubmitting, status }) => <Form>\n  {status && <div className=\"invalid-feedback\"><h5>{status.error}</h5></div>}\n  <CardLogoHeader>\n    <StyleChangePassword>\n      <h1 className=\"h2\">Cambiar la contraseña</h1>\n\n      <div class=\"painel\">\n        <div className=\"row\" >\n          <FormGroup>\n            <FkInput name=\"username\" type=\"hidden\"\n              label=\"Username\" autoComplete=\"username\" />\n          </FormGroup>\n        </div>\n        <div className=\"row\" >\n          <FormGroup>\n            <FkInput name=\"oldpassword\" type=\"password\"\n              label=\"Contraseña anterior\" autoComplete=\"current-password\" />\n          </FormGroup>\n        </div>\n        <div className=\"row\" >\n          <FormGroup>\n            <FkInput name=\"password\" type=\"password\"\n              label=\"Nueva contraseña\" autoComplete=\"new-password\" />\n          </FormGroup>\n        </div>\n      </div>\n      <div className=\"row row-aling\">\n        <div className=\"painel\">\n          <FormGroup >\n            <FkInput name=\"password_confirmation\" type=\"password\"\n              label=\"Confirmar nueva contraseña\" autoComplete=\"new-password\" />\n          </FormGroup>\n          <hr />\n        </div>\n        <div className=\" aling-button\">\n          <Button type=\"submit\" disabled={isSubmitting} loading={isSubmitting}>\n            Aceptar\n      </Button>\n        </div>\n      </div>\n\n    </StyleChangePassword>\n  </CardLogoHeader >\n</Form >\n\n// create Yup validation Schema\nconst getYupSchema = _ => {\n  const nullable8CharMinString = Yup.string()\n    .nullable().required('Obligatorio')\n    .min(8, 'Debe tener 8 caracteres o más');\n\n  return Yup.object({\n    password: nullable8CharMinString\n      .max(255, 'Debe tener 255 caracteres o menos'),\n    password_confirmation: nullable8CharMinString\n      .max(255, 'Debe tener 255 caracteres o menos')\n      .oneOf([Yup.ref('password'), null], 'Las contraseñas deben coincidir'),\n    oldpassword: Yup.string().nullable(),\n  })\n}\n\nexport default withAuth(passwordPage)\n"]},"metadata":{},"sourceType":"module"}