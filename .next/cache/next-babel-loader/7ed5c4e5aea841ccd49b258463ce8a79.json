{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useContext, useState, useEffect } from 'react';\nimport UserContext from '../../../contexts/UserContext';\nimport api, { baseURL } from '../../../services/api';\nimport { CLIENT_ID, CLIENT_SECRET } from '../../../constants/constants';\nimport { setAccessToken } from '../../../services/auth';\nimport FormGroup from './FormGroup';\nimport Input from './Input';\nimport FormText from './FormText';\nimport Button from '../../button';\nimport { AuthModalContext } from '../../../contexts/AuthModalContext';\nimport nookies from 'nookies';\nimport SocialButtons from './SocialButtons';\nimport { CONFIG } from '~/config';\nimport OrEnterWith from './OrEnterWith';\nimport { useRouter } from \"next/router\"; // import Router from \"next/router\";\n\nconst LoginTab = ({\n  changeTab,\n  setLoading,\n  socialLogin\n}) => {\n  const router = useRouter();\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const {\n    0: error,\n    1: setError\n  } = useState('');\n  const {\n    signIn\n  } = useContext(UserContext);\n  const {\n    closeAuthModal,\n    code,\n    socialProvider\n  } = useContext(AuthModalContext);\n\n  const providerLogin = async _ => {\n    try {\n      setLoading(true);\n      const {\n        pkg_int_id: package_id_intention\n      } = nookies.get({}, 'pkg_int_id');\n      const tokenResponse = await api().post(`auth/${socialProvider}/callback`, {\n        code,\n        client_id: CLIENT_ID,\n        client_secret: CLIENT_SECRET,\n        package_id_intention\n      });\n      const {\n        access_token\n      } = tokenResponse.data;\n      setAccessToken(access_token);\n      const userResponse = await api().get('/user');\n      setLoading(false);\n      signIn(userResponse.data, tokenResponse.data);\n      closeAuthModal();\n    } catch (error) {\n      console.table(error);\n      setError('An error has occurred!');\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (code && socialProvider) providerLogin();\n  }, []);\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    setLoading(true);\n    document.activeElement.blur();\n\n    try {\n      const tokenResponse = await api().post(`${baseURL}/oauth/token`, {\n        grant_type: 'password',\n        client_id: CLIENT_ID,\n        client_secret: CLIENT_SECRET,\n        username: email,\n        password,\n        scope: ''\n      });\n      const {\n        access_token\n      } = tokenResponse.data;\n      setAccessToken(access_token);\n      const userResponse = await api().get('/user');\n      signIn(userResponse.data, tokenResponse.data);\n      closeAuthModal();\n    } catch (error) {\n      if (error.response) {\n        const {\n          data,\n          status\n        } = error.response;\n        const message = status === 400 ? 'Correo electrónico o contraseña incorrectos. Inténtalo de nuevo' : status === 403 ? 'Tu dirección de correo electrónico no está verificada' : status === 500 ? 'Servidor, base de datos o conexión no disponible' : data.message;\n        setError(message);\n      } else {\n        setError('An error has occurred!');\n        console.log('error', error);\n      }\n    }\n\n    setLoading(false);\n  }\n\n  function goToPasswordRecovery(e) {\n    e.preventDefault();\n    changeTab('password');\n  }\n\n  function goToRegister(e) {\n    e.preventDefault();\n    router.push({\n      pathname: '/signup'\n    }, '/signup');\n  }\n\n  const notRegistered = CONFIG.lang === 'es-CL' ? '¿No estás suscrito?' : '¿No es suscriptor?';\n  return __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"intro-text\"\n  }, __jsx(\"p\", null, \"\\xA1Bienvenidos!\")), __jsx(\"form\", {\n    method: \"post\",\n    onSubmit: handleSubmit\n  }, error && __jsx(\"div\", {\n    className: \"invalid-feedback\"\n  }, error), __jsx(FormGroup, null, __jsx(Input, {\n    id: \"email\",\n    autoComplete: \"username\",\n    placeholder: \"E-mail\",\n    onChange: e => setEmail(e.target.value),\n    required: true,\n    type: \"email\",\n    value: email\n  })), __jsx(FormGroup, null, __jsx(Input, {\n    id: \"clave\",\n    autoComplete: \"current-password\",\n    placeholder: \"Clave\",\n    onChange: e => setPassword(e.target.value),\n    required: true,\n    type: \"password\",\n    value: password\n  }), __jsx(FormText, null, __jsx(\"a\", {\n    href: \"#\",\n    onClick: goToPasswordRecovery\n  }, \"\\xBFOlvidaste tu clave?\"))), __jsx(Button, {\n    block: true,\n    className: \"enter-btn\",\n    size: \"sm\",\n    type: \"submit\"\n  }, \"Entrar\"), __jsx(\"div\", {\n    className: \"already-subscriptor\"\n  }, __jsx(\"span\", null, notRegistered), ' ', __jsx(\"a\", {\n    className: \"bold text-uppercase\",\n    href: \"/register\",\n    onClick: goToRegister\n  }, \"Reg\\xEDstrate!\")), __jsx(OrEnterWith, null), __jsx(SocialButtons, {\n    socialLogin: socialLogin\n  })));\n};\n\nexport default LoginTab;","map":{"version":3,"sources":["/Users/rafael/Projects/somosgad/dale/components/layout/AuthModal/LoginTab.js"],"names":["useContext","useState","useEffect","UserContext","api","baseURL","CLIENT_ID","CLIENT_SECRET","setAccessToken","FormGroup","Input","FormText","Button","AuthModalContext","nookies","SocialButtons","CONFIG","OrEnterWith","useRouter","LoginTab","changeTab","setLoading","socialLogin","router","email","setEmail","password","setPassword","error","setError","signIn","closeAuthModal","code","socialProvider","providerLogin","_","pkg_int_id","package_id_intention","get","tokenResponse","post","client_id","client_secret","access_token","data","userResponse","console","table","handleSubmit","e","preventDefault","document","activeElement","blur","grant_type","username","scope","response","status","message","log","goToPasswordRecovery","goToRegister","push","pathname","notRegistered","lang","target","value"],"mappings":"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","sourcesContent":["import { useContext, useState, useEffect } from 'react'\nimport UserContext from '../../../contexts/UserContext'\nimport api, { baseURL } from '../../../services/api'\nimport { CLIENT_ID, CLIENT_SECRET } from '../../../constants/constants'\nimport { setAccessToken } from '../../../services/auth'\nimport FormGroup from './FormGroup'\nimport Input from './Input'\nimport FormText from './FormText'\nimport Button from '../../button'\nimport { AuthModalContext } from '../../../contexts/AuthModalContext'\nimport nookies from 'nookies'\nimport SocialButtons from './SocialButtons'\nimport { CONFIG } from '~/config'\nimport OrEnterWith from './OrEnterWith'\nimport { useRouter } from \"next/router\";\n// import Router from \"next/router\";\n\nconst LoginTab = ({ changeTab, setLoading, socialLogin }) => {\n  const router = useRouter()\n  const [ email, setEmail ] = useState('')\n  const [ password, setPassword ] = useState('')\n  const [ error, setError ] = useState('')\n  const { signIn } = useContext(UserContext)\n  const { closeAuthModal, code, socialProvider } = useContext(AuthModalContext)\n\n  const providerLogin = async _ => {\n    try{\n        setLoading(true);\n        const { pkg_int_id: package_id_intention } = nookies.get({}, 'pkg_int_id')\n        const tokenResponse = await api().post(`auth/${socialProvider}/callback`, {\n          code,\n          client_id: CLIENT_ID,\n          client_secret: CLIENT_SECRET,\n          package_id_intention\n        })\n\n        const { access_token } = tokenResponse.data\n        setAccessToken(access_token)\n        const userResponse = await api().get('/user')\n        setLoading(false)\n        signIn(userResponse.data, tokenResponse.data)\n        closeAuthModal()\n    } catch(error){\n      console.table(error);\n      setError('An error has occurred!')\n      setLoading(false)\n    }\n  }\n\n  useEffect(() => { if(code && socialProvider) providerLogin() }, [])\n\n  async function handleSubmit(e) {\n    e.preventDefault()\n    setLoading(true)\n    document.activeElement.blur()\n    try {\n      const tokenResponse = await api().post(`${baseURL}/oauth/token`, {\n        grant_type: 'password',\n        client_id: CLIENT_ID,\n        client_secret: CLIENT_SECRET,\n        username: email,\n        password,\n        scope: '',\n      })\n      const { access_token, } = tokenResponse.data\n      setAccessToken(access_token)\n      const userResponse = await api().get('/user')\n      signIn(userResponse.data, tokenResponse.data)\n      closeAuthModal()\n    } catch (error) {\n      if (error.response) {\n        const { data, status } = error.response\n        const message =\n          status === 400 ? 'Correo electrónico o contraseña incorrectos. Inténtalo de nuevo' :\n          status === 403 ? 'Tu dirección de correo electrónico no está verificada' :\n          status === 500 ? 'Servidor, base de datos o conexión no disponible' : data.message\n        setError(message)\n      } else {\n        setError('An error has occurred!')\n        console.log('error', error)\n      }\n    }\n    setLoading(false)\n  }\n\n  function goToPasswordRecovery(e) {\n    e.preventDefault()\n    changeTab('password')\n  }\n\n  function goToRegister(e) {\n    e.preventDefault()\n    router.push({\n      pathname: '/signup',\n    }, '/signup')\n  }\n\n  const notRegistered = CONFIG.lang === 'es-CL' ? '¿No estás suscrito?' : '¿No es suscriptor?'\n\n  return (\n    <div>\n      <div className=\"intro-text\">\n        <p>¡Bienvenidos!</p>\n      </div>\n      <form method=\"post\"onSubmit={handleSubmit}>\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n        <FormGroup>\n          <Input id=\"email\" autoComplete=\"username\" placeholder=\"E-mail\" onChange={e => setEmail(e.target.value)} required type=\"email\" value={email} />\n        </FormGroup>\n        <FormGroup>\n          <Input id=\"clave\" autoComplete=\"current-password\" placeholder=\"Clave\" onChange={e => setPassword(e.target.value)} required type=\"password\" value={password} />\n          <FormText>\n            <a href=\"#\" onClick={goToPasswordRecovery}>¿Olvidaste tu clave?</a>\n          </FormText>\n        </FormGroup>\n        <Button block className=\"enter-btn\" size=\"sm\" type=\"submit\">Entrar</Button>\n        <div className=\"already-subscriptor\">\n          <span>{notRegistered}</span>\n          {' '}\n          <a className=\"bold text-uppercase\" href=\"/register\" onClick={goToRegister}>Regístrate!</a>\n        </div>\n\n        <OrEnterWith />\n\n        <SocialButtons socialLogin={socialLogin} />\n\n      </form>\n    </div>\n  )\n}\n\nexport default LoginTab\n"]},"metadata":{},"sourceType":"module"}