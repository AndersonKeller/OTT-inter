{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$();\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport useScript, { ScriptStatus } from '@charlietango/use-script';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport nookies from 'nookies'; // import sleep from 'sleep-promise'\n\nimport { ThemeContext } from 'styled-components';\nimport Layout from '~/components/layout/Layout';\nimport { CONFIG } from '~/config';\nimport FormGroup from '~/components/layout/AuthModal/FormGroup';\nimport Label from '~/components/layout/AuthModal/Label';\nimport Input from '~/components/layout/AuthModal/Input';\nimport Button from '~/components/button';\nimport { useContext, useEffect, useState, useCallback } from 'react';\nimport UserContext from '~/contexts/UserContext';\nimport Packages from '~/components/Packages';\nimport Select from '~/components/Select/Select';\nimport { IS_PRODUCTION, HAS_WINDOW } from '~/constants/constants';\nimport withAuth from '~/components/withAuth';\nimport Loading from '~/components/Loading/Loading'; // page\n\nvar CompleteRegisterPage = function CompleteRegisterPage(_ref) {\n  _s();\n\n  var api = _ref.api,\n      layoutProps = _ref.layoutProps,\n      packages = _ref.packages,\n      user = _ref.user;\n\n  var _useScript = useScript('https://js.paymentsos.com/v2/latest/secure-fields.min.js'),\n      _useScript2 = _slicedToArray(_useScript, 2),\n      ready = _useScript2[0],\n      status = _useScript2[1];\n\n  var POS = ready && HAS_WINDOW ? window.POS : null;\n  var payUEnv = 'test';\n  var businessUnitPublicKey = '88985036-6530-4b5a-a7ec-c4e07ec07f6c';\n\n  var _useState = useState(false),\n      isPayUReady = _useState[0],\n      setIsPayUReady = _useState[1];\n\n  var POSStyle = {\n    base: {\n      borderRadius: '.15rem',\n      backgroundColor: 'white',\n      height: 'calc(1.5em + .75rem + 2px)',\n      fontSize: '12px',\n      padding: '0px 3px',\n      marginLeft: '5px',\n      cardImage: {\n        borderTopRightRadius: 0,\n        borderBottomRightRadius: 0,\n        margin: 0\n      },\n      pan: {\n        width: '160px',\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0,\n        marginLeft: 0\n      },\n      expirationDate: {\n        width: '47px'\n      },\n      secureFields: {\n        left: '40px'\n      },\n      cvv: {\n        width: '35px'\n      }\n    }\n  };\n\n  if (status === ScriptStatus.ERROR) {\n    console.log('Failed to load POS API');\n  }\n\n  useEffect(function (_) {\n    if (POS) {\n      POS.setPublicKey(businessUnitPublicKey);\n      POS.setEnvironment(payUEnv);\n      POS.setStyle(POSStyle);\n      POS.setCardNumberPlaceholder('Tarjeta de crÃ©dito');\n      POS.setExpirationDatePlaceholder('MM/AA');\n      setIsPayUReady(true);\n    }\n  }, [POS]);\n  return __jsx(Layout, layoutProps, __jsx(Head, null, __jsx(\"title\", {\n    className: \"jsx-674601483\"\n  }, \"Confirmaci\\xF3n < Registro < \", CONFIG.appName)), __jsx(\"div\", {\n    className: \"jsx-674601483\" + \" \" + \"rgpage container-fluid\"\n  }, __jsx(\"div\", {\n    className: \"jsx-674601483\" + \" \" + \"row\"\n  }, __jsx(\"div\", {\n    className: \"jsx-674601483\" + \" \" + \"col-xl-8 offset-xl-2\"\n  }, __jsx(\"h1\", {\n    className: \"jsx-674601483\" + \" \" + \"h2\"\n  }, \"Completa tu registro\"), __jsx(CompleteRegisterForm, {\n    api: api,\n    isPayUReady: isPayUReady,\n    packages: packages,\n    POS: POS\n  })))), __jsx(_JSXStyle, {\n    id: \"674601483\"\n  }, \".rgpage.jsx-674601483{padding-top:40px;padding-bottom:120px;}.h2.jsx-674601483{margin-bottom:10px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/rafael/Projects/somosgad/dale/pages/register/complete.js */\"));\n};\n\n_s(CompleteRegisterPage, \"ldKt2dWsS4ExnfWlqIlfnaAm2DQ=\", false, function () {\n  return [useScript];\n});\n\n_c = CompleteRegisterPage;\n\nvar CompleteRegisterForm = function CompleteRegisterForm(_ref2) {\n  _s2();\n\n  var api = _ref2.api,\n      isPayUReady = _ref2.isPayUReady,\n      packages = _ref2.packages,\n      POS = _ref2.POS;\n\n  var _ref3 = packages.items.find(function (item) {\n    return item.amount == 0;\n  }) || {},\n      free_package_id = _ref3.id;\n\n  var debug = false && !IS_PRODUCTION;\n  var requireds = IS_PRODUCTION;\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user,\n      updateUser = _useContext.updateUser;\n\n  var _useState2 = useState(),\n      genders = _useState2[0],\n      setGenders = _useState2[1];\n\n  var _useState3 = useState(false),\n      discounts = _useState3[0],\n      setDiscounts = _useState3[1];\n\n  var _useState4 = useState(false),\n      blockDiscountFields = _useState4[0],\n      setBlockDiscountFields = _useState4[1];\n\n  var _useState5 = useState({\n    name: '',\n    gender_id: '',\n    document: '',\n    country_id: '',\n    address_1st_level: '',\n    city: '',\n    address_3rd_level: '',\n    address: '',\n    package_id: '',\n    payment_method_id: null,\n    payment_os: null,\n    cash_payment_method_id: null,\n    terms: null,\n    discount_id: null\n  }),\n      values = _useState5[0],\n      setValues = _useState5[1];\n\n  var _useState6 = useState(),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState(),\n      error = _useState7[0],\n      setError = _useState7[1];\n  /* get genders */\n\n\n  useEffect(function (_) {\n    (function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_) {\n        var _yield$api$get, data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return api.get('genders');\n\n              case 2:\n                _yield$api$get = _context.sent;\n                data = _yield$api$get.data;\n                setGenders(data);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref4.apply(this, arguments);\n      };\n    })()();\n  }, []);\n  /* get discounts */\n\n  useEffect(function (_) {\n    (function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_) {\n        var _yield$api$get2, data;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return api.get('discounts');\n\n              case 2:\n                _yield$api$get2 = _context2.sent;\n                data = _yield$api$get2.data;\n                data = data.map(function (disc, index) {\n                  disc.dsc_id = 'dsc_' + index;\n                  return disc;\n                });\n                setDiscounts(data);\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref5.apply(this, arguments);\n      };\n    })()();\n  }, []);\n  /* fill user form */\n\n  useEffect(function (_) {\n    if (user) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        name: user.name,\n        gender_id: user.gender_id ? user.gender_id : '',\n        document: user.document ? user.document : '',\n        address: user.address ? user.address : '',\n        city: user.city ? user.city : '',\n        country_id: user.country_id ? user.country_id : '',\n        package_id: user.package_id_intention ? user.package_id_intention : ''\n      }));\n    }\n  }, [user]);\n  /* handle general input change */\n\n  var handleInputChange = function handleInputChange(e) {\n    var _e$target = e.target,\n        checked = _e$target.checked,\n        name = _e$target.name,\n        value = _e$target.value,\n        type = _e$target.type;\n    setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, name, type === 'checkbox' ? checked ? value === 'true' ? true : value : false : value)));\n  };\n  /* handle disocunt change */\n\n\n  var handleDiscountChange = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref6) {\n      var _objectSpread3;\n\n      var _ref6$target, name, value, id, valid;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _ref6$target = _ref6.target, name = _ref6$target.name, value = _ref6$target.value, id = _ref6$target.id;\n              _context3.next = 3;\n              return checkDiscount(value);\n\n            case 3:\n              valid = _context3.sent;\n              // console.table(valid)\n              setValues(_objectSpread(_objectSpread({}, values), {}, (_objectSpread3 = {}, _defineProperty(_objectSpread3, name, value), _defineProperty(_objectSpread3, \"discount_id\", valid ? id : null), _objectSpread3)));\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function handleDiscountChange(_x3) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  /* handle discount change */\n\n\n  var checkDiscount = /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(supporterCode) {\n      var prom;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              // Simulate API Call\n              prom = function prom(delay, value) {\n                return new Promise(function (resolve) {\n                  return setTimeout(resolve, delay, value);\n                });\n              };\n\n              _context4.next = 3;\n              return prom(50, supporterCode.length === 5);\n\n            case 3:\n              return _context4.abrupt(\"return\", _context4.sent);\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function checkDiscount(_x4) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n  /* handle package change */\n\n\n  var onPackageChange = useCallback(function (e) {\n    var package_id = parseInt(e.target.value, 10);\n    setValues(function (oldValues) {\n      return _objectSpread(_objectSpread({}, oldValues), {}, {\n        package_id: package_id,\n        payment_method_id: package_id === free_package_id ? null : values.payment_method_id\n      });\n    });\n  }, []);\n  /* handle payment method change */\n\n  function onPaymentChange(e) {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      payment_method_id: parseInt(e.target.value, 10),\n      cash_payment_method_id: null\n    }));\n  }\n\n  function onCashPaymentMethodChange(e) {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      cash_payment_method_id: parseInt(e.target.value, 10)\n    }));\n  }\n  /* token */\n\n\n  function createToken() {\n    return _createToken.apply(this, arguments);\n  } // is card payment\n\n\n  function _createToken() {\n    _createToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var promise;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              promise = new Promise(function (resolve, reject) {\n                var additionalData = {\n                  holder_name: document.getElementById('cardholder-name').value // custom_data: document.getElementById('custom').value,\n\n                };\n                POS.createToken(additionalData, function (result) {\n                  var json = JSON.parse(result);\n                  console.log('json', json);\n                  json.token ? resolve(json) : reject(json);\n                });\n              });\n              return _context6.abrupt(\"return\", promise);\n\n            case 2:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n    return _createToken.apply(this, arguments);\n  }\n\n  var credit_card_id = 1;\n  var debit_card_id = 2;\n  var isCardPayment = [credit_card_id, debit_card_id].includes(values.payment_method_id);\n  /* submit */\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(e) {\n      var paymentData, data, _yield$api$post, _yield$api$post$data, _user, order, _error$response, _data, status;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              e.preventDefault();\n              setLoading(true);\n              setError(false);\n              _context5.prev = 3;\n\n              if (!(values.package_id && values.package_id !== free_package_id && values.payment_method_id && isCardPayment)) {\n                _context5.next = 10;\n                break;\n              }\n\n              _context5.next = 7;\n              return createToken();\n\n            case 7:\n              _context5.t0 = _context5.sent;\n              _context5.next = 11;\n              break;\n\n            case 10:\n              _context5.t0 = null;\n\n            case 11:\n              paymentData = _context5.t0;\n              data = _objectSpread(_objectSpread({}, values), {}, {\n                payment_os: paymentData\n              });\n\n              if (data.country_id === '') {\n                delete data.country_id;\n              }\n\n              if (data.address_1st_level === '') {\n                delete data.address_1st_level;\n              }\n\n              if (data.address_3rd_level === '') {\n                delete data.address_3rd_level;\n              }\n\n              _context5.prev = 16;\n              _context5.next = 19;\n              return api.post('register/complete', data);\n\n            case 19:\n              _yield$api$post = _context5.sent;\n              _yield$api$post$data = _yield$api$post.data;\n              _user = _yield$api$post$data.user;\n              order = _yield$api$post$data.order;\n              updateUser(_user);\n\n              if (order) {\n                Router.push({\n                  pathname: '/register/confirm',\n                  query: {\n                    download_link: order.download_link,\n                    link: order.link\n                  }\n                }, '/register/confirm');\n              } else {\n                Router.push('/');\n              }\n\n              _context5.next = 30;\n              break;\n\n            case 27:\n              _context5.prev = 27;\n              _context5.t1 = _context5[\"catch\"](16);\n\n              if (_context5.t1.response) {\n                _error$response = _context5.t1.response, _data = _error$response.data, status = _error$response.status;\n\n                if (status === 422) {\n                  setError(_data);\n                }\n              } else if (_context5.t1.request) {\n                setError(_context5.t1);\n              } else {\n                setError(_context5.t1);\n              }\n\n            case 30:\n              _context5.next = 35;\n              break;\n\n            case 32:\n              _context5.prev = 32;\n              _context5.t2 = _context5[\"catch\"](3);\n              setError(_context5.t2.description ? {\n                errors: {\n                  payment_os: _context5.t2.description\n                }\n              } : _context5.t2);\n\n            case 35:\n              setLoading(false);\n\n            case 36:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[3, 32], [16, 27]]);\n    }));\n\n    return function handleSubmit(_x5) {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"form\", {\n    method: \"post\",\n    onSubmit: handleSubmit,\n    className: \"jsx-1643220738\"\n  }, error && error.message && __jsx(\"div\", {\n    className: \"jsx-1643220738\" + \" \" + \"invalid-feedback\"\n  }, error.message), debug && __jsx(\"pre\", {\n    style: {\n      color: '#fff'\n    },\n    className: \"jsx-1643220738\"\n  }, JSON.stringify(values, null, 2)), __jsx(\"div\", {\n    className: \"jsx-1643220738\" + \" \" + \"row\"\n  }, __jsx(\"div\", {\n    className: \"jsx-1643220738\" + \" \" + \"col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"jsx-1643220738\" + \" \" + \"data\"\n  }, __jsx(\"h3\", {\n    className: \"jsx-1643220738\" + \" \" + \"h3\"\n  }, \"Tus datos\"), __jsx(FormGroup, null, __jsx(Label, {\n    htmlFor: \"name\"\n  }, \"Nombre completo\"), __jsx(Input, {\n    id: \"name\",\n    name: \"name\",\n    onChange: handleInputChange,\n    required: requireds,\n    value: values.name\n  }), __jsx(InvalidFeedback, {\n    error: error,\n    loading: loading,\n    name: \"name\"\n  })), __jsx(FormGroup, null, __jsx(Label, {\n    htmlFor: \"gender_id\"\n  }, \"G\\xE9nero\"), __jsx(Select, {\n    id: \"gender_id\",\n    name: \"gender_id\",\n    onChange: handleInputChange,\n    required: requireds,\n    value: values.gender_id\n  }, !genders ? __jsx(\"option\", {\n    disabled: true,\n    value: \"\",\n    className: \"jsx-1643220738\"\n  }, \"Cargando...\") : genders.length ? __jsx(React.Fragment, null, __jsx(\"option\", {\n    disabled: true,\n    value: \"\",\n    className: \"jsx-1643220738\"\n  }, \"Selecciona tu g\\xE9nero\"), genders.map(function (genre, key) {\n    return __jsx(\"option\", _extends({\n      key: key\n    }, {\n      value: genre.id,\n      className: \"jsx-1643220738\"\n    }), genre.name);\n  })) : __jsx(\"option\", {\n    disabled: true,\n    value: \"\",\n    className: \"jsx-1643220738\"\n  }, \"Incapaz de cargar g\\xE9neros\")), __jsx(InvalidFeedback, {\n    error: error,\n    loading: loading,\n    name: \"gender_id\"\n  })), __jsx(FormGroup, null, __jsx(Label, {\n    htmlFor: \"document\"\n  }, \"Documento\"), __jsx(Input, {\n    id: \"document\",\n    name: \"document\",\n    onChange: handleInputChange,\n    required: requireds,\n    type: \"text\",\n    value: values.document\n  }), __jsx(InvalidFeedback, {\n    error: error,\n    loading: loading,\n    name: \"document\"\n  })), discounts && discounts.map(function (d) {\n    return __jsx(FormGroup, {\n      key: d.id\n    }, __jsx(Label, {\n      htmlFor: d.dsc_id\n    }, d.name), __jsx(Input, {\n      disabled: discounts.find(function (disc) {\n        return !['', undefined].includes(values[disc.dsc_id]) && disc.id != d.id;\n      }),\n      id: d.id,\n      maxLength: 5,\n      name: d.dsc_id,\n      onChange: handleDiscountChange,\n      type: \"text\",\n      style: values.discount_id == d.id ? {\n        backgroundColor: 'rgb(206, 249, 206)'\n      } : {},\n      value: values[d.dsc_id] || '',\n      readOnly: blockDiscountFields\n    }), __jsx(\"div\", {\n      style: {\n        \"float\": 'right',\n        paddingTop: '10px'\n      },\n      className: \"jsx-1643220738\"\n    }, __jsx(Loading, {\n      size: \"20\",\n      color: \"white\",\n      loadingState: values.discount_id == d.id && blockDiscountFields\n    })));\n  }))), __jsx(\"div\", {\n    className: \"jsx-1643220738\" + \" \" + \"col-md-6\"\n  }, __jsx(Address, {\n    api: api,\n    error: error,\n    handleInputChange: handleInputChange,\n    loading: loading,\n    requireds: requireds,\n    setValues: setValues,\n    values: values\n  }))), __jsx(Packages, {\n    error: packages.error ? packages.error : null,\n    items: packages.items ? packages.items : null,\n    onChange: onPackageChange,\n    package_id: values.package_id,\n    validationError: !loading && error && error.errors && error.errors.package_id,\n    discount_id: values.discount_id,\n    setBlockDiscountFields: setBlockDiscountFields\n  }), values.package_id && values.package_id !== free_package_id && __jsx(Payment, {\n    api: api,\n    cash_payment_method_id: values.cash_payment_method_id,\n    error: error,\n    isCardPayment: isCardPayment,\n    isPayUReady: isPayUReady,\n    loading: loading,\n    onCashPaymentMethodChange: onCashPaymentMethodChange,\n    onChange: onPaymentChange,\n    payment_method_id: values.payment_method_id,\n    POS: POS,\n    requireds: requireds,\n    validationError: !loading && error && error.errors && error.errors.payment_method_id\n  }), __jsx(\"div\", {\n    className: \"jsx-1643220738\" + \" \" + \"row align-items-center\"\n  }, __jsx(\"div\", {\n    className: \"jsx-1643220738\" + \" \" + \"col-md-6 offset-md-4\"\n  }, __jsx(\"label\", {\n    className: \"jsx-1643220738\" + \" \" + \"terms\"\n  }, __jsx(\"input\", {\n    checked: values.terms,\n    name: \"terms\",\n    onChange: handleInputChange,\n    required: requireds,\n    type: \"checkbox\",\n    value: \"true\",\n    className: \"jsx-1643220738\"\n  }), __jsx(\"span\", {\n    className: \"jsx-1643220738\"\n  }, \"He le\\xEDdo y acepto \", __jsx(Link, {\n    href: \"/terminos-y-politicas\"\n  }, __jsx(\"a\", {\n    target: \"_blank\",\n    className: \"jsx-1643220738\"\n  }, \"el contrato\")), \" de \", CONFIG.appName)), __jsx(InvalidFeedback, {\n    error: error,\n    loading: loading,\n    name: \"terms\"\n  })), __jsx(\"div\", {\n    className: \"jsx-1643220738\" + \" \" + \"col-md-2 text-right\"\n  }, __jsx(Button, {\n    block: true,\n    color: \"secondary\",\n    disabled: loading,\n    type: \"submit\"\n  }, \"Enviar\"))), __jsx(_JSXStyle, {\n    id: \"1643220738\"\n  }, \".h3{font-size:20px;font-weight:bold;margin-bottom:10px;}hr.jsx-1643220738,.hr.jsx-1643220738{margin-top:0;margin-bottom:15px;}.terms.jsx-1643220738{font-size:18px;}.terms.jsx-1643220738 input.jsx-1643220738{margin-right:5px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/rafael/Projects/somosgad/dale/pages/register/complete.js */\"));\n};\n\n_s2(CompleteRegisterForm, \"NmtE2CYGqsdO5Z4Mde59wiiiVSE=\");\n\n_c2 = CompleteRegisterForm;\n\nvar InvalidFeedback = function InvalidFeedback(_ref10) {\n  var error = _ref10.error,\n      loading = _ref10.loading,\n      name = _ref10.name;\n  return __jsx(React.Fragment, null, !loading && error && error.errors && error.errors[name] && __jsx(\"div\", {\n    className: \"invalid-feedback\"\n  }, error.errors[name]));\n};\n\n_c3 = InvalidFeedback;\n\nvar SelectFormGroup = function SelectFormGroup(_ref11) {\n  var error = _ref11.error,\n      label = _ref11.label,\n      list = _ref11.list,\n      _ref11$listMapValue = _ref11.listMapValue,\n      listMapValue = _ref11$listMapValue === void 0 ? null : _ref11$listMapValue,\n      loading = _ref11.loading,\n      name = _ref11.name,\n      onChange = _ref11.onChange,\n      pluralLabel = _ref11.pluralLabel,\n      requireds = _ref11.requireds,\n      value = _ref11.value;\n  return __jsx(FormGroup, null, __jsx(Label, {\n    htmlFor: name\n  }, label), __jsx(Select, {\n    id: name,\n    name: name,\n    onChange: onChange,\n    required: requireds,\n    value: value\n  }, !list ? __jsx(\"option\", {\n    disabled: true,\n    value: \"\"\n  }, \"Cargando...\") : list.length ? __jsx(React.Fragment, null, __jsx(\"option\", {\n    disabled: true,\n    value: \"\"\n  }, \"Selecciona tu \", label.toLowerCase()), list.map(function (item, key) {\n    var value = listMapValue ? item[listMapValue] : item;\n    var optionName = listMapValue ? item.name : item;\n    return __jsx(\"option\", {\n      key: key,\n      value: value\n    }, optionName);\n  })) : __jsx(\"option\", {\n    disabled: true,\n    value: \"\"\n  }, \"Incapaz de cargar \", pluralLabel)), __jsx(InvalidFeedback, {\n    error: error,\n    loading: loading,\n    name: name\n  }));\n};\n\n_c4 = SelectFormGroup;\n\nvar Address = function Address(_ref12) {\n  _s3();\n\n  var api = _ref12.api,\n      error = _ref12.error,\n      handleInputChange = _ref12.handleInputChange,\n      setValues = _ref12.setValues,\n      loading = _ref12.loading,\n      requireds = _ref12.requireds,\n      values = _ref12.values;\n  var argCountryId = 11;\n  var braCountryId = 32;\n  var chlCountryId = 48;\n  var countryId = values.country_id,\n      address_1st_level = values.address_1st_level,\n      city = values.city,\n      address_3rd_level = values.address_3rd_level,\n      address = values.address;\n\n  var _useState8 = useState(),\n      countries = _useState8[0],\n      setCountries = _useState8[1];\n\n  useEffect(function (_) {\n    (function () {\n      var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(_) {\n        var _yield$api$get3, data;\n\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return api.get('countries');\n\n              case 2:\n                _yield$api$get3 = _context7.sent;\n                data = _yield$api$get3.data;\n                setCountries(data);\n\n              case 5:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      return function (_x6) {\n        return _ref13.apply(this, arguments);\n      };\n    })()();\n  }, []);\n\n  var handleCountryChange = function handleCountryChange(e) {\n    var _objectSpread4;\n\n    var _e$target2 = e.target,\n        name = _e$target2.name,\n        value = _e$target2.value;\n    setValues(_objectSpread(_objectSpread({}, values), {}, (_objectSpread4 = {}, _defineProperty(_objectSpread4, name, value), _defineProperty(_objectSpread4, \"address_1st_level\", ''), _objectSpread4)));\n  };\n\n  var firstLevelLabel = countryId == argCountryId ? 'Provincia' : countryId == braCountryId ? 'Estado' : countryId == chlCountryId ? 'RegiÃ³n' : 'State';\n  var firstLevelPluralLabel = countryId == argCountryId ? 'Provincias' : countryId == braCountryId ? 'Estados' : countryId == chlCountryId ? 'Regiones' : 'States';\n\n  var _useState9 = useState(),\n      firstLevelList = _useState9[0],\n      setFirstLevelList = _useState9[1];\n\n  useEffect(function (_) {\n    (function () {\n      var _ref14 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(_) {\n        var parsedCountryId, _ref15, addresses;\n\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                parsedCountryId = parseInt(countryId);\n\n                if (![argCountryId, braCountryId, chlCountryId].includes(parsedCountryId)) {\n                  _context8.next = 7;\n                  break;\n                }\n\n                _context8.next = 4;\n                return api.get('address-1st-levels', {\n                  params: {\n                    country_id: countryId\n                  }\n                });\n\n              case 4:\n                _context8.t0 = _context8.sent;\n                _context8.next = 8;\n                break;\n\n              case 7:\n                _context8.t0 = {\n                  data: null\n                };\n\n              case 8:\n                _ref15 = _context8.t0;\n                addresses = _ref15.data;\n                setFirstLevelList(addresses);\n\n              case 11:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      return function (_x7) {\n        return _ref14.apply(this, arguments);\n      };\n    })()();\n  }, [countryId]);\n  var cityLabel = countryId == braCountryId ? 'Cidade' : countryId == chlCountryId ? 'Provincia' : 'Ciudad';\n  var thirdLevelLabel = countryId == chlCountryId ? 'Comuna' : 'District';\n  return __jsx(\"div\", {\n    className: \"address\"\n  }, __jsx(\"h3\", {\n    className: \"h3\"\n  }, \"Ubicaci\\xF3n\"), __jsx(SelectFormGroup, {\n    error: error,\n    label: \"Pa\\xEDs\",\n    loading: loading,\n    list: countries,\n    listMapValue: \"id\",\n    name: \"country_id\",\n    onChange: handleCountryChange,\n    pluralLabel: \"Pa\\xEDses\",\n    requireds: requireds,\n    value: countryId\n  }), [argCountryId, braCountryId, chlCountryId].map(function (id) {\n    return id + '';\n  }).includes(countryId) && __jsx(SelectFormGroup, {\n    error: error,\n    label: firstLevelLabel,\n    loading: loading,\n    list: firstLevelList,\n    listMapValue: \"id\",\n    name: \"address_1st_level\",\n    onChange: handleInputChange,\n    pluralLabel: firstLevelPluralLabel,\n    requireds: requireds,\n    value: address_1st_level\n  }), [braCountryId, chlCountryId].map(function (id) {\n    return id + '';\n  }).includes(countryId) && __jsx(FormGroup, null, __jsx(Label, {\n    htmlFor: \"city\"\n  }, cityLabel), __jsx(Input, {\n    id: \"city\",\n    name: \"city\",\n    onChange: handleInputChange,\n    required: requireds,\n    type: \"text\",\n    value: city\n  }), __jsx(InvalidFeedback, {\n    error: error,\n    loading: loading,\n    name: \"city\"\n  })), [chlCountryId].map(function (id) {\n    return id + '';\n  }).includes(countryId) && __jsx(FormGroup, null, __jsx(Label, {\n    htmlFor: \"address_3rd_level\"\n  }, thirdLevelLabel), __jsx(Input, {\n    id: \"address_3rd_level\",\n    name: \"address_3rd_level\",\n    onChange: handleInputChange,\n    required: requireds,\n    type: \"text\",\n    value: address_3rd_level\n  }), __jsx(InvalidFeedback, {\n    error: error,\n    loading: loading,\n    name: \"address_3rd_level\"\n  })), __jsx(FormGroup, null, __jsx(Label, {\n    htmlFor: \"address\"\n  }, \"Direcci\\xF3n\"), __jsx(Input, {\n    id: \"address\",\n    name: \"address\",\n    onChange: handleInputChange,\n    required: requireds,\n    type: \"text\",\n    value: address\n  }), __jsx(InvalidFeedback, {\n    error: error,\n    loading: loading,\n    name: \"address\"\n  })));\n};\n\n_s3(Address, \"cSsZ5S0IzjSw6pBDM5oB+1xY34c=\");\n\n_c5 = Address;\n\nvar Payment = function Payment(_ref16) {\n  _s4();\n\n  var api = _ref16.api,\n      cash_payment_method_id = _ref16.cash_payment_method_id,\n      error = _ref16.error,\n      isCardPayment = _ref16.isCardPayment,\n      isPayUReady = _ref16.isPayUReady,\n      loading = _ref16.loading,\n      onCashPaymentMethodChange = _ref16.onCashPaymentMethodChange,\n      onChange = _ref16.onChange,\n      payment_method_id = _ref16.payment_method_id,\n      POS = _ref16.POS,\n      requireds = _ref16.requireds,\n      validationError = _ref16.validationError;\n\n  // payment methods\n  var _useState10 = useState(),\n      paymentMethods = _useState10[0],\n      setPaymentMethods = _useState10[1]; // get payment methods\n\n\n  useEffect(function (_) {\n    var getPaymentMethods = /*#__PURE__*/function () {\n      var _ref17 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(_) {\n        var _yield$api$get4, data;\n\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return api.get('payment-methods');\n\n              case 2:\n                _yield$api$get4 = _context9.sent;\n                data = _yield$api$get4.data;\n                setPaymentMethods(data);\n\n              case 5:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }));\n\n      return function getPaymentMethods(_x8) {\n        return _ref17.apply(this, arguments);\n      };\n    }();\n\n    getPaymentMethods();\n  }, []); // init card secure fields\n\n  useEffect(function (_) {\n    if (isPayUReady && isCardPayment) {\n      POS.initSecureFields('card-secure-fields');\n    }\n  }, [isPayUReady, isCardPayment]); // cash payment methods\n\n  var _useState11 = useState(),\n      cashPaymentMethods = _useState11[0],\n      setCashPaymentMethods = _useState11[1]; // get cash payment methods\n\n\n  useEffect(function (_) {\n    var getCashPaymentMethods = /*#__PURE__*/function () {\n      var _ref18 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(_) {\n        var _yield$api$get5, data;\n\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return api.get('cash-payment-methods');\n\n              case 2:\n                _yield$api$get5 = _context10.sent;\n                data = _yield$api$get5.data;\n                setCashPaymentMethods(data);\n\n              case 5:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10);\n      }));\n\n      return function getCashPaymentMethods(_x9) {\n        return _ref18.apply(this, arguments);\n      };\n    }();\n\n    getCashPaymentMethods();\n  }, []);\n  return __jsx(\"div\", {\n    className: \"jsx-2298570347\" + \" \" + \"row\"\n  }, __jsx(\"div\", {\n    className: \"jsx-2298570347\" + \" \" + \"offset-md-2 col-md-8\"\n  }, __jsx(\"h3\", {\n    className: \"jsx-2298570347\" + \" \" + \"h3\"\n  }, \"Pago\"), __jsx(\"div\", {\n    className: \"jsx-2298570347\" + \" \" + \"row\"\n  }, __jsx(\"div\", {\n    className: \"jsx-2298570347\" + \" \" + \"col-md-6\"\n  }, __jsx(FormGroup, null, paymentMethods && paymentMethods.map(function (paymentMethod, key) {\n    return __jsx(InputRadio, {\n      key: key,\n      label: paymentMethod.name,\n      name: \"payment\",\n      onChange: onChange,\n      state: payment_method_id,\n      value: paymentMethod.id\n    });\n  }), validationError && __jsx(\"div\", {\n    className: \"jsx-2298570347\" + \" \" + \"invalid-feedback\"\n  }, validationError))), __jsx(\"div\", {\n    className: \"jsx-2298570347\" + \" \" + \"col-md-6\"\n  }, isCardPayment ? __jsx(\"div\", {\n    className: \"jsx-2298570347\" + \" \" + \"card-inputs\"\n  }, __jsx(FormGroup, null, __jsx(Label, {\n    htmlFor: \"cardholder-name\"\n  }, \"Nombre impreso en tarjeta\"), __jsx(Input, {\n    id: \"cardholder-name\",\n    name: \"cardholder-name\",\n    required: requireds,\n    type: \"text\"\n  })), __jsx(FormGroup, null, __jsx(\"div\", {\n    id: \"card-secure-fields\",\n    className: \"jsx-2298570347\"\n  }), __jsx(InvalidFeedback, {\n    error: error,\n    loading: loading,\n    name: \"payment_os\"\n  }))) // cash payment methods\n  : payment_method_id === 3 && __jsx(FormGroup, null, cashPaymentMethods == null ? __jsx(\"p\", {\n    className: \"jsx-2298570347\"\n  }, \"Cargando...\") : cashPaymentMethods.length ? cashPaymentMethods.map(function (item, key) {\n    return __jsx(InputRadio, {\n      key: key,\n      label: item.name,\n      name: \"cash_payment_method_id\",\n      onChange: onCashPaymentMethodChange,\n      state: cash_payment_method_id,\n      value: item.id\n    });\n  }) : __jsx(\"p\", {\n    className: \"jsx-2298570347\"\n  }, \"Sin m\\xE9todo de pago configurado.\"), __jsx(InvalidFeedback, {\n    error: error,\n    loading: loading,\n    name: \"cash_payment_method_id\"\n  }))))), __jsx(_JSXStyle, {\n    id: \"2298570347\"\n  }, \"@media (min-width:768px){.card-inputs.jsx-2298570347{margin-top:-21px;}}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/rafael/Projects/somosgad/dale/pages/register/complete.js */\"));\n}; // Radio\n\n\n_s4(Payment, \"0UWiyWck3C2xoYBULL5ka1IE0S8=\");\n\n_c6 = Payment;\n\nvar InputRadio = function InputRadio(_ref19) {\n  _s5();\n\n  var label = _ref19.label,\n      name = _ref19.name,\n      onChange = _ref19.onChange,\n      state = _ref19.state,\n      value = _ref19.value;\n  var theme = useContext(ThemeContext);\n  var radioColor = theme.colors.background;\n  return __jsx(\"label\", {\n    className: _JSXStyle.dynamic([[\"204478922\", [radioColor]]])\n  }, __jsx(\"input\", _extends({\n    checked: state === value,\n    type: \"radio\"\n  }, {\n    name: name,\n    onChange: onChange,\n    value: value\n  }, {\n    className: _JSXStyle.dynamic([[\"204478922\", [radioColor]]])\n  })), __jsx(\"span\", {\n    className: _JSXStyle.dynamic([[\"204478922\", [radioColor]]]) + \" \" + \"fake-input\"\n  }, __jsx(\"span\", {\n    className: _JSXStyle.dynamic([[\"204478922\", [radioColor]]]) + \" \" + \"fake-radio\"\n  }), __jsx(\"span\", {\n    className: _JSXStyle.dynamic([[\"204478922\", [radioColor]]])\n  }, label)), __jsx(_JSXStyle, {\n    id: \"204478922\",\n    dynamic: [radioColor]\n  }, \"label.__jsx-style-dynamic-selector{display:block;margin-bottom:5px;overflow:hidden;position:relative;}input.__jsx-style-dynamic-selector{opacity:0;position:absolute;}.fake-input.__jsx-style-dynamic-selector{border:2px solid var(--primary);border-radius:4px;display:block;font-size:1rem;line-height:1.4;padding:.375rem .75rem;-webkit-transition:background-color .3s,border-color .3s,color .3s;transition:background-color .3s,border-color .3s,color .3s;}.fake-radio.__jsx-style-dynamic-selector{background-color:var(--white);border:1px solid var(--gray2);border-radius:50%;display:inline-block;height:15px;margin-right:7.5px;padding:1px;vertical-align:-2px;width:15px;}.fake-radio.__jsx-style-dynamic-selector::before{background-color:\".concat(radioColor, \";border-radius:50%;content:'';display:block;opacity:0;height:100%;-webkit-transition:opacity .3s;transition:opacity .3s;width:100%;}input.__jsx-style-dynamic-selector:checked+.fake-input.__jsx-style-dynamic-selector{background-color:var(--primary);color:white;}input.__jsx-style-dynamic-selector:checked+.fake-input.__jsx-style-dynamic-selector .fake-radio.__jsx-style-dynamic-selector::before{opacity:1;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/rafael/Projects/somosgad/dale/pages/register/complete.js */\")));\n}; // getInitialProps\n\n\n_s5(InputRadio, \"+C1P7ukOg/azcV4AZ819oyezFOE=\");\n\n_c7 = InputRadio;\n\nCompleteRegisterPage.getInitialProps = /*#__PURE__*/function () {\n  var _ref20 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(ctx) {\n    var api, res, user, message, packages, _yield$api$get6, data;\n\n    return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            api = ctx.api, res = ctx.res, user = ctx.user; // if user has already completed registry, redirect it\n\n            if (!user.register_completed_at) {\n              _context11.next = 11;\n              break;\n            }\n\n            message = JSON.stringify({\n              info: \"Ya ha completado su registro.\"\n            });\n            nookies.set(ctx, 'flash_message', message, {\n              path: '/'\n            });\n\n            if (!res) {\n              _context11.next = 10;\n              break;\n            }\n\n            res.redirect('/');\n            res.end();\n            return _context11.abrupt(\"return\", {});\n\n          case 10:\n            Router.back();\n\n          case 11:\n            _context11.prev = 11;\n            _context11.next = 14;\n            return api.get('packages');\n\n          case 14:\n            _yield$api$get6 = _context11.sent;\n            data = _yield$api$get6.data;\n            packages = {\n              items: data\n            };\n            _context11.next = 22;\n            break;\n\n          case 19:\n            _context11.prev = 19;\n            _context11.t0 = _context11[\"catch\"](11);\n            packages = {\n              error: _context11.t0\n            };\n\n          case 22:\n            return _context11.abrupt(\"return\", {\n              packages: packages,\n              user: user\n            });\n\n          case 23:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11, null, [[11, 19]]);\n  }));\n\n  return function (_x10) {\n    return _ref20.apply(this, arguments);\n  };\n}(); // export\n\n\nexport default _c8 = withAuth(CompleteRegisterPage);\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"CompleteRegisterPage\");\n$RefreshReg$(_c2, \"CompleteRegisterForm\");\n$RefreshReg$(_c3, \"InvalidFeedback\");\n$RefreshReg$(_c4, \"SelectFormGroup\");\n$RefreshReg$(_c5, \"Address\");\n$RefreshReg$(_c6, \"Payment\");\n$RefreshReg$(_c7, \"InputRadio\");\n$RefreshReg$(_c8, \"%default%\");","map":{"version":3,"sources":["/Users/rafael/Projects/somosgad/dale/pages/register/complete.js"],"names":["useScript","ScriptStatus","Head","Link","Router","nookies","ThemeContext","Layout","CONFIG","FormGroup","Label","Input","Button","useContext","useEffect","useState","useCallback","UserContext","Packages","Select","IS_PRODUCTION","HAS_WINDOW","withAuth","Loading","CompleteRegisterPage","api","layoutProps","packages","user","ready","status","POS","window","payUEnv","businessUnitPublicKey","isPayUReady","setIsPayUReady","POSStyle","base","borderRadius","backgroundColor","height","fontSize","padding","marginLeft","cardImage","borderTopRightRadius","borderBottomRightRadius","margin","pan","width","borderTopLeftRadius","borderBottomLeftRadius","expirationDate","secureFields","left","cvv","ERROR","console","log","_","setPublicKey","setEnvironment","setStyle","setCardNumberPlaceholder","setExpirationDatePlaceholder","appName","CompleteRegisterForm","items","find","item","amount","free_package_id","id","debug","requireds","updateUser","genders","setGenders","discounts","setDiscounts","blockDiscountFields","setBlockDiscountFields","name","gender_id","document","country_id","address_1st_level","city","address_3rd_level","address","package_id","payment_method_id","payment_os","cash_payment_method_id","terms","discount_id","values","setValues","loading","setLoading","error","setError","get","data","map","disc","index","dsc_id","package_id_intention","handleInputChange","e","target","checked","value","type","handleDiscountChange","checkDiscount","valid","supporterCode","prom","delay","Promise","resolve","setTimeout","length","onPackageChange","parseInt","oldValues","onPaymentChange","onCashPaymentMethodChange","createToken","promise","reject","additionalData","holder_name","getElementById","result","json","JSON","parse","token","credit_card_id","debit_card_id","isCardPayment","includes","handleSubmit","preventDefault","paymentData","post","order","push","pathname","query","download_link","link","response","request","description","errors","message","color","stringify","genre","key","d","undefined","paddingTop","onChange","validationError","InvalidFeedback","SelectFormGroup","label","list","listMapValue","pluralLabel","toLowerCase","optionName","Address","argCountryId","braCountryId","chlCountryId","countryId","countries","setCountries","handleCountryChange","firstLevelLabel","firstLevelPluralLabel","firstLevelList","setFirstLevelList","parsedCountryId","params","addresses","cityLabel","thirdLevelLabel","Payment","paymentMethods","setPaymentMethods","getPaymentMethods","initSecureFields","cashPaymentMethods","setCashPaymentMethods","getCashPaymentMethods","paymentMethod","InputRadio","state","theme","radioColor","colors","background","getInitialProps","ctx","res","register_completed_at","info","set","path","redirect","end","back"],"mappings":"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","sourcesContent":["import useScript, { ScriptStatus } from '@charlietango/use-script'\nimport Head from 'next/head'\nimport Link from 'next/link'\nimport Router from 'next/router'\nimport nookies from 'nookies'\n// import sleep from 'sleep-promise'\nimport { ThemeContext } from 'styled-components'\nimport Layout from '~/components/layout/Layout'\nimport { CONFIG } from '~/config'\nimport FormGroup from '~/components/layout/AuthModal/FormGroup'\nimport Label from '~/components/layout/AuthModal/Label'\nimport Input from '~/components/layout/AuthModal/Input'\nimport Button from '~/components/button'\nimport { useContext, useEffect, useState, useCallback } from 'react'\nimport UserContext from '~/contexts/UserContext'\nimport Packages from '~/components/Packages'\nimport Select from '~/components/Select/Select'\nimport { IS_PRODUCTION, HAS_WINDOW } from '~/constants/constants'\nimport withAuth from '~/components/withAuth'\nimport Loading from '~/components/Loading/Loading'\n\n// page\nconst CompleteRegisterPage = ({ api, layoutProps, packages, user }) => {\n  const [ ready, status ] = useScript('https://js.paymentsos.com/v2/latest/secure-fields.min.js')\n  const POS = ready && HAS_WINDOW ? window.POS : null\n  const payUEnv = 'test'\n  const businessUnitPublicKey = '88985036-6530-4b5a-a7ec-c4e07ec07f6c'\n  const [ isPayUReady, setIsPayUReady ] = useState(false)\n  const POSStyle = {\n    base: {\n      borderRadius: '.15rem',\n      backgroundColor: 'white',\n      height: 'calc(1.5em + .75rem + 2px)',\n      fontSize: '12px',\n      padding:'0px 3px',\n      marginLeft: '5px',\n      cardImage: {\n        borderTopRightRadius: 0,\n        borderBottomRightRadius: 0,\n        margin: 0,\n      },\n      pan:{\n        width:'160px',\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0,\n        marginLeft: 0,\n      },\n      expirationDate: { width: '47px' },\n      secureFields: { left: '40px' },\n      cvv: { width: '35px' }\n    }\n  }\n\n  if (status === ScriptStatus.ERROR) {\n    console.log('Failed to load POS API')\n  }\n\n  useEffect(_ => {\n    if (POS) {\n      POS.setPublicKey(businessUnitPublicKey)\n      POS.setEnvironment(payUEnv)\n      POS.setStyle(POSStyle)\n      POS.setCardNumberPlaceholder('Tarjeta de crÃ©dito')\n      POS.setExpirationDatePlaceholder('MM/AA');\n      setIsPayUReady(true)\n    }\n  }, [POS])\n\n  return (\n    <Layout {...layoutProps}>\n      <Head>\n        <title>ConfirmaciÃ³n &lt; Registro &lt; {CONFIG.appName}</title>\n      </Head>\n      <div className=\"rgpage container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-xl-8 offset-xl-2\">\n\n            <h1 className=\"h2\">Completa tu registro</h1>\n\n            <CompleteRegisterForm {...{api, isPayUReady, packages, POS}} />\n\n          </div>\n        </div>\n      </div>\n      <style jsx>{`\n        .rgpage {\n          padding-top: 40px;\n          padding-bottom: 120px;\n        }\n        .h2 {\n          margin-bottom: 10px;\n        }\n      `}</style>\n    </Layout>\n  )\n}\n\nconst CompleteRegisterForm = ({ api, isPayUReady, packages, POS }) => {\n\n  const { id: free_package_id } = packages.items.find(item => item.amount == 0) || {}\n\n  const debug = false && ! IS_PRODUCTION\n  const requireds = IS_PRODUCTION\n\n  const { user, updateUser } = useContext(UserContext)\n\n  const [ genders, setGenders ] = useState()\n  const [ discounts, setDiscounts ] = useState(false)\n  const [ blockDiscountFields, setBlockDiscountFields ] = useState(false)\n\n  const [ values, setValues ] = useState({\n    name: '',\n    gender_id: '',\n    document: '',\n    country_id: '',\n    address_1st_level: '',\n    city: '',\n    address_3rd_level: '',\n    address: '',\n    package_id: '',\n    payment_method_id: null,\n    payment_os: null,\n    cash_payment_method_id: null,\n    terms: null,\n    discount_id: null,\n  })\n\n  const [ loading, setLoading ] = useState()\n  const [ error, setError ] = useState()\n\n  /* get genders */\n  useEffect(_ => {\n    (async _ => {\n      const {data} = await api.get('genders')\n      setGenders(data)\n    })()\n  }, [])\n\n   /* get discounts */\n   useEffect(_ => {\n    (async _ => {\n      var { data } = await api.get('discounts')\n\n      data = data.map( (disc, index) => {\n        disc.dsc_id = 'dsc_' + index\n        return disc\n      })\n\n      setDiscounts(data)\n    })()\n  }, [])\n\n  /* fill user form */\n  useEffect(_ => {\n    if (user) {\n      setValues({\n        ...values,\n        name: user.name,\n        gender_id: user.gender_id ? user.gender_id : '',\n        document: user.document ? user.document : '',\n        address: user.address ? user.address : '',\n        city: user.city ? user.city : '',\n        country_id: user.country_id ? user.country_id : '',\n        package_id: user.package_id_intention ? user.package_id_intention : '',\n      })\n    }\n  }, [user])\n\n  /* handle general input change */\n  const handleInputChange = e => {\n    const { checked, name, value, type } = e.target\n    setValues({\n      ...values,\n      [name]: type === 'checkbox' ?\n        (checked ? (value === 'true' ? true : value) : false) :\n        value,\n    })\n  }\n\n  /* handle disocunt change */\n  const handleDiscountChange = async ({target:{ name, value, id }}) => {\n\n    let valid = await checkDiscount(value)\n    // console.table(valid)\n\n    setValues({\n      ...values,\n      [name]: value,\n      discount_id: valid ? id : null\n    })\n  }\n\n  /* handle discount change */\n  const checkDiscount = async supporterCode => {\n\n    // Simulate API Call\n    const prom = (delay, value) => new Promise(resolve => setTimeout(resolve, delay, value))\n\n    return await prom(50, supporterCode.length === 5)\n\n  }\n\n  /* handle package change */\n  const onPackageChange = useCallback( e => {\n    const package_id = parseInt(e.target.value, 10)\n    setValues( oldValues => ({\n      ...oldValues,\n      package_id,\n      payment_method_id: package_id === free_package_id ? null : values.payment_method_id,\n    }))\n  },[])\n\n  /* handle payment method change */\n  function onPaymentChange(e) {\n    setValues({\n      ...values,\n      payment_method_id: parseInt(e.target.value, 10),\n      cash_payment_method_id: null,\n    })\n  }\n\n  function onCashPaymentMethodChange(e) {\n    setValues({\n      ...values,\n      cash_payment_method_id: parseInt(e.target.value, 10),\n    })\n  }\n\n  /* token */\n  async function createToken() {\n    const promise = new Promise((resolve, reject) => {\n      const additionalData = {\n        holder_name: document.getElementById('cardholder-name').value,\n        // custom_data: document.getElementById('custom').value,\n      }\n      POS.createToken(additionalData, (result) => {\n        const json = JSON.parse(result)\n        console.log('json', json)\n        json.token ? resolve(json) : reject(json)\n      })\n    })\n    return promise\n  }\n\n  // is card payment\n  const credit_card_id = 1\n  const debit_card_id = 2\n  const isCardPayment = [credit_card_id, debit_card_id].includes(values.payment_method_id)\n\n  /* submit */\n  const handleSubmit = async e => {\n    e.preventDefault()\n    setLoading(true)\n    setError(false)\n    try {\n      const paymentData = values.package_id && values.package_id !== free_package_id &&\n        values.payment_method_id && isCardPayment ? await createToken() : null\n      const data = { ...values, payment_os: paymentData }\n      if (data.country_id === '') {\n        delete data.country_id\n      }\n      if (data.address_1st_level === '') {\n        delete data.address_1st_level\n      }\n      if (data.address_3rd_level === '') {\n        delete data.address_3rd_level\n      }\n      try {\n        const { data: { user, order } } = await api.post('register/complete', data)\n        updateUser(user)\n        if (order) {\n          Router.push({\n            pathname: '/register/confirm',\n            query: {\n              download_link: order.download_link,\n              link: order.link,\n            },\n          }, '/register/confirm')\n        } else {\n          Router.push('/')\n        }\n      } catch (error) {\n        if (error.response) {\n          const { data, status } = error.response\n          if (status === 422) {\n            setError(data)\n          }\n        } else if (error.request) {\n          setError(error)\n        } else {\n          setError(error)\n        }\n      }\n    } catch (error) {\n      setError(error.description ? { errors: { payment_os: error.description } } : error)\n    }\n    setLoading(false)\n  }\n\n  return (\n    <form method=\"post\" onSubmit={handleSubmit}>\n\n      {/* main error msg */}\n      { error && error.message && (\n        <div className=\"invalid-feedback\">{error.message}</div>\n      ) }\n\n      {/* form data debug */}\n      { debug && (\n        <pre style={{ color: '#fff' }}>\n          {JSON.stringify(values, null, 2)}\n        </pre>\n      )}\n\n      <div className=\"row\">\n\n        <div className=\"col-md-6\">\n          <div className=\"data\">\n\n            {/* heading */}\n            <h3 className=\"h3\">Tus datos</h3>\n\n            {/* name */}\n            <FormGroup>\n              <Label htmlFor=\"name\">Nombre completo</Label>\n              <Input\n                id=\"name\"\n                name=\"name\"\n                onChange={handleInputChange}\n                required={requireds}\n                value={values.name}\n              />\n              <InvalidFeedback error={error} loading={loading} name=\"name\" />\n            </FormGroup>\n\n            {/* genre */}\n            <FormGroup>\n              <Label htmlFor=\"gender_id\">GÃ©nero</Label>\n              <Select\n                id=\"gender_id\"\n                name=\"gender_id\"\n                onChange={handleInputChange}\n                required={requireds}\n                value={values.gender_id}\n              >\n                { ! genders ? (\n                  <option disabled value=\"\">Cargando...</option>\n                ) : genders.length ? <>\n                  <option disabled value=\"\">Selecciona tu gÃ©nero</option>\n                  { genders.map((genre, key) => (\n                    <option {...{key}} value={genre.id}>{genre.name}</option>\n                  ))}\n                </> : (\n                  <option disabled value=\"\">Incapaz de cargar gÃ©neros</option>\n                ) }\n              </Select>\n              <InvalidFeedback error={error} loading={loading} name=\"gender_id\" />\n            </FormGroup>\n\n            {/* document */}\n            <FormGroup>\n              <Label htmlFor=\"document\">Documento</Label>\n              <Input\n                id=\"document\"\n                name=\"document\"\n                onChange={handleInputChange}\n                required={requireds}\n                type=\"text\"\n                value={values.document}\n              />\n              <InvalidFeedback error={error} loading={loading} name=\"document\" />\n            </FormGroup>\n\n            {discounts && discounts.map( d => (\n              <FormGroup key={d.id}>\n                <Label htmlFor={d.dsc_id}>{d.name}</Label>\n                <Input\n                  disabled={discounts.find(\n                    disc => (!['',undefined].includes(values[disc.dsc_id]) && disc.id != d.id)\n                  )}\n                  id={d.id}\n                  maxLength={5}\n                  name={d.dsc_id}\n                  onChange={handleDiscountChange}\n                  type=\"text\"\n                  style={values.discount_id == d.id ? {backgroundColor: 'rgb(206, 249, 206)'} : {}}\n                  value={values[d.dsc_id] || ''}\n                  readOnly={blockDiscountFields}\n                />\n                <div style={{float: 'right', paddingTop:'10px'}}>\n                  <Loading size=\"20\" color=\"white\" loadingState={values.discount_id == d.id  && blockDiscountFields}/>\n                </div>\n              </FormGroup>\n            ))}\n\n          </div>\n        </div>\n\n        {/* address */}\n        <div className=\"col-md-6\">\n          <Address\n            api={api}\n            error={error}\n            handleInputChange={handleInputChange}\n            loading={loading}\n            requireds={requireds}\n            setValues={setValues}\n            values={values}\n          />\n        </div>\n\n      </div>\n\n      {/* package selection */}\n      <Packages {...{\n        error: packages.error ? packages.error : null,\n        items: packages.items ? packages.items : null,\n        onChange: onPackageChange,\n        package_id: values.package_id,\n        validationError: ! loading && error && error.errors && error.errors.package_id,\n        discount_id: values.discount_id,\n        setBlockDiscountFields,\n      }} />\n\n      {/* payment */}\n      { values.package_id && values.package_id !== free_package_id && (\n        <Payment {...{\n          api,\n          cash_payment_method_id: values.cash_payment_method_id,\n          error,\n          isCardPayment,\n          isPayUReady,\n          loading,\n          onCashPaymentMethodChange,\n          onChange: onPaymentChange,\n          payment_method_id: values.payment_method_id,\n          POS,\n          requireds,\n          validationError: ! loading && error && error.errors && error.errors.payment_method_id,\n        }} />\n      ) }\n\n      {/* footer */}\n      <div className=\"row align-items-center\">\n\n        {/* terms */}\n        <div className=\"col-md-6 offset-md-4\">\n          <label className=\"terms\">\n            <input\n              checked={values.terms}\n              name=\"terms\"\n              onChange={handleInputChange}\n              required={requireds}\n              type=\"checkbox\"\n              value={`true`}\n            />\n            <span>He leÃ­do y acepto <Link href=\"/terminos-y-politicas\">\n                <a target=\"_blank\">el contrato</a>\n              </Link> de {CONFIG.appName}</span>\n          </label>\n          <InvalidFeedback error={error} loading={loading} name=\"terms\" />\n        </div>\n\n        {/* send btn */}\n        <div className=\"col-md-2 text-right\">\n          <Button block color=\"secondary\" disabled={loading} type=\"submit\">Enviar</Button>\n        </div>\n\n      </div>\n\n      <style jsx>{`\n        :global(.h3) {\n          font-size: 20px;\n          font-weight: bold;\n          margin-bottom: 10px;\n        }\n        hr,\n        .hr {\n          margin-top: 0;\n          margin-bottom: 15px;\n        }\n        .terms {\n          font-size: 18px;\n        }\n        .terms input {\n          margin-right: 5px;\n        }\n      `}</style>\n    </form>\n  )\n}\n\nconst InvalidFeedback = ({error, loading, name}) => {\n  return (\n    <>\n      { ! loading && error && error.errors && error.errors[name] && (\n        <div className=\"invalid-feedback\">{error.errors[name]}</div>\n      )}\n    </>\n  )\n}\n\nconst SelectFormGroup = ({ error, label, list, listMapValue = null, loading, name, onChange, pluralLabel, requireds, value }) => {\n  return (\n    <FormGroup>\n      <Label htmlFor={name}>{label}</Label>\n      <Select\n        id={name}\n        name={name}\n        onChange={onChange}\n        required={requireds}\n        value={value}\n      >\n        { ! list ? (\n          <option disabled value=\"\">Cargando...</option>\n        ) : list.length ? <>\n          <option disabled value=\"\">Selecciona tu {label.toLowerCase()}</option>\n          { list.map((item, key) => {\n            const value = listMapValue ? item[listMapValue] : item\n            const optionName = listMapValue ? item.name : item\n            return (\n              <option key={key} value={value}>{optionName}</option>\n            )\n          })}\n        </> : (\n          <option disabled value=\"\">Incapaz de cargar {pluralLabel}</option>\n        ) }\n      </Select>\n      <InvalidFeedback error={error} loading={loading} name={name} />\n    </FormGroup>\n  )\n}\n\nconst Address = ({\n  api,\n  error,\n  handleInputChange,\n  setValues,\n  loading,\n  requireds,\n  values,\n}) => {\n\n  const argCountryId = 11\n  const braCountryId = 32\n  const chlCountryId = 48\n\n  const { country_id: countryId, address_1st_level, city, address_3rd_level, address } = values\n\n  const [ countries, setCountries ] = useState()\n\n  useEffect( _ => {\n    (async _ => {\n      const { data } = await api.get('countries')\n      setCountries(data)\n    })()\n  }, [])\n\n  const handleCountryChange = e => {\n    const { name, value } = e.target\n    setValues({\n      ...values,\n      [name]: value,\n      address_1st_level: '',\n    })\n  }\n\n  const firstLevelLabel = countryId == argCountryId ? 'Provincia' :\n  countryId == braCountryId ? 'Estado' :\n  countryId == chlCountryId ? 'RegiÃ³n' :\n  'State'\n\n  const firstLevelPluralLabel = countryId == argCountryId ? 'Provincias' :\n  countryId == braCountryId ? 'Estados' :\n  countryId == chlCountryId ? 'Regiones' :\n  'States'\n\n  const [ firstLevelList, setFirstLevelList ] = useState()\n\n  useEffect(_ => {\n    (async _ => {\n      const parsedCountryId = parseInt(countryId)\n      const { data: addresses } = [argCountryId, braCountryId, chlCountryId].includes(parsedCountryId) ?\n        await api.get('address-1st-levels', {\n          params: {\n            country_id: countryId,\n          },\n        }) : { data: null }\n        setFirstLevelList(addresses)\n    })()\n  }, [countryId])\n\n  const cityLabel = countryId == braCountryId ? 'Cidade' :\n  countryId == chlCountryId ? 'Provincia' :\n  'Ciudad'\n\n  const thirdLevelLabel = countryId == chlCountryId ? 'Comuna' : 'District'\n\n  return (\n    <div className=\"address\">\n      <h3 className=\"h3\">UbicaciÃ³n</h3>\n\n      {/* country */}\n      <SelectFormGroup\n        error={error}\n        label=\"PaÃ­s\"\n        loading={loading}\n        list={countries}\n        listMapValue=\"id\"\n        name=\"country_id\"\n        onChange={handleCountryChange}\n        pluralLabel=\"PaÃ­ses\"\n        requireds={requireds}\n        value={countryId}\n      />\n\n      {/* 1st level */}\n      {[argCountryId, braCountryId, chlCountryId].map(id => id+'').includes(countryId) && (\n        <SelectFormGroup\n          error={error}\n          label={firstLevelLabel}\n          loading={loading}\n          list={firstLevelList}\n          listMapValue=\"id\"\n          name=\"address_1st_level\"\n          onChange={handleInputChange}\n          pluralLabel={firstLevelPluralLabel}\n          requireds={requireds}\n          value={address_1st_level}\n        />\n      )}\n\n      {/* city */}\n      {[braCountryId, chlCountryId].map(id => id+'').includes(countryId) && (\n        <FormGroup>\n          <Label htmlFor=\"city\">{cityLabel}</Label>\n          <Input\n            id=\"city\"\n            name=\"city\"\n            onChange={handleInputChange}\n            required={requireds}\n            type=\"text\"\n            value={city}\n          />\n          <InvalidFeedback error={error} loading={loading} name=\"city\" />\n        </FormGroup>\n      )}\n\n      {/* 3rd level */}\n      {[chlCountryId].map(id => id+'').includes(countryId) && (\n        <FormGroup>\n          <Label htmlFor=\"address_3rd_level\">{thirdLevelLabel}</Label>\n          <Input\n            id=\"address_3rd_level\"\n            name=\"address_3rd_level\"\n            onChange={handleInputChange}\n            required={requireds}\n            type=\"text\"\n            value={address_3rd_level}\n          />\n          <InvalidFeedback error={error} loading={loading} name=\"address_3rd_level\" />\n        </FormGroup>\n      )}\n\n      <FormGroup>\n        <Label htmlFor=\"address\">DirecciÃ³n</Label>\n        <Input\n          id=\"address\"\n          name=\"address\"\n          onChange={handleInputChange}\n          required={requireds}\n          type=\"text\"\n          value={address}\n        />\n        <InvalidFeedback error={error} loading={loading} name=\"address\" />\n      </FormGroup>\n\n    </div>\n  )\n}\n\nconst Payment = ({\n  api,\n  cash_payment_method_id,\n  error,\n  isCardPayment,\n  isPayUReady,\n  loading,\n  onCashPaymentMethodChange,\n  onChange,\n  payment_method_id,\n  POS,\n  requireds,\n  validationError\n}) => {\n\n  // payment methods\n  const [ paymentMethods, setPaymentMethods ] = useState()\n\n  // get payment methods\n  useEffect( _ => {\n    const getPaymentMethods = async _ => {\n      const { data } = await api.get('payment-methods')\n      setPaymentMethods(data)\n    }\n    getPaymentMethods()\n  }, [])\n\n  // init card secure fields\n  useEffect(_ => {\n    if (isPayUReady && isCardPayment) {\n      POS.initSecureFields('card-secure-fields')\n    }\n  }, [isPayUReady, isCardPayment])\n\n  // cash payment methods\n  const [ cashPaymentMethods, setCashPaymentMethods ] = useState()\n\n  // get cash payment methods\n  useEffect( _ => {\n    const getCashPaymentMethods = async _ => {\n      const { data } = await api.get('cash-payment-methods')\n      setCashPaymentMethods(data)\n    }\n    getCashPaymentMethods()\n  }, [])\n\n\n  return (\n    <div className=\"row\">\n      <div className=\"offset-md-2 col-md-8\">\n\n        <h3 className=\"h3\">Pago</h3>\n\n        <div className=\"row\">\n\n            <div className=\"col-md-6\">\n              <FormGroup>\n                { paymentMethods && paymentMethods.map((paymentMethod, key) => (\n                  <InputRadio\n                    key={key}\n                    label={paymentMethod.name}\n                    name=\"payment\"\n                    onChange={onChange}\n                    state={payment_method_id}\n                    value={paymentMethod.id}\n                  />\n                )) }\n                { validationError && (\n                  <div className=\"invalid-feedback\">{validationError}</div>\n                ) }\n              </FormGroup>\n            </div>\n\n            <div className=\"col-md-6\">\n\n              {/* credit / debit card */}\n              {isCardPayment ? (\n                <div className=\"card-inputs\">\n\n                  {/* mandatory data */}\n                  <FormGroup>\n                    <Label htmlFor=\"cardholder-name\">Nombre impreso en tarjeta</Label>\n                    <Input id=\"cardholder-name\" name=\"cardholder-name\" required={requireds} type=\"text\" />\n                  </FormGroup>\n\n                  {/* card fields */}\n                  <FormGroup>\n                    <div id=\"card-secure-fields\" />\n                    <InvalidFeedback error={error} loading={loading} name=\"payment_os\" />\n                  </FormGroup>\n\n                  {/* <FormGroup>\n                    <Label htmlFor=\"creditCardName\">Nombre impreso</Label>\n                    <Input id=\"creditCardName\" name=\"creditCardName\" required={requireds} type=\"text\" />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label htmlFor=\"creditCardNumber\">Numero</Label>\n                    <Input id=\"creditCardNumber\" name=\"creditCardNumber\" required={requireds} type=\"text\" />\n                  </FormGroup>\n                  <div className=\"row\">\n                    <div className=\"col-6\">\n                      <FormGroup>\n                        <Label htmlFor=\"creditCardDate\">Validez</Label>\n                        <Input id=\"creditCardDate\" name=\"creditCardDate\" required={requireds} type=\"text\" />\n                      </FormGroup>\n                    </div>\n                    <div className=\"col-6\">\n                      <FormGroup>\n                        <Label htmlFor=\"creditCardCode\">\n                          <abbr title=\"CÃ³digo de seguridad\">CVV</abbr>\n                        </Label>\n                        <Input id=\"creditCardCode\" name=\"creditCardCode\" required={requireds} type=\"text\" />\n                      </FormGroup>\n                    </div>\n                  </div> */}\n\n                </div>\n\n              // cash payment methods\n              ) : payment_method_id === 3 && (\n                <FormGroup>\n                  {cashPaymentMethods == null ? (\n                    <p>Cargando...</p>\n                  ) : cashPaymentMethods.length ? cashPaymentMethods.map((item, key) => (\n                    <InputRadio\n                      key={key}\n                      label={item.name}\n                      name=\"cash_payment_method_id\"\n                      onChange={onCashPaymentMethodChange}\n                      state={cash_payment_method_id}\n                      value={item.id}\n                    />\n                  )) : (\n                    <p>Sin mÃ©todo de pago configurado.</p>\n                  )}\n                  <InvalidFeedback error={error} loading={loading} name=\"cash_payment_method_id\" />\n                </FormGroup>\n              ) }\n              </div>\n          </div>\n\n      </div>\n      <style jsx>{`\n        @media (min-width: 768px) {\n          .card-inputs {\n            margin-top: -21px;\n          }\n        }\n      `}</style>\n    </div>\n  )\n}\n\n// Radio\nconst InputRadio = ({ label, name, onChange, state, value }) => {\n  const theme = useContext(ThemeContext)\n  const radioColor = theme.colors.background\n  return (\n    <label>\n      <input checked={state === value} type=\"radio\" {...{name, onChange, value}} />\n      <span className=\"fake-input\">\n        <span className=\"fake-radio\"></span>\n        <span>{label}</span>\n      </span>\n      <style jsx>{`\n        label {\n          display: block;\n          margin-bottom: 5px;\n          overflow: hidden;\n          position: relative;\n        }\n        input {\n          opacity: 0;\n          position: absolute;\n        }\n        .fake-input {\n          border: 2px solid var(--primary);\n          border-radius: 4px;\n          display: block;\n          font-size: 1rem;\n          line-height: 1.4;\n          padding: .375rem .75rem;\n          transition: background-color .3s, border-color .3s, color .3s;\n        }\n        .fake-radio {\n          background-color: var(--white);\n          border: 1px solid var(--gray2);\n          border-radius: 50%;\n          display: inline-block;\n          height: 15px;\n          margin-right: 7.5px;\n          padding: 1px;\n          vertical-align: -2px;\n          width: 15px;\n        }\n        .fake-radio::before {\n          background-color: ${radioColor};\n          border-radius: 50%;\n          content: '';\n          display: block;\n          opacity: 0;\n          height: 100%;\n          transition: opacity .3s;\n          width: 100%;\n        }\n        input:checked + .fake-input {\n          background-color: var(--primary);\n          color: white;\n        }\n        input:checked + .fake-input .fake-radio::before {\n          opacity: 1;\n        }\n        {/* input:focus + .fake-input {\n          border-color: var(--white);\n        } */}\n      `}</style>\n    </label>\n  )\n}\n\n// getInitialProps\nCompleteRegisterPage.getInitialProps = async ctx => {\n\n  const {api, res, user} = ctx\n\n  // if user has already completed registry, redirect it\n  if (user.register_completed_at) {\n    let message = JSON.stringify({ info: \"Ya ha completado su registro.\" })\n    nookies.set(ctx, 'flash_message', message, { path: '/' })\n    if (res) {\n      res.redirect('/')\n      res.end()\n      return { }\n    } else {\n      Router.back()\n    }\n  }\n\n  // get packages\n  let packages\n  try {\n    const { data } = await api.get('packages')\n    packages = { items: data }\n  } catch(error) {\n    packages = { error }\n  }\n\n  // return\n  return { packages, user }\n}\n\n// export\nexport default withAuth(CompleteRegisterPage)\n"]},"metadata":{},"sourceType":"module"}