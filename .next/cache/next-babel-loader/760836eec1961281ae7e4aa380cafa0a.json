{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport classNames from 'classnames';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport React, { Children } from 'react';\nexport default ((_ref) => {\n  let {\n    as,\n    children\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"as\", \"children\"]);\n\n  const router = useRouter();\n  const child = Children.only(children);\n  const active = !as ? router.pathname === props.href : router.asPath === as;\n  const classes = classNames(child.props.className, {\n    active: active\n  });\n  return __jsx(Link, _extends({\n    as: as\n  }, props), React.cloneElement(child, {\n    active: `${active}`,\n    className: classes\n  }));\n});","map":{"version":3,"sources":["/Users/rafael/Projects/somosgad/dale/components/ActiveLink.js"],"names":["classNames","Link","useRouter","React","Children","as","children","props","router","child","only","active","pathname","href","asPath","classes","className","cloneElement"],"mappings":";;;;;;;;AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,gBAAe,UAAgC;AAAA,MAA/B;AAAEC,IAAAA,EAAF;AAAMC,IAAAA;AAAN,GAA+B;AAAA,MAAZC,KAAY;;AAC7C,QAAMC,MAAM,GAAGN,SAAS,EAAxB;AACA,QAAMO,KAAK,GAAGL,QAAQ,CAACM,IAAT,CAAcJ,QAAd,CAAd;AACA,QAAMK,MAAM,GAAG,CAAEN,EAAF,GAAOG,MAAM,CAACI,QAAP,KAAoBL,KAAK,CAACM,IAAjC,GAAwCL,MAAM,CAACM,MAAP,KAAkBT,EAAzE;AACA,QAAMU,OAAO,GAAGf,UAAU,CAACS,KAAK,CAACF,KAAN,CAAYS,SAAb,EAAwB;AAChDL,IAAAA,MAAM,EAAEA;AADwC,GAAxB,CAA1B;AAGA,SACE,MAAC,IAAD;AAAM,IAAA,EAAE,EAAEN;AAAV,KAAkBE,KAAlB,GACIJ,KAAK,CAACc,YAAN,CAAmBR,KAAnB,EAA0B;AAC1BE,IAAAA,MAAM,EAAG,GAAEA,MAAO,EADQ;AAE1BK,IAAAA,SAAS,EAAED;AAFe,GAA1B,CADJ,CADF;AAQD,CAfD","sourcesContent":["import classNames from 'classnames'\nimport Link from 'next/link'\nimport { useRouter } from 'next/router'\nimport React, { Children } from 'react'\n\nexport default ({ as, children, ...props }) => {\n  const router = useRouter()\n  const child = Children.only(children)\n  const active = ! as ? router.pathname === props.href : router.asPath === as\n  const classes = classNames(child.props.className, {\n    active: active,\n  })\n  return (\n    <Link as={as} {...props}>\n      { React.cloneElement(child, {\n        active: `${active}`,\n        className: classes,\n      }) }\n    </Link>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}