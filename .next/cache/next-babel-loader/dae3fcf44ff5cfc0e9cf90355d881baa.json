{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport React, { useContext, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport Button from '../components/button';\nimport CarouselSection from '../components/carousel-section';\nimport Featured from '../components/featured';\nimport Layout from '../components/layout/Layout';\nimport Loading from '../components/Loading/Loading';\nimport MediaLink from '../components/MediaLink/MediaLink';\nimport WishlistBtn from '../components/wishlist-btn';\nimport UserContext from '../contexts/UserContext';\nimport { CONFIG } from '../config';\nimport api from '../services/api';\nimport withApi from '~/components/withApi';\nimport Color from 'color';\nimport { TENANT } from \"~/constants/constants\";\n\nconst HomePage = ({\n  api,\n  contents,\n  featuredMedia,\n  featuredMediaError,\n  media,\n  layoutProps\n}) => {\n  const {\n    user\n  } = useContext(UserContext);\n  const {\n    appName: pageTitle\n  } = CONFIG;\n  let {\n    0: idx,\n    1: setIdx\n  } = useState(0);\n  return __jsx(Layout, _extends({\n    paddingTop: false\n  }, layoutProps, {\n    media: featuredMedia\n  }), __jsx(Head, null, __jsx(\"title\", {\n    className: \"jsx-3460397740\"\n  }, pageTitle), __jsx(\"link\", {\n    rel: \"apple-touch-icon\",\n    sizes: \"180x180\",\n    href: `/static/${TENANT}/favicon/apple-touch-icon.png`,\n    className: \"jsx-3460397740\"\n  }), __jsx(\"link\", {\n    rel: \"icon\",\n    type: \"image/png\",\n    sizes: \"32x32\",\n    href: `/static/${TENANT}/favicon/favicon-32x32.png`,\n    className: \"jsx-3460397740\"\n  }), __jsx(\"link\", {\n    rel: \"icon\",\n    type: \"image/png\",\n    sizes: \"16x16\",\n    href: `/static/${TENANT}/favicon/favicon-16x16.png`,\n    className: \"jsx-3460397740\"\n  }), __jsx(\"link\", {\n    rel: \"manifest\",\n    href: `/static/${TENANT}/favicon/site.webmanifest`,\n    className: \"jsx-3460397740\"\n  }), __jsx(\"link\", {\n    rel: \"mask-icon\",\n    href: `/static/${TENANT}/favicon/safari-pinned-tab.svg`,\n    color: \"#5bbad5\",\n    className: \"jsx-3460397740\"\n  }), __jsx(\"meta\", {\n    name: \"msapplication-TileColor\",\n    content: \"#da532c\",\n    className: \"jsx-3460397740\"\n  }), __jsx(\"meta\", {\n    name: \"theme-color\",\n    content: \"#ffffff\",\n    className: \"jsx-3460397740\"\n  })), __jsx(\"div\", {\n    className: \"jsx-3460397740\" + \" \" + \"index\"\n  }, __jsx(Cover, {\n    error: featuredMediaError,\n    media: featuredMedia\n  }), __jsx(\"div\", {\n    className: \"jsx-3460397740\" + \" \" + \"index__contents\"\n  }, contents && contents.map((item, index) => {\n    const showBanner = item.is_paid && user || !item.is_paid && !user;\n    const {\n      contentable_type: contentableType\n    } = item;\n\n    switch (contentableType) {\n      case 'categories':\n        return __jsx(HomeCarouselSection, {\n          api: api,\n          category: item.slug,\n          key: index,\n          idx: index\n        });\n\n      case 'banners':\n        return showBanner && __jsx(BannerSection, {\n          id: item.contentable_id,\n          key: index\n        });\n\n      case 'movies':\n        return showBanner && __jsx(BannerSection, {\n          movie: item.slug,\n          key: index\n        });\n    }\n  }))), __jsx(_JSXStyle, {\n    id: \"3460397740\"\n  }, \".index.jsx-3460397740{margin-bottom:75px;}.index__contents.jsx-3460397740{position:relative;z-index:2;}.home-carousel-section.jsx-3460397740:first-child{padding:3.5em 0;}@media (min-width:768px){.index.jsx-3460397740{margin-bottom:30px;}}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/rafael/Projects/somosgad/dale/pages/index.js */\"));\n};\n\nHomePage.getInitialProps = async ctx => {\n  const {\n    api\n  } = ctx;\n  const {\n    data: homePage\n  } = await api.get('pages/home');\n\n  try {\n    const [firstContent, ...contents] = homePage.contents;\n    const {\n      data: {\n        movie: featuredMedia\n      }\n    } = await api.get('movie/' + firstContent.slug + '?for=home-cover');\n    return {\n      contents,\n      featuredMedia\n    };\n  } catch (error) {\n    const [...contents] = homePage.contents;\n    return {\n      contents,\n      featuredMediaError: error\n    };\n  }\n};\n\nexport default withApi(HomePage);\nconst CoverImgContent = styled.div.withConfig({\n  displayName: \"pages__CoverImgContent\",\n  componentId: \"zvtr18-0\"\n})([\"background-image:url('\", \"');background-position:50% 0,50% 0,75% 0;background-repeat:no-repeat,no-repeat,no-repeat;background-size:cover,cover,cover;&::before{content:'';display:block;padding-bottom:112.5%;}@media (min-width:768px){background-image:linear-gradient(to bottom,\", \" 80%,\", \" 100%),radial-gradient(circle at 67.5% 57.5%,\", \" 25%,\", \" 42.5%),url('\", \"');background-position:50% 0,50% 0,40% 50%;&::before{padding-bottom:80%;}}@media (min-width:1200px){background-position:50% 0,50% 0,75% 50%;&::before{padding-bottom:48%;}}\"], props => props.posterUrl, props => Color(props.theme.colors.background).fade(1).string(), props => props.theme.colors.background, props => Color(props.theme.colors.background).fade(1).string(), props => Color(props.theme.colors.background).fade(.075).string(), props => props.posterUrl);\n\nconst Cover = ({\n  error,\n  media\n}) => {\n  if (error) {\n    return __jsx(\"p\", null, \"No se puede cargar contenido destacado\");\n  }\n\n  const {\n    user\n  } = useContext(UserContext);\n  const {\n    description,\n    logo,\n    poster_url\n  } = media || {};\n  const {\n    height,\n    url: {\n      default: fallback,\n      png,\n      webp\n    } = {},\n    width\n  } = logo || {};\n  const empezaYa = CONFIG.lang === 'es-CL' ? '¡Vívelo ahora!' : '¡Empieza Ya!';\n  return __jsx(Link, {\n    href: media && media.video_file ? `/media/${media.slug}/watch` : '/'\n  }, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1807027609\", [logo ? height * 100 / width + '%' : 0]]]) + \" \" + \"cover container-fluid\"\n  }, poster_url && __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1807027609\", [logo ? height * 100 / width + '%' : 0]]]) + \" \" + \"cover__img row\"\n  }, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1807027609\", [logo ? height * 100 / width + '%' : 0]]]) + \" \" + \"col p-0\"\n  }, __jsx(CoverImgContent, {\n    posterUrl: poster_url\n  }, __jsx(\"img\", {\n    alt: \"\",\n    src: poster_url,\n    className: _JSXStyle.dynamic([[\"1807027609\", [logo ? height * 100 / width + '%' : 0]]]) + \" \" + \"d-none\"\n  })))), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1807027609\", [logo ? height * 100 / width + '%' : 0]]]) + \" \" + \"cover__contents row\"\n  }, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1807027609\", [logo ? height * 100 / width + '%' : 0]]]) + \" \" + \"col-12 col-md-4 offset-md-1\"\n  }, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1807027609\", [logo ? height * 100 / width + '%' : 0]]]) + \" \" + \"cover__infos\"\n  }, logo && __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1807027609\", [logo ? height * 100 / width + '%' : 0]]]) + \" \" + \"row\"\n  }, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1807027609\", [logo ? height * 100 / width + '%' : 0]]]) + \" \" + \"col-8 offset-2 col-md-12 offset-md-0\"\n  }, __jsx(\"h1\", {\n    className: _JSXStyle.dynamic([[\"1807027609\", [logo ? height * 100 / width + '%' : 0]]]) + \" \" + \"cover__logo\"\n  }, __jsx(\"picture\", {\n    className: _JSXStyle.dynamic([[\"1807027609\", [logo ? height * 100 / width + '%' : 0]]])\n  }, __jsx(\"source\", {\n    srcSet: webp,\n    type: \"media/webp\",\n    className: _JSXStyle.dynamic([[\"1807027609\", [logo ? height * 100 / width + '%' : 0]]])\n  }), __jsx(\"source\", {\n    srcSet: png,\n    type: \"media/png\",\n    className: _JSXStyle.dynamic([[\"1807027609\", [logo ? height * 100 / width + '%' : 0]]])\n  }), __jsx(\"img\", {\n    height: height,\n    src: fallback,\n    width: width,\n    className: _JSXStyle.dynamic([[\"1807027609\", [logo ? height * 100 / width + '%' : 0]]]) + \" \" + \"img-fluid\"\n  }))))), description && __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1807027609\", [logo ? height * 100 / width + '%' : 0]]]) + \" \" + \"row cover__description\"\n  }, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1807027609\", [logo ? height * 100 / width + '%' : 0]]]) + \" \" + \"col-10 offset-1 col-md-12 offset-md-0\"\n  }, __jsx(\"p\", {\n    className: _JSXStyle.dynamic([[\"1807027609\", [logo ? height * 100 / width + '%' : 0]]]) + \" \" + \"mb-0\"\n  }, description)))), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1807027609\", [logo ? height * 100 / width + '%' : 0]]]) + \" \" + \"row justify-content-center gutter-15\"\n  }, !user ? __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1807027609\", [logo ? height * 100 / width + '%' : 0]]]) + \" \" + \"col-auto\"\n  }, __jsx(Link, {\n    href: \"/signup\",\n    passHref: true\n  }, __jsx(Button, null, empezaYa))) : __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1807027609\", [logo ? height * 100 / width + '%' : 0]]]) + \" \" + \"col-auto\"\n  }, __jsx(MediaLink, _extends({\n    media\n  }, {\n    passHref: true\n  }), __jsx(Button, null, \"Mira\"))), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1807027609\", [logo ? height * 100 / width + '%' : 0]]]) + \" \" + \"col-auto\"\n  }, __jsx(WishlistBtn, {\n    movieId: media.id\n  })))))), __jsx(_JSXStyle, {\n    id: \"1807027609\",\n    dynamic: [logo ? height * 100 / width + '%' : 0]\n  }, `.cover.__jsx-style-dynamic-selector{font-size:12px;line-height:1.4;margin-bottom:15px;overflow:hidden;padding-bottom:15px;position:relative;text-align:center;z-index:1;}.cover__img.__jsx-style-dynamic-selector{margin-bottom:-90px;}.cover__infos.__jsx-style-dynamic-selector{margin-bottom:15px;}.cover__logo.__jsx-style-dynamic-selector{margin-top:0;margin-bottom:15px;position:relative;}.cover__logo.__jsx-style-dynamic-selector::before{content:'';display:block;padding-bottom:${logo ? height * 100 / width + '%' : 0};}.cover__logo.__jsx-style-dynamic-selector img.__jsx-style-dynamic-selector{left:0;position:absolute;top:0;}@media (min-width:768px){.cover.__jsx-style-dynamic-selector{font-size:16px;line-height:1.5;margin-bottom:-60px;text-align:left;}.cover__img.__jsx-style-dynamic-selector{margin-bottom:0;}.cover__contents.__jsx-style-dynamic-selector{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;height:100%;padding-top:var(--padding-top);padding-bottom:60px;position:absolute;width:100%;top:0;}.cover__infos.__jsx-style-dynamic-selector{margin-bottom:15px;}}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=/Users/rafael/Projects/somosgad/dale/pages/index.js */`)));\n};\n\nconst HomeCarouselSection = ({\n  api,\n  category: categorySlug,\n  idx\n}) => {\n  const {\n    0: category,\n    1: setCategory\n  } = useState(null);\n  const {\n    0: error,\n    1: setError\n  } = useState(false);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    lang\n  } = CONFIG;\n  useEffect(() => {\n    async function fetchData() {\n      setError(false);\n      setLoading(true);\n\n      try {\n        const {\n          data\n        } = await api.get(`category/${categorySlug}`);\n        console.log(data);\n        setCategory(data);\n      } catch (error) {\n        const errorMessage = ['es', 'es-CL'].includes(lang) ? 'Error al intentar cargar la categoría' : 'Error trying to load category';\n        setError(errorMessage);\n      }\n\n      setLoading(false);\n    }\n\n    fetchData();\n  }, [categorySlug]); // alert(key)\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"jsx-50689322\" + \" \" + \"home-carousel-section\"\n  }, loading ? __jsx(\"div\", {\n    className: \"jsx-50689322\" + \" \" + \"text-center\"\n  }, __jsx(Loading, {\n    loadingState: loading\n  })) : category ? __jsx(CarouselSection, {\n    category: category,\n    idx: idx\n  }) : error && __jsx(\"div\", {\n    className: \"jsx-50689322\" + \" \" + \"text-center\"\n  }, error)), __jsx(\"br\", {\n    className: \"jsx-50689322\"\n  }), __jsx(_JSXStyle, {\n    id: \"50689322\"\n  }, \"@media (min-width:768px){}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/rafael/Projects/somosgad/dale/pages/index.js */\"));\n};\n\nconst BannerSection = ({\n  id,\n  movie\n}) => {\n  const {\n    0: banner,\n    1: setBanner\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState();\n  useEffect(_ => {\n    async function fetchData() {\n      setLoading(true);\n\n      try {\n        const {\n          data\n        } = await (id ? api().get(`/banners/${id}`) : api().get(`/movie/${movie}`));\n        setBanner(data);\n      } catch (error) {\n        setError(true);\n      }\n\n      setLoading(false);\n    }\n\n    fetchData();\n  }, [id]);\n  return __jsx(\"div\", {\n    className: \"jsx-1694855813\"\n  }, __jsx(\"div\", {\n    className: \"jsx-1694855813\" + \" \" + \"section\"\n  }, __jsx(\"div\", {\n    className: \"jsx-1694855813\" + \" \" + \"text-center\"\n  }, __jsx(Loading, {\n    loadingState: loading\n  })), banner && id && __jsx(\"a\", {\n    href: banner.link,\n    target: \"_blank\",\n    className: \"jsx-1694855813\" + \" \" + \"sponsor-link\"\n  }, __jsx(Featured, {\n    img: banner.banner_url\n  })), banner && movie && __jsx(MediaLink, {\n    media: banner.movie,\n    passHref: true\n  }, __jsx(\"a\", {\n    className: \"jsx-1694855813\"\n  }, __jsx(Featured, {\n    className: \"gradient\",\n    img: banner.movie.poster_url\n  }))), error && __jsx(\"div\", {\n    className: \"jsx-1694855813\" + \" \" + \"text-center\"\n  }, \"Error\")), __jsx(_JSXStyle, {\n    id: \"1694855813\"\n  }, \".sponsor-link.jsx-1694855813{color:white !important;-webkit-text-decoration:none;text-decoration:none;}.sponsor-link.jsx-1694855813:hover{color:white !important;-webkit-text-decoration:none;text-decoration:none;}a.jsx-1694855813:not([href]):not([tabindex]):hover{color:white !important;-webkit-text-decoration:none;text-decoration:none;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/rafael/Projects/somosgad/dale/pages/index.js */\"));\n};","map":{"version":3,"sources":["/Users/rafael/Projects/somosgad/dale/pages/index.js"],"names":["Head","Link","React","useContext","useEffect","useState","styled","Button","CarouselSection","Featured","Layout","Loading","MediaLink","WishlistBtn","UserContext","CONFIG","api","withApi","Color","TENANT","HomePage","contents","featuredMedia","featuredMediaError","media","layoutProps","user","appName","pageTitle","idx","setIdx","map","item","index","showBanner","is_paid","contentable_type","contentableType","slug","contentable_id","getInitialProps","ctx","data","homePage","get","firstContent","movie","error","CoverImgContent","div","props","posterUrl","theme","colors","background","fade","string","Cover","description","logo","poster_url","height","url","default","fallback","png","webp","width","empezaYa","lang","video_file","id","HomeCarouselSection","category","categorySlug","setCategory","setError","loading","setLoading","fetchData","console","log","errorMessage","includes","BannerSection","banner","setBanner","_","link","banner_url"],"mappings":"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","sourcesContent":["import Head from 'next/head'\nimport Link from 'next/link'\nimport React, { useContext, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport Button from '../components/button'\nimport CarouselSection from '../components/carousel-section'\nimport Featured from '../components/featured'\nimport Layout from '../components/layout/Layout'\nimport Loading from '../components/Loading/Loading'\nimport MediaLink from '../components/MediaLink/MediaLink'\nimport WishlistBtn from '../components/wishlist-btn'\nimport UserContext from '../contexts/UserContext'\nimport { CONFIG } from '../config'\nimport api from '../services/api'\nimport withApi from '~/components/withApi'\nimport Color from 'color'\nimport { TENANT } from \"~/constants/constants\";\n\nconst HomePage = ({ api, contents, featuredMedia, featuredMediaError, media, layoutProps }) => {\n  const { user } = useContext(UserContext)\n  const { appName: pageTitle } = CONFIG\n  let [idx, setIdx] = useState(0)\n  return (\n    <Layout paddingTop={false} {...layoutProps} media={featuredMedia}>\n      <Head>\n        <title>{pageTitle}</title>\n        <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={`/static/${TENANT}/favicon/apple-touch-icon.png`} />\n        <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={`/static/${TENANT}/favicon/favicon-32x32.png`} />\n        <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={`/static/${TENANT}/favicon/favicon-16x16.png`} />\n        <link rel=\"manifest\" href={`/static/${TENANT}/favicon/site.webmanifest`} />\n        <link rel=\"mask-icon\" href={`/static/${TENANT}/favicon/safari-pinned-tab.svg`} color=\"#5bbad5\" />\n        <meta name=\"msapplication-TileColor\" content=\"#da532c\" />\n        <meta name=\"theme-color\" content=\"#ffffff\" />\n      </Head>\n      <div className=\"index\">\n\n        {/* cover */}\n        <Cover error={featuredMediaError} media={featuredMedia} />\n        {/* <Cover media={featuredMedia} /> */}\n\n        {/* contents */}\n        <div className=\"index__contents\">\n          {contents && contents.map((item, index) => {\n            const showBanner = (item.is_paid && user || !item.is_paid && !user)\n            const { contentable_type: contentableType } = item\n            switch (contentableType) {\n              case 'categories':\n                return <HomeCarouselSection api={api} category={item.slug} key={index} idx={index} />\n              case 'banners':\n                return showBanner && <BannerSection id={item.contentable_id} key={index} />\n              case 'movies':\n                return showBanner && <BannerSection movie={item.slug} key={index} />\n            }\n          })}\n        </div>\n\n      </div>\n      <style jsx>{`\n        .index {\n          margin-bottom: 75px;\n        }\n        .index__contents {\n          position: relative;\n          z-index: 2;\n        }\n\n        .home-carousel-section:first-child {\n          padding: 3.5em 0;\n        }\n        @media (min-width: 768px) {\n          .index {\n            margin-bottom: 30px;\n          }\n        }\n      ` }</style>\n    </Layout>\n  )\n}\n\nHomePage.getInitialProps = async ctx => {\n  const { api } = ctx\n  const { data: homePage } = await api.get('pages/home');\n\n  try {\n    const [firstContent, ...contents] = homePage.contents\n    const { data: { movie: featuredMedia } } = await api.get('movie/' + firstContent.slug + '?for=home-cover')\n    return { contents, featuredMedia }\n  } catch (error) {\n    const [...contents] = homePage.contents;\n    return { contents, featuredMediaError: error };\n  }\n}\n\nexport default withApi(HomePage)\n\nconst CoverImgContent = styled.div`\n  background-image:\n    url('${props => props.posterUrl}');\n  background-position: 50% 0, 50% 0, 75% 0;\n  background-repeat: no-repeat, no-repeat, no-repeat;\n  background-size: cover, cover, cover;\n  &::before {\n    content: '';\n    display: block;\n    padding-bottom: 112.5%;\n  }\n  @media (min-width: 768px) {\n    background-image:\n      linear-gradient(to bottom, ${props => Color(props.theme.colors.background).fade(1).string()} 80%, ${props => props.theme.colors.background} 100%),\n      radial-gradient(circle at 67.5% 57.5%, ${props => Color(props.theme.colors.background).fade(1).string()} 25%, ${props => Color(props.theme.colors.background).fade(.075).string()} 42.5%),\n      url('${props => props.posterUrl}');\n    background-position: 50% 0, 50% 0, 40% 50%;\n    &::before {\n      padding-bottom: 80%;\n    }\n  }\n  @media (min-width: 1200px) {\n    background-position: 50% 0, 50% 0, 75% 50%;\n    &::before {\n      padding-bottom: 48%;\n    }\n  }\n`\n\nconst Cover = ({ error, media }) => {\n\n  if (error) {\n    return (\n      <p>No se puede cargar contenido destacado</p>\n    )\n  }\n  const { user } = useContext(UserContext)\n  const { description, logo, poster_url } = media || {}\n  const {\n    height,\n    url: { default: fallback, png, webp } = {},\n    width,\n  } = logo || {}\n  const empezaYa = CONFIG.lang === 'es-CL' ? '¡Vívelo ahora!' : '¡Empieza Ya!'\n  return (\n\n    <Link href={media && media.video_file ? `/media/${media.slug}/watch` : '/'} >\n\n\n      <div className=\"cover container-fluid\">\n\n        {/* poster backaground banner image */}\n\n        {poster_url && (\n          <div className=\"cover__img row\">\n            <div className=\"col p-0\">\n\n              <CoverImgContent posterUrl={poster_url}>\n\n                <img alt=\"\" className=\"d-none\" src={poster_url} />\n\n\n              </CoverImgContent>\n\n\n            </div>\n          </div>\n        )\n        }\n\n\n        <div className=\"cover__contents row\">\n          <div className=\"col-12 col-md-4 offset-md-1\">\n            <div className=\"cover__infos\">\n\n              {/* logo overlay image */}\n              {logo && (\n                <div className=\"row\">\n                  <div className=\"col-8 offset-2 col-md-12 offset-md-0\">\n                    <h1 className=\"cover__logo\">\n                      <picture>\n                        <source srcSet={webp} type=\"media/webp\" />\n                        <source srcSet={png} type=\"media/png\" />\n                        <img className=\"img-fluid\" height={height} src={fallback} width={width} />\n                      </picture>\n                    </h1>\n                  </div>\n                </div>\n              )}\n\n              {/* content's description */}\n              {description && (\n                <div className=\"row cover__description\">\n                  <div className=\"col-10 offset-1 col-md-12 offset-md-0\">\n                    <p className=\"mb-0\">{description}</p>\n                  </div>\n                </div>\n              )}\n\n            </div>\n\n            {/* cta buttons */}\n            <div className=\"row justify-content-center gutter-15\">\n              {!user ? (\n                <div className=\"col-auto\">\n                  <Link href=\"/signup\" passHref>\n                    <Button>{empezaYa}</Button>\n                  </Link>\n                </div>\n              ) : <>\n                  <div className=\"col-auto\">\n                    <MediaLink {...{ media }} passHref>\n                      <Button>Mira</Button>\n                    </MediaLink>\n                  </div>\n                  <div className=\"col-auto\">\n                    <WishlistBtn movieId={media.id} />\n                  </div>\n                </>}\n            </div>\n          </div>\n\n        </div>\n        {/* styles */}\n        <style jsx>{`\n        .cover {\n          font-size: 12px;\n          line-height: 1.4;\n          margin-bottom: 15px;\n          overflow: hidden;\n          padding-bottom: 15px;\n          position: relative;\n          text-align: center;\n          z-index: 1;\n        }\n        .cover__img {\n          margin-bottom: -90px;\n        }\n        .cover__infos {\n          margin-bottom: 15px;\n        }\n        .cover__logo {\n          margin-top: 0;\n          margin-bottom: 15px;\n          position: relative;\n        }\n        .cover__logo::before {\n          content: '';\n          display: block;\n          padding-bottom: ${ logo ? height * 100 / width + '%' : 0};\n        }\n        .cover__logo img {\n          left: 0;\n          position: absolute;\n          top: 0;\n        }\n        @media (min-width: 768px) {\n          .cover {\n            font-size: 16px;\n            line-height: 1.5;\n            margin-bottom: -60px;\n            text-align: left;\n          }\n          .cover__img {\n            margin-bottom: 0;\n          }\n          .cover__contents {\n            align-items: center;\n            height: 100%;\n            padding-top: var(--padding-top);\n            padding-bottom: 60px;\n            position: absolute;\n            width: 100%;\n            top: 0;\n          }\n          .cover__infos {\n            margin-bottom: 15px;\n          }\n        }\n      ` }</style>\n\n      </div >\n    </Link >\n  )\n}\n\nconst HomeCarouselSection = ({ api, category: categorySlug, idx }) => {\n\n  const [category, setCategory] = useState(null)\n  const [error, setError] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const { lang } = CONFIG\n\n  useEffect(() => {\n    async function fetchData() {\n      setError(false)\n      setLoading(true)\n      try {\n        const { data } = await api.get(`category/${categorySlug}`)\n        console.log(data);\n        setCategory(data)\n      } catch (error) {\n        const errorMessage = ['es', 'es-CL'].includes(lang) ? 'Error al intentar cargar la categoría'\n          : 'Error trying to load category'\n        setError(errorMessage)\n      }\n      setLoading(false)\n    }\n\n    fetchData()\n  }, [categorySlug])\n\n  // alert(key)\n  return (\n    <>\n      <div className=\"home-carousel-section\">\n        {loading ? (\n          <div className=\"text-center\">\n            <Loading loadingState={loading} />\n          </div>\n        ) : category ? (\n          <CarouselSection category={category} idx={idx} />\n        ) : error && (\n          <div className=\"text-center\">\n            {error}\n          </div>\n        )}\n      </div>\n      <br></br>\n      <style jsx>{`\n        .home-carousel-section {\n            //margin-bottom: 75px;\n            //margin-top: 75px;\n        }\n        @media (min-width: 768px) {\n          .home-carousel-section {\n            //margin-bottom: 55px;\n          }\n        }\n      ` }</style>\n    </>\n  )\n}\n\nconst BannerSection = ({ id, movie }) => {\n  const [banner, setBanner] = useState()\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState()\n\n  useEffect(_ => {\n    async function fetchData() {\n      setLoading(true)\n      try {\n        const { data } = await (id ? api().get(`/banners/${id}`) : api().get(`/movie/${movie}`))\n        setBanner(data)\n\n      } catch (error) {\n        setError(true)\n      }\n      setLoading(false)\n    }\n\n    fetchData()\n  }, [id])\n\n  return (\n    <div>\n      <div className=\"section\">\n\n        {/* loading */}\n        <div className=\"text-center\">\n          <Loading loadingState={loading} />\n        </div>\n\n        {/* features */}\n        {banner && id &&\n          <a className=\"sponsor-link\" href={banner.link} target=\"_blank\">\n            <Featured img={banner.banner_url} />\n          </a>\n        }\n\n        {banner && movie &&\n          <MediaLink media={banner.movie} passHref>\n            <a>\n              <Featured\n                className=\"gradient\"\n                img={banner.movie.poster_url}\n              />\n            </a>\n          </MediaLink>\n        }\n\n        {/* error */}\n        {error && (\n          <div className=\"text-center\">Error</div>\n        )}\n\n      </div>\n      <style jsx>{`\n        .sponsor-link {\n          color: white !important;\n          text-decoration: none;\n        }\n        .sponsor-link:hover {\n          color: white !important;\n          text-decoration: none;\n        }\n        a:not([href]):not([tabindex]):hover {\n          color: white !important;\n          text-decoration: none;\n        }\n      ` }</style>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}