{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// next imports\nimport Head from 'next/head';\nimport Router, { useRouter } from 'next/router'; // react imports\n\nimport { useState } from 'react';\nimport { Form } from 'react-bootstrap'; // app imports\n\nimport Layout from '../../components/layout/Layout';\nimport { CONFIG } from '../../config';\nimport api from '../../services/api';\nimport Button from '../../components/button';\n\nconst ResetPassword = ({\n  layoutProps\n}) => {\n  const {\n    0: notice,\n    1: setNotice\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState(false);\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const {\n    0: passwordConfirmation,\n    1: setPasswordConfirmation\n  } = useState('');\n  const {\n    0: isLoading,\n    1: setLoading\n  } = useState(false);\n  const router = useRouter();\n  const apiurl = decodeURI(router.query.apiurl);\n  const resetURL = new URL(apiurl);\n  const {\n    0: email,\n    1: setEmail\n  } = useState(resetURL.searchParams.get('email'));\n  const {\n    0: token,\n    1: setToken\n  } = useState(resetURL.searchParams.get('token'));\n\n  const success = res => {\n    setError(false);\n    setNotice(res.data);\n    setTimeout(() => Router.push('/login'), 3000);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n\n    try {\n      const response = await api().post('/reset', {\n        token: token,\n        password: password,\n        password_confirmation: passwordConfirmation,\n        email: email\n      });\n      console.table(response);\n      success(response);\n      setLoading(false);\n    } catch (error) {\n      if (error.response) setError(error.response.data);\n      console.table(error);\n      setLoading(false);\n    }\n  };\n\n  return __jsx(Layout, layoutProps, __jsx(Head, null, __jsx(\"title\", {\n    className: \"jsx-1977283210\"\n  }, \"Restabelecer la contrase\\xF1a < \", CONFIG.appName)), __jsx(\"div\", {\n    className: \"jsx-1977283210\" + \" \" + \"container-fluid\"\n  }, __jsx(\"div\", {\n    className: \"jsx-1977283210\" + \" \" + \"row\"\n  }, __jsx(\"div\", {\n    className: \"jsx-1977283210\" + \" \" + \"col-md-10 offset-md-1\"\n  }, __jsx(\"h1\", {\n    className: \"jsx-1977283210\" + \" \" + \"h4\"\n  }, \"Restabelecer la contrase\\xF1a\"), __jsx(\"form\", {\n    method: \"post\",\n    onSubmit: handleSubmit,\n    className: \"jsx-1977283210\"\n  }, __jsx(Form.Group, null, notice && __jsx(\"div\", {\n    className: \"jsx-1977283210\" + \" \" + \"valid-feedback\"\n  }, notice.message), error && __jsx(\"div\", {\n    className: \"jsx-1977283210\" + \" \" + \"invalid-feedback\"\n  }, error.message), __jsx(Form.Control, {\n    id: \"email\",\n    type: \"email\",\n    placeholder: \"Correo electronico\",\n    onChange: e => setEmail(e.target.value),\n    value: email\n  }), error && error.errors && __jsx(\"div\", {\n    className: \"jsx-1977283210\" + \" \" + \"invalid-feedback\"\n  }, error.errors.email)), __jsx(Form.Group, null, __jsx(Form.Control, {\n    id: \"password_reset\",\n    type: \"password\",\n    placeholder: \"Nueva contrase\\xF1a\",\n    onChange: e => setPassword(e.target.value),\n    value: password\n  }), error && error.errors && __jsx(\"div\", {\n    className: \"jsx-1977283210\" + \" \" + \"invalid-feedback\"\n  }, error.errors.password[0])), __jsx(Form.Group, null, __jsx(Form.Control, {\n    id: \"password_confirmation\",\n    type: \"password\",\n    placeholder: \"Confirmar nueva contrase\\xF1a\",\n    onChange: e => setPasswordConfirmation(e.target.value),\n    value: passwordConfirmation\n  }), error && error.errors && __jsx(\"div\", {\n    className: \"jsx-1977283210\" + \" \" + \"invalid-feedback\"\n  }, error.errors.password[1])), __jsx(Form.Group, {\n    style: {\n      textAlign: '-webkit-center'\n    }\n  }, __jsx(Button, {\n    block: true,\n    style: {\n      minWidth: '145px',\n      maxWidth: '50%',\n      boxShadow: 'none'\n    },\n    className: \"enter-btn\",\n    size: \"sm\",\n    type: \"submit\",\n    disabled: isLoading\n  }, isLoading ? 'Loadingâ€¦' : 'Restabelecer')))))), __jsx(_JSXStyle, {\n    id: \"1977283210\"\n  }, [\"header.jsx-1977283210{padding-top:15px;}\", \".h2.jsx-1977283210{margin-bottom:30px;}\", \"@media (min-width:768px){header.jsx-1977283210{padding-top:30px;}}\", \".row.jsx-1977283210{padding:0 25%;}\"]));\n};\n\nexport default ResetPassword;","map":{"version":3,"sources":["/Users/rafael/Projects/somosgad/dale/pages/user/resetPassword.js"],"names":["Head","Router","useRouter","useState","Form","Layout","CONFIG","api","Button","ResetPassword","layoutProps","notice","setNotice","error","setError","password","setPassword","passwordConfirmation","setPasswordConfirmation","isLoading","setLoading","router","apiurl","decodeURI","query","resetURL","URL","email","setEmail","searchParams","get","token","setToken","success","res","data","setTimeout","push","handleSubmit","e","preventDefault","response","post","password_confirmation","console","table","appName","message","target","value","errors","textAlign","minWidth","maxWidth","boxShadow"],"mappings":"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","sourcesContent":["// next imports\nimport Head from 'next/head'\nimport Router, { useRouter } from 'next/router'\n\n// react imports\nimport { useState } from 'react'\nimport { Form } from 'react-bootstrap'\n\n// app imports\nimport Layout from '../../components/layout/Layout'\nimport { CONFIG } from '../../config'\nimport api from '../../services/api'\nimport Button from '../../components/button'\n\nconst ResetPassword = ({layoutProps}) => {\n\n  const [notice, setNotice] = useState(false)\n  const [error, setError] = useState(false)\n  const [password, setPassword] = useState('')\n  const [passwordConfirmation, setPasswordConfirmation] = useState('')\n  const [isLoading, setLoading] = useState(false)\n\n  const router = useRouter()\n  const apiurl = decodeURI(router.query.apiurl)\n  const resetURL = new URL(apiurl)\n  const [ email, setEmail ] = useState(resetURL.searchParams.get('email'))\n  const [ token, setToken ] = useState(resetURL.searchParams.get('token'))\n\n  const success = res => {\n    setError(false)\n    setNotice(res.data)\n    setTimeout(() => Router.push('/login'), 3000)\n  }\n\n  const handleSubmit = async e => {\n    e.preventDefault()\n    setLoading(true)\n\n    try {\n      const response = await api().post('/reset',{\n        token: token,\n        password: password,\n        password_confirmation: passwordConfirmation,\n        email: email\n      })\n\n      console.table(response)\n      success(response)\n      setLoading(false)\n    } catch (error) {\n      if(error.response)\n        setError(error.response.data)\n\n      console.table(error)\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Layout {...layoutProps}>\n      <Head>\n        <title>Restabelecer la contraseÃ±a &lt; {CONFIG.appName}</title>\n      </Head>\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-10 offset-md-1\">\n            <h1 className=\"h4\">Restabelecer la contraseÃ±a</h1>\n            <form method=\"post\" onSubmit={handleSubmit}>\n\n                {/* <Toast\n                  show={successMsg}\n                  onClose={toggleSuccessMsg}\n                  style={{position: 'absolute', top: '50%', right: '50%', backgroundColor: 'light-green' }}\n                >\n                  <Toast.Header></Toast.Header>\n                  <Toast.Body>\n                    {notice.message}\n                  </Toast.Body>\n                </Toast> */}\n\n              <Form.Group>\n                {notice && <div className=\"valid-feedback\">{notice.message}</div>}\n                {error && <div className=\"invalid-feedback\">{error.message}</div>}\n                <Form.Control id=\"email\" type=\"email\" placeholder=\"Correo electronico\"  onChange={e => setEmail(e.target.value)} value={email} />\n                {error && error.errors &&  (<div className=\"invalid-feedback\">{error.errors.email}</div>)}\n              </Form.Group>\n              <Form.Group>\n                <Form.Control id=\"password_reset\" type=\"password\" placeholder=\"Nueva contraseÃ±a\"  onChange={e => setPassword(e.target.value)} value={password} />\n                {error && error.errors &&  (<div className=\"invalid-feedback\">{error.errors.password[0]}</div>)}\n              </Form.Group>\n              <Form.Group>\n                <Form.Control id=\"password_confirmation\" type=\"password\" placeholder=\"Confirmar nueva contraseÃ±a\"  onChange={e => setPasswordConfirmation(e.target.value)} value={passwordConfirmation} />\n                {error && error.errors &&  (<div className=\"invalid-feedback\">{error.errors.password[1]}</div>)}\n              </Form.Group>\n              {/* <Form.Group style={{textAlign: 'center'}}>\n                <Button variant='danger' style={{backgroundColor:'#ff0000'}} size=\"lg\" type=\"submit\" disabled={isLoading}>{isLoading ? 'Loadingâ€¦' : 'Restabelecer'}</Button>\n              </Form.Group> */}\n              <Form.Group style={{textAlign: '-webkit-center'}}>\n                <Button block style={{minWidth: '145px', maxWidth: '50%', boxShadow: 'none'}} className=\"enter-btn\" size=\"sm\" type=\"submit\" disabled={isLoading}>{isLoading ? 'Loadingâ€¦' : 'Restabelecer'}</Button>\n              </Form.Group>\n            </form>\n          </div>\n        </div>\n      </div>\n      <style jsx>{`\n        header {\n          padding-top: 15px;\n        }\n        .h2 {\n          margin-bottom: 30px;\n        }\n        @media (min-width: 768px) {\n          header {\n            padding-top: 30px;\n          }\n        }\n        .row {\n          padding: 0 25%;\n        }\n      `}</style>\n    </Layout>\n  );\n}\n\nexport default ResetPassword\n"]},"metadata":{},"sourceType":"module"}