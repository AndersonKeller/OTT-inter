{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// import sleep from 'sleep-promise'\nimport React, { useContext, useEffect, useState } from 'react';\nimport withAuth from '~/components/withAuth';\nimport { IS_PRODUCTION } from \"~/constants/constants\";\nimport UserContext from \"~/contexts/UserContext\";\nimport Address from \"~/pages/register/wizard/partials/address\";\nimport Button from \"~/components/button\";\nimport { ThemeContext } from \"styled-components\";\nimport Color from \"color\";\nimport NameProject from '~/components/NameProject/index';\n\nconst UserAddressForm = ({\n  api,\n  layoutProps,\n  handleSubmit,\n  handleFormState,\n  formData,\n  setFormData\n}) => {\n  const formDataHasProperties = formData.hasOwnProperty(\"country_id\") && formData.hasOwnProperty(\"address_1st_level\") && formData.hasOwnProperty(\"city\") && formData.hasOwnProperty(\"address_3rd_level\") && formData.hasOwnProperty(\"address\");\n  const theme = useContext(ThemeContext);\n  const primaryColor = Color(theme.colors.primary).hsl().string();\n  const requireds = IS_PRODUCTION;\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    country_id: \"\",\n    address_1st_level: \"\",\n    city: \"\",\n    address_3rd_level: \"\",\n    address: \"\"\n  });\n  const {\n    user\n  } = useContext(UserContext);\n  const {\n    0: error,\n    1: setError\n  } = useState();\n  /* fill user form */\n\n  useEffect(_ => {\n    if (user) {\n      console.log(\"Primeiro useEffect (componentDidMount)\");\n      console.log(`\\n\\n user --  ${JSON.stringify(user)} \\n\\n`);\n      console.log(`\\n\\n formData before set ${JSON.stringify(formData)} \\n\\n`);\n\n      if (!formDataHasProperties) {\n        setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n          address: user.address ? user.address : \"\",\n          city: user.city ? user.city : \"\",\n          country_id: user.country_id ? user.country_id : \"\",\n          address_1st_level: user.address_1st_level_id,\n          address_3rd_level: user.address_3rd_level\n        }));\n      }\n\n      console.log(`\\n\\n formData after set ${JSON.stringify(formData)} \\n\\n`);\n    }\n  }, [user]);\n\n  const handleInputChange = e => {\n    const {\n      checked,\n      name,\n      value,\n      type\n    } = e.target; // setValues({\n    //   ...values,\n    //   [name]:\n    //     type === \"checkbox\"\n    //       ? checked\n    //         ? value === \"true\"\n    //           ? true\n    //           : value\n    //         : false\n    //       : value\n    // });\n\n    setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n      [name]: type === \"checkbox\" ? checked ? value === \"true\" ? true : value : false : value\n    }));\n  };\n\n  const submit = async e => {\n    e.preventDefault();\n    setLoading(true);\n\n    try {\n      let userData = {\n        country_id: formData.country_id,\n        address_1st_level: formData.address_1st_level,\n        city: formData.city,\n        address_3rd_level: formData.address_3rd_level,\n        address: formData.address,\n        email: user.email\n      }; // let userData;\n      // if (formDataHasProperties) {\n      //   userData = {\n      //     country_id: formData.country_id,\n      //     address_1st_level: formData.address_1st_level,\n      //     city: formData.city,\n      //     address_3rd_level: formData.address_3rd_level,\n      //     address: formData.address,\n      //     email: user.email\n      //   };\n      // } else {\n      //   userData = {\n      //     country_id: values.country_id,\n      //     address_1st_level: values.address_1st_level,\n      //     city: values.city,\n      //     address_3rd_level: values.address_3rd_level,\n      //     address: values.address,\n      //     email: user.email\n      //   };\n      // }\n\n      const res = await api.post(`register/complete-user-address`, userData); // setFormData({...values});\n      // setFormData({...formData});\n      // console.log(`\\n\\n formData ${JSON.stringify(formData)}`);\n\n      handleSubmit(2, userData);\n    } catch (error) {\n      if (error.response) {\n        const {\n          data,\n          status\n        } = error.response;\n\n        if (status === 422) {\n          setError(data);\n        }\n      } else if (error.request) {\n        setError(error);\n      } else {\n        setError(error);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return __jsx(\"form\", {\n    method: \"post\",\n    onSubmit: submit,\n    className: _JSXStyle.dynamic([[\"3417927360\", [primaryColor, primaryColor, primaryColor, primaryColor, primaryColor]]])\n  }, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"3417927360\", [primaryColor, primaryColor, primaryColor, primaryColor, primaryColor]]]) + \" \" + \"register-confirm container text-center responsive\"\n  }, __jsx(\"h2\", {\n    className: _JSXStyle.dynamic([[\"3417927360\", [primaryColor, primaryColor, primaryColor, primaryColor, primaryColor]]]) + \" \" + \"card-title text-center\"\n  }, __jsx(\"span\", {\n    className: _JSXStyle.dynamic([[\"3417927360\", [primaryColor, primaryColor, primaryColor, primaryColor, primaryColor]]]) + \" \" + \"text-primary\"\n  }, \"\\xA1\"), \"S\\xE9 parte de \", __jsx(NameProject, null), __jsx(\"span\", {\n    className: _JSXStyle.dynamic([[\"3417927360\", [primaryColor, primaryColor, primaryColor, primaryColor, primaryColor]]]) + \" \" + \"text-primary\"\n  }, \"!\")), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"3417927360\", [primaryColor, primaryColor, primaryColor, primaryColor, primaryColor]]]) + \" \" + \"card-subtitle d-inline-block\"\n  }, \"Con\\xE9ctate sin tener que salir de casa\"), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"3417927360\", [primaryColor, primaryColor, primaryColor, primaryColor, primaryColor]]]) + \" \" + \"row\"\n  }, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"3417927360\", [primaryColor, primaryColor, primaryColor, primaryColor, primaryColor]]]) + \" \" + \"col-md-6 aling-items\"\n  }, __jsx(Address, {\n    api: api,\n    error: error,\n    handleInputChange: handleInputChange,\n    loading: loading,\n    requireds: requireds,\n    setValues: setValues,\n    values: values,\n    formData: formData,\n    setFormData: setFormData\n  }))), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"3417927360\", [primaryColor, primaryColor, primaryColor, primaryColor, primaryColor]]]) + \" \" + \"row mt-3\"\n  }, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"3417927360\", [primaryColor, primaryColor, primaryColor, primaryColor, primaryColor]]]) + \" \" + \"col-md-12\"\n  }, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"3417927360\", [primaryColor, primaryColor, primaryColor, primaryColor, primaryColor]]]) + \" \" + \"text-center\"\n  }, __jsx(Button, {\n    color: \"primary\",\n    onClick: () => handleFormState(1)\n  }, \"Volver\"), __jsx(Button, {\n    color: \"secondary\",\n    type: \"submit\",\n    disabled: loading,\n    loading: loading,\n    style: {\n      marginLeft: \"20px\"\n    }\n  }, \"Siguiente\"))))), __jsx(_JSXStyle, {\n    id: \"3417927360\",\n    dynamic: [primaryColor, primaryColor, primaryColor, primaryColor, primaryColor]\n  }, [`.text-primary{color:${primaryColor} !important;}`, `strong.text-primary{color:${primaryColor} !important;}`, \"h2.card-title{font-weight:normal;color:#000;margin-bottom:1em;font-size:1.7em;}\", \"div.card-subtitle{font-size:1.1em;font-weight:500;margin-bottom:2.5em;max-width:380px;}\", `.text-primary{color:${primaryColor} !important;}`, \".register-confirm{color:#666666;}\", \"@media(min-width:765px){.aling-items{margin-left:25%;}}\", `@media(max-width:765px){.responsive{padding:0px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}.card-body{background-image:url()!important;}label{display:inline-block;margin-bottom:.5rem;text-align:center;}.justify-content-end{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center!important;-webkit-justify-content:center!important;-ms-flex-pack:center!important;justify-content:center!important;}form{padding:0px!important;}.row{display:-ms-flexbox;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;margin-right:0px;margin-left:0px;}.col-8{max-width:100%!important;}.text-primary{color:${primaryColor} !important;}}`, `.text-primary{color:${primaryColor} !important;}`]));\n};\n\nexport default withAuth(UserAddressForm, true);","map":{"version":3,"sources":["/Users/rafael/Projects/somosgad/dale/pages/register/wizard/user-address.js"],"names":["React","useContext","useEffect","useState","withAuth","IS_PRODUCTION","UserContext","Address","Button","ThemeContext","Color","NameProject","UserAddressForm","api","layoutProps","handleSubmit","handleFormState","formData","setFormData","formDataHasProperties","hasOwnProperty","theme","primaryColor","colors","primary","hsl","string","requireds","loading","setLoading","values","setValues","country_id","address_1st_level","city","address_3rd_level","address","user","error","setError","_","console","log","JSON","stringify","address_1st_level_id","handleInputChange","e","checked","name","value","type","target","submit","preventDefault","userData","email","res","post","response","data","status","request","marginLeft"],"mappings":"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","sourcesContent":["// import sleep from 'sleep-promise'\nimport React, { useContext, useEffect, useState } from 'react'\nimport withAuth from '~/components/withAuth'\nimport { IS_PRODUCTION } from \"~/constants/constants\";\nimport UserContext from \"~/contexts/UserContext\";\nimport Address from \"~/pages/register/wizard/partials/address\"\nimport Button from \"~/components/button\";\nimport { ThemeContext } from \"styled-components\";\nimport Color from \"color\";\nimport NameProject from '~/components/NameProject/index'\n\nconst UserAddressForm = ({\n  api,\n  layoutProps,\n  handleSubmit,\n  handleFormState,\n  formData,\n  setFormData\n}) => {\n\n  const formDataHasProperties = formData.hasOwnProperty(\"country_id\")\n    && formData.hasOwnProperty(\"address_1st_level\")\n    && formData.hasOwnProperty(\"city\")\n    && formData.hasOwnProperty(\"address_3rd_level\")\n    && formData.hasOwnProperty(\"address\");\n\n  const theme = useContext(ThemeContext);\n  const primaryColor = Color(theme.colors.primary)\n    .hsl()\n    .string();\n\n  const requireds = IS_PRODUCTION;\n\n  const [loading, setLoading] = useState(false);\n\n  const [values, setValues] = useState({\n    country_id: \"\",\n    address_1st_level: \"\",\n    city: \"\",\n    address_3rd_level: \"\",\n    address: \"\"\n  });\n\n  const { user } = useContext(UserContext);\n  const [error, setError] = useState();\n\n  /* fill user form */\n  useEffect(\n    _ => {\n      if (user) {\n        console.log(\"Primeiro useEffect (componentDidMount)\")\n\n        console.log(`\\n\\n user --  ${JSON.stringify(user)} \\n\\n`);\n\n        console.log(`\\n\\n formData before set ${JSON.stringify(formData)} \\n\\n`);\n\n        if (!formDataHasProperties) {\n          setFormData({\n            ...formData,\n            address: user.address ? user.address : \"\",\n            city: user.city ? user.city : \"\",\n            country_id: user.country_id ? user.country_id : \"\",\n            address_1st_level: user.address_1st_level_id,\n            address_3rd_level: user.address_3rd_level\n          });\n        }\n\n        console.log(`\\n\\n formData after set ${JSON.stringify(formData)} \\n\\n`);\n\n      }\n    },\n    [user]\n  );\n\n  const handleInputChange = e => {\n    const { checked, name, value, type } = e.target;\n    // setValues({\n    //   ...values,\n    //   [name]:\n    //     type === \"checkbox\"\n    //       ? checked\n    //         ? value === \"true\"\n    //           ? true\n    //           : value\n    //         : false\n    //       : value\n    // });\n\n    setFormData({\n      ...formData,\n      [name]:\n        type === \"checkbox\"\n          ? checked\n            ? value === \"true\"\n              ? true\n              : value\n            : false\n          : value\n    });\n  };\n\n  const submit = async e => {\n    e.preventDefault();\n\n    setLoading(true);\n\n    try {\n      let userData = {\n        country_id: formData.country_id,\n        address_1st_level: formData.address_1st_level,\n        city: formData.city,\n        address_3rd_level: formData.address_3rd_level,\n        address: formData.address,\n        email: user.email\n      };\n\n      // let userData;\n\n      // if (formDataHasProperties) {\n      //   userData = {\n      //     country_id: formData.country_id,\n      //     address_1st_level: formData.address_1st_level,\n      //     city: formData.city,\n      //     address_3rd_level: formData.address_3rd_level,\n      //     address: formData.address,\n      //     email: user.email\n      //   };\n      // } else {\n      //   userData = {\n      //     country_id: values.country_id,\n      //     address_1st_level: values.address_1st_level,\n      //     city: values.city,\n      //     address_3rd_level: values.address_3rd_level,\n      //     address: values.address,\n      //     email: user.email\n      //   };\n      // }\n\n      const res = await api.post(`register/complete-user-address`, userData);\n\n      // setFormData({...values});\n      // setFormData({...formData});\n\n      // console.log(`\\n\\n formData ${JSON.stringify(formData)}`);\n\n      handleSubmit(2, userData);\n    } catch (error) {\n      if (error.response) {\n        const { data, status } = error.response;\n        if (status === 422) {\n          setError(data);\n        }\n      } else if (error.request) {\n        setError(error);\n      } else {\n        setError(error);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <form method=\"post\" onSubmit={submit}>\n      <div className=\"register-confirm container text-center responsive\">\n        <h2 className=\"card-title text-center\">\n          <span className={\"text-primary\"}>¡</span>Sé parte de {<NameProject />}\n          <span className={\"text-primary\"}>!</span>\n        </h2>\n        <div className=\"card-subtitle d-inline-block\">\n          Conéctate sin tener que salir de casa\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-md-6 aling-items\">\n            <Address\n              api={api}\n              error={error}\n              handleInputChange={handleInputChange}\n              loading={loading}\n              requireds={requireds}\n              setValues={setValues}\n              values={values}\n              formData={formData}\n              setFormData={setFormData}\n            />\n          </div>\n        </div>\n        <div className=\"row mt-3\">\n          <div className=\"col-md-12\">\n            <div className=\"text-center\">\n              <Button color=\"primary\" onClick={() => handleFormState(1)}>\n                Volver\n              </Button>\n              <Button\n                color=\"secondary\"\n                type=\"submit\"\n                disabled={loading}\n                loading={loading}\n                style={{ marginLeft: \"20px\" }}\n              >\n                Siguiente\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <style jsx global={true}>{`\n\n        .text-primary {\n          color: ${primaryColor} !important;\n        }\n\n        strong.text-primary {\n           color: ${primaryColor} !important;\n        }\n\n\n        h2.card-title {\n          font-weight: normal;\n          color: #000;\n          margin-bottom: 1em;\n          font-size: 1.7em;\n        }\n        div.card-subtitle {\n          font-size: 1.1em;\n          font-weight: 500;\n          margin-bottom: 2.5em;\n          max-width: 380px;\n        }\n\n        .text-primary {\n          color: ${primaryColor} !important;\n        }\n\n        .register-confirm {\n          color: #666666;\n        }\n\n        @media(min-width:765px){\n          .aling-items {\n            margin-left: 25%;\n          }\n        }\n\n        @media(max-width: 765px) {\n          .responsive{\n            padding: 0px;\n            display: flex;\n            flex-wrap: wrap;\n            justify-content: center;\n          }\n\n          .card-body{\n            background-image: url()!important;\n          }\n\n          label {\n            display: inline-block;\n            margin-bottom: .5rem;\n            text-align: center;\n          }\n\n          .justify-content-end {\n            display:flex;\n            justify-content:center!important;\n          }\n\n          form{\n            padding: 0px!important;\n          }\n\n          .row {\n            display: -ms-flexbox;\n            display: flex;\n            -ms-flex-wrap: wrap;\n            margin-right: 0px;\n            margin-left: 0px;\n          }\n\n          .col-8 {\n            max-width: 100%!important;\n          }\n\n          .text-primary {\n            color: ${primaryColor} !important;\n          }\n        }\n\n      .text-primary {\n        color: ${primaryColor} !important;\n      }\n\n      `}</style>\n    </form>\n  );\n};\n\nexport default withAuth(UserAddressForm, true);\n"]},"metadata":{},"sourceType":"module"}