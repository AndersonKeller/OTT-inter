{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Color from 'color';\nimport Link from 'next/link';\nimport { useContext } from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { GoPerson } from 'react-icons/go';\nimport { IoMdAddCircle, IoIosHelpCircle } from 'react-icons/io';\nimport { RiLogoutBoxRLine } from 'react-icons/ri';\nimport ReactSVG from 'react-svg';\nimport { ThemeContext } from 'styled-components';\nimport UserContext from '~/contexts/UserContext';\nimport { AuthModalContext } from '~/contexts/AuthModalContext';\nimport * as gtag from '~/lib/gtag';\nimport Chevron from '../icons/chevron';\nimport { TENANT } from \"~/constants/constants\";\nexport default (() => {\n  const {\n    signOut,\n    user\n  } = useContext(UserContext);\n  const {\n    closeAuthModal,\n    openAuthModal\n  } = useContext(AuthModalContext);\n  const loggedMenu = [{\n    slug: 'add',\n    label: 'Mi Lista',\n    href: '/wishlist'\n  }, {\n    slug: 'user',\n    label: 'Mi Cuenta',\n    href: '/user/account'\n  }, // { slug: 'settings', label: 'ConfiguraciÃ³n', href: '/settings' },\n  {\n    slug: 'help',\n    label: 'Ayuda',\n    href: '/help'\n  }, // { slug: 'info', label: 'Soporte', href: '/soporte' },\n  {\n    slug: 'logout',\n    label: 'Salir',\n    href: '/logout',\n    onClick: logout\n  }];\n\n  function getUserName() {\n    const nameArray = user.name.split(' ');\n    const userName = nameArray.length > 1 ? `${nameArray[0]} ${nameArray[nameArray.length - 1]}` : nameArray.join('');\n    return userName;\n  }\n\n  function enter(e) {\n    e.preventDefault(); // this is just a test, we should change it later:\n\n    gtag.event({\n      action: 'submit_form',\n      category: 'Contact',\n      label: 'Message here'\n    });\n    openAuthModal();\n  }\n\n  function logout(e) {\n    e.preventDefault();\n    signOut();\n    closeAuthModal();\n  }\n\n  const theme = useContext(ThemeContext);\n  const backgroundColor1 = theme.colors.backgroundContrast2;\n  const backgroundColor2 = theme.colors.backgroundContrast;\n  const backgroundColor2Hover = Color(backgroundColor2).darken(.2).hsl().string();\n  const blackColor = Color(theme.colors.black);\n  const shadowColor = blackColor.fade(.7).hsl().string();\n  const lightColor = theme.colors.texts;\n  const whiteColor = theme.colors.white;\n  return __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"3193758049\", [lightColor, lightColor, whiteColor, whiteColor, shadowColor, backgroundColor1, whiteColor, backgroundColor2, lightColor, backgroundColor2Hover, whiteColor, backgroundColor2, shadowColor, whiteColor]]]) + \" \" + `user-select ${user ? 'logged' : ''}`\n  }, __jsx(Dropdown, {\n    alignRight: true,\n    drop: \"down\",\n    flip: undefined\n  }, __jsx(Dropdown.Toggle, {\n    id: \"dropdown-custom-user\"\n  }, __jsx(Avatar, {\n    image: user && user.cropped_image_url ? user.cropped_image_url : null\n  }), __jsx(Chevron, {\n    alt: \"\",\n    className: \"chevron d-none d-md-inline\",\n    dir: \"bottom\",\n    height: \"9\",\n    inline: true,\n    width: \"16\"\n  })), user ? __jsx(React.Fragment, null, __jsx(Dropdown.Menu, null, __jsx(Dropdown.Header, null, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"3193758049\", [lightColor, lightColor, whiteColor, whiteColor, shadowColor, backgroundColor1, whiteColor, backgroundColor2, lightColor, backgroundColor2Hover, whiteColor, backgroundColor2, shadowColor, whiteColor]]]) + \" \" + \"user-name\"\n  }, getUserName()), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"3193758049\", [lightColor, lightColor, whiteColor, whiteColor, shadowColor, backgroundColor1, whiteColor, backgroundColor2, lightColor, backgroundColor2Hover, whiteColor, backgroundColor2, shadowColor, whiteColor]]]) + \" \" + \"user-email\"\n  }, user.email)), loggedMenu.map(({\n    href,\n    label,\n    onClick,\n    slug\n  }, key) => __jsx(Link, {\n    href: href,\n    key: key,\n    passHref: true\n  }, __jsx(Dropdown.Item, {\n    className: \"dropdown-item-style3\",\n    onClick: onClick\n  }, __jsx(\"span\", {\n    className: _JSXStyle.dynamic([[\"3193758049\", [lightColor, lightColor, whiteColor, whiteColor, shadowColor, backgroundColor1, whiteColor, backgroundColor2, lightColor, backgroundColor2Hover, whiteColor, backgroundColor2, shadowColor, whiteColor]]]) + \" \" + \"icon\"\n  }, slug === 'add' ? __jsx(IoMdAddCircle, {\n    size: 24\n  }) : slug === 'help' ? __jsx(IoIosHelpCircle, {\n    size: 24\n  }) : slug === 'user' ? __jsx(GoPerson, {\n    size: 24\n  }) : slug === 'logout' ? __jsx(RiLogoutBoxRLine, {\n    size: 24\n  }) : __jsx(\"img\", {\n    src: `/static/icons/${slug}.svg`,\n    className: _JSXStyle.dynamic([[\"3193758049\", [lightColor, lightColor, whiteColor, whiteColor, shadowColor, backgroundColor1, whiteColor, backgroundColor2, lightColor, backgroundColor2Hover, whiteColor, backgroundColor2, shadowColor, whiteColor]]]) + \" \" + `img-fluid ${slug}`\n  })), __jsx(\"span\", {\n    className: _JSXStyle.dynamic([[\"3193758049\", [lightColor, lightColor, whiteColor, whiteColor, shadowColor, backgroundColor1, whiteColor, backgroundColor2, lightColor, backgroundColor2Hover, whiteColor, backgroundColor2, shadowColor, whiteColor]]])\n  }, label)))))) : __jsx(Dropdown.Menu, null, __jsx(Dropdown.Item, {\n    as: \"button\",\n    className: \"dropdown-item-style1\",\n    onClick: enter\n  }, \"Entrar\"), __jsx(Link, {\n    href: TENANT === 'lau' ? \"/subscriptor\" : \"/signup\"\n  }, __jsx(Dropdown.Item, {\n    className: \"dropdown-item-style2\",\n    href: \"/signup\"\n  }, \"Suscripci\\xF3n\")), __jsx(Dropdown.Divider, null), __jsx(Dropdown.Item, {\n    className: \"dropdown-item-style3\",\n    href: \"/help\"\n  }, __jsx(\"span\", {\n    className: _JSXStyle.dynamic([[\"3193758049\", [lightColor, lightColor, whiteColor, whiteColor, shadowColor, backgroundColor1, whiteColor, backgroundColor2, lightColor, backgroundColor2Hover, whiteColor, backgroundColor2, shadowColor, whiteColor]]]) + \" \" + \"icon\"\n  }, __jsx(IoIosHelpCircle, {\n    size: 24\n  })), __jsx(\"span\", {\n    className: _JSXStyle.dynamic([[\"3193758049\", [lightColor, lightColor, whiteColor, whiteColor, shadowColor, backgroundColor1, whiteColor, backgroundColor2, lightColor, backgroundColor2Hover, whiteColor, backgroundColor2, shadowColor, whiteColor]]])\n  }, \"Ayuda\")))), __jsx(_JSXStyle, {\n    id: \"3193758049\",\n    dynamic: [lightColor, lightColor, whiteColor, whiteColor, shadowColor, backgroundColor1, whiteColor, backgroundColor2, lightColor, backgroundColor2Hover, whiteColor, backgroundColor2, shadowColor, whiteColor]\n  }, [\".user-select.__jsx-style-dynamic-selector{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;position:relative;}\", \"@media (min-width:768px){.user-select.__jsx-style-dynamic-selector{margin-right:-15px;}}\", \".user-select.__jsx-style-dynamic-selector .dropdown-toggle{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-color:transparent !important;border:0;box-shadow:none !important;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;padding:5px;}\", \"@media (min-width:768px){.user-select.__jsx-style-dynamic-selector .dropdown-toggle{padding-right:15px;padding-left:15px;}}\", \".user-select.__jsx-style-dynamic-selector .dropdown-toggle::after{display:none;}\", `.user-select.__jsx-style-dynamic-selector .dropdown-toggle .avatar{background-color:${lightColor};}`, \".user-select.__jsx-style-dynamic-selector .dropdown-toggle .chevron{line-height:1;}\", `.user-select.__jsx-style-dynamic-selector .dropdown-toggle .chevron path{fill:${lightColor};-webkit-transition:ease .2s;transition:ease .2s;}`, `.user-select.__jsx-style-dynamic-selector .dropdown-toggle:focus .avatar,.user-select.__jsx-style-dynamic-selector .dropdown-toggle:hover .avatar{background-color:${whiteColor};-webkit-transition:background-color .2s;transition:background-color .2s;}`, `.user-select.__jsx-style-dynamic-selector .dropdown-toggle:focus .chevron path,.user-select.__jsx-style-dynamic-selector .dropdown-toggle:hover .chevron path{fill:${whiteColor};}`, `.user-select.__jsx-style-dynamic-selector .dropdown-menu{background-color:#808080;box-shadow:0 2px 5px ${shadowColor};border:0;border-radius:5px;margin-top:5px;max-width:unset;padding-top:5px;padding-bottom:0;}`, `.user-select.__jsx-style-dynamic-selector .dropdown-menu::before{border:13px solid transparent;border-top:0;border-bottom:12px solid ${backgroundColor1};bottom:100%;content:'';display:block;position:absolute;right:10px;}`, `.user-select.__jsx-style-dynamic-selector .dropdown-item{color:${whiteColor};}`, \".user-select.__jsx-style-dynamic-selector .dropdown-item:focus,.user-select.__jsx-style-dynamic-selector .dropdown-item:hover{background-color:transparent;}\", \".user-select.__jsx-style-dynamic-selector .dropdown-item-style1{font-family:var(--sans-serif-condensed);font-size:20px;font-weight:bold;margin-top:10px;margin-bottom:10px;outline:0;text-align:center;-webkit-transition:background-color .2s;transition:background-color .2s;}\", \".user-select.__jsx-style-dynamic-selector .dropdown-item-style1:focus,.user-select.__jsx-style-dynamic-selector .dropdown-item-style1:hover{background-color:rgba(var(--black-rgb),.2);}\", \".user-select.__jsx-style-dynamic-selector .dropdown-item-style2{background-color:var(--primary);border-radius:5px;font-family:var(--sans-serif-condensed);font-size:20px;font-weight:bold;line-height:1.25;margin:10px 15px 15px;padding-right:25px;padding-left:25px;text-align:center;-webkit-transition:background-color .2s;transition:background-color .2s;width:auto;}\", \".user-select.__jsx-style-dynamic-selector .dropdown-item-style2:focus,.user-select.__jsx-style-dynamic-selector .dropdown-item-style2:hover{background-color:var(--primary-hover);}\", \".user-select.__jsx-style-dynamic-selector .dropdown-divider{border-top:0;margin-bottom:0;}\", \".user-select.__jsx-style-dynamic-selector .dropdown-divider~.dropdown-item{background-color:#333333;}\", `.user-select.__jsx-style-dynamic-selector .dropdown-item-style3{background-color:${backgroundColor2};color:${lightColor};padding:7.5px 25px;-webkit-transition:background-color .2s,color .2s;transition:background-color .2s,color .2s;vertical-align:middle;}`, \".user-select.__jsx-style-dynamic-selector .dropdown-item-style3>span.__jsx-style-dynamic-selector{vertical-align:middle;}\", \".user-select.__jsx-style-dynamic-selector .dropdown-item-style3 .icon.__jsx-style-dynamic-selector{display:inline-block;margin-right:15px;width:30px;}\", \".user-select.__jsx-style-dynamic-selector .dropdown-item-style3 .icon.__jsx-style-dynamic-selector img.__jsx-style-dynamic-selector{margin-right:auto;margin-left:auto;}\", \".user-select.__jsx-style-dynamic-selector .dropdown-item-style3 .icon.__jsx-style-dynamic-selector .add.__jsx-style-dynamic-selector{height:20px;width:20px;}\", \".user-select.__jsx-style-dynamic-selector .dropdown-item-style3 .icon.__jsx-style-dynamic-selector .user.__jsx-style-dynamic-selector{height:20px;width:15px;}\", \".user-select.__jsx-style-dynamic-selector .dropdown-item-style3 .icon.__jsx-style-dynamic-selector .settings.__jsx-style-dynamic-selector{height:26px;width:26px;}\", \".user-select.__jsx-style-dynamic-selector .dropdown-item-style3 .icon.__jsx-style-dynamic-selector .help.__jsx-style-dynamic-selector{height:24px;width:24px;}\", \".user-select.__jsx-style-dynamic-selector .dropdown-item-style3 .icon.__jsx-style-dynamic-selector .info.__jsx-style-dynamic-selector{height:27px;width:27px;}\", \".user-select.__jsx-style-dynamic-selector .dropdown-item-style3 .icon.__jsx-style-dynamic-selector .logout.__jsx-style-dynamic-selector{height:19px;width:19px;}\", `.user-select.__jsx-style-dynamic-selector .dropdown-item-style3:focus,.user-select.__jsx-style-dynamic-selector .dropdown-item-style3:hover{background-color:${backgroundColor2Hover};color:${whiteColor};}`, `.user-select.logged.__jsx-style-dynamic-selector .dropdown-menu{background-color:${backgroundColor2};box-shadow:0 2px 5px ${shadowColor};padding-top:0;padding-bottom:5px;}`, \".user-select.logged.__jsx-style-dynamic-selector .dropdown-menu::before{border-bottom-color:var(--primary);}\", `.user-select.logged.__jsx-style-dynamic-selector .dropdown-header{background-color:var(--primary);border-radius:5px;color:${whiteColor};line-height:1;padding:15px 30px 20px;text-align:center;}`, \".user-select.logged.__jsx-style-dynamic-selector .dropdown-header .user-name.__jsx-style-dynamic-selector{font-family:var(--sans-serif-condensed);font-size:20px;font-weight:bold;line-height:1;margin-bottom:5px;}\", \".user-select.logged.__jsx-style-dynamic-selector .dropdown-header .user-email.__jsx-style-dynamic-selector{font-size:12px;}\"]));\n});\n\nconst Avatar = ({\n  image\n}) => {\n  const theme = useContext(ThemeContext);\n  const avatarColor = theme.colors.background;\n  const lightColor = theme.colors.texts;\n  return __jsx(\"span\", {\n    className: _JSXStyle.dynamic([[\"33661235\", [lightColor, avatarColor]]]) + \" \" + ('avatar' + (!image ? ' avatar--empty' : '') || \"\")\n  }, !image ? __jsx(ReactSVG, {\n    fallback: \"Avatar\",\n    src: \"/static/icons/user.svg\",\n    wrapper: \"span\"\n  }) : __jsx(\"img\", {\n    alt: \"Avatar\",\n    height: \"30\",\n    src: image,\n    width: \"30\",\n    className: _JSXStyle.dynamic([[\"33661235\", [lightColor, avatarColor]]]) + \" \" + \"img-fluid\"\n  }), __jsx(_JSXStyle, {\n    id: \"33661235\",\n    dynamic: [lightColor, avatarColor]\n  }, [`.avatar.__jsx-style-dynamic-selector{background-clip:padding-box;background-color:${lightColor};border-radius:50%;height:30px;margin:2.5px;overflow:hidden;-webkit-transition:background-color .2s;transition:background-color .2s;width:30px;}`, \".avatar--empty.__jsx-style-dynamic-selector>span{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;height:100%;padding:25%;width:100%;}\", \".avatar--empty.__jsx-style-dynamic-selector svg{display:block;height:100%;width:100%;}\", `.avatar--empty.__jsx-style-dynamic-selector path{fill:${avatarColor};}`, \"@media (min-width:768px){.avatar.__jsx-style-dynamic-selector{height:38px;margin-right:10px;width:38px;}}\"]));\n};","map":{"version":3,"sources":["/Users/rafael/Projects/somosgad/dale/components/layout/UserMenu.js"],"names":["Color","Link","useContext","Dropdown","GoPerson","IoMdAddCircle","IoIosHelpCircle","RiLogoutBoxRLine","ReactSVG","ThemeContext","UserContext","AuthModalContext","gtag","Chevron","TENANT","signOut","user","closeAuthModal","openAuthModal","loggedMenu","slug","label","href","onClick","logout","getUserName","nameArray","name","split","userName","length","join","enter","e","preventDefault","event","action","category","theme","backgroundColor1","colors","backgroundContrast2","backgroundColor2","backgroundContrast","backgroundColor2Hover","darken","hsl","string","blackColor","black","shadowColor","fade","lightColor","texts","whiteColor","white","undefined","cropped_image_url","email","map","key","Avatar","image","avatarColor","background"],"mappings":"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","sourcesContent":["import Color from 'color'\nimport Link from 'next/link'\nimport { useContext } from 'react'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport { GoPerson } from 'react-icons/go';\nimport { IoMdAddCircle, IoIosHelpCircle } from 'react-icons/io';\nimport { RiLogoutBoxRLine } from 'react-icons/ri';\nimport ReactSVG from 'react-svg'\nimport { ThemeContext } from 'styled-components'\nimport UserContext from '~/contexts/UserContext'\nimport { AuthModalContext } from '~/contexts/AuthModalContext'\nimport * as gtag from '~/lib/gtag'\nimport Chevron from '../icons/chevron'\nimport { TENANT } from \"~/constants/constants\";\n\nexport default () => {\n\n  const { signOut, user } = useContext(UserContext)\n  const { closeAuthModal, openAuthModal } = useContext(AuthModalContext)\n\n  const loggedMenu = [\n    { slug: 'add', label: 'Mi Lista', href: '/wishlist' },\n    { slug: 'user', label: 'Mi Cuenta', href: '/user/account' },\n    // { slug: 'settings', label: 'ConfiguraciÃ³n', href: '/settings' },\n    { slug: 'help', label: 'Ayuda', href: '/help' },\n    // { slug: 'info', label: 'Soporte', href: '/soporte' },\n    { slug: 'logout', label: 'Salir', href: '/logout', onClick: logout, },\n  ]\n\n  function getUserName() {\n    const nameArray = user.name.split(' ')\n    const userName = nameArray.length > 1 ?\n      `${nameArray[0]} ${nameArray[nameArray.length - 1]}` : nameArray.join('')\n    return userName\n  }\n\n  function enter(e) {\n    e.preventDefault()\n    // this is just a test, we should change it later:\n    gtag.event({\n      action: 'submit_form',\n      category: 'Contact',\n      label: 'Message here',\n    })\n    openAuthModal()\n  }\n\n  function logout(e) {\n    e.preventDefault()\n    signOut()\n    closeAuthModal()\n  }\n\n  const theme = useContext(ThemeContext)\n  const backgroundColor1 = theme.colors.backgroundContrast2\n  const backgroundColor2 = theme.colors.backgroundContrast\n  const backgroundColor2Hover = Color(backgroundColor2).darken(.2).hsl().string()\n  const blackColor = Color(theme.colors.black)\n  const shadowColor = blackColor.fade(.7).hsl().string()\n  const lightColor = theme.colors.texts\n  const whiteColor = theme.colors.white\n\n  return (\n    <div className={`user-select ${user ? 'logged' : ''}`}>\n\n      <Dropdown alignRight drop=\"down\" flip={undefined}>\n\n        <Dropdown.Toggle id=\"dropdown-custom-user\">\n          <Avatar image={user && user.cropped_image_url ? user.cropped_image_url : null} />\n          <Chevron\n            alt=\"\"\n            className=\"chevron d-none d-md-inline\"\n            dir=\"bottom\"\n            height=\"9\"\n            inline\n            width=\"16\"\n          />\n        </Dropdown.Toggle>\n\n        {/* logged menu */}\n        { user ? <>\n          <Dropdown.Menu>\n            <Dropdown.Header>\n              <div className=\"user-name\">{ getUserName() }</div>\n              <div className=\"user-email\">{ user.email }</div>\n            </Dropdown.Header>\n            { loggedMenu.map(({ href, label, onClick, slug }, key) => (\n              <Link href={href} key={key} passHref>\n                <Dropdown.Item className=\"dropdown-item-style3\" onClick={onClick}>\n                  <span className=\"icon\">\n                    {slug === 'add' ? (\n                      <IoMdAddCircle size={24} />\n                    ) : slug === 'help' ? (\n                      <IoIosHelpCircle size={24} />\n                    ) : slug === 'user' ? (\n                      <GoPerson size={24} />\n                    ) : slug === 'logout' ? (\n                      <RiLogoutBoxRLine size={24} />\n                    ) : (\n                      <img className={`img-fluid ${slug}`} src={`/static/icons/${slug}.svg`} />\n                    )}\n                  </span>\n                  <span>{label}</span>\n                </Dropdown.Item>\n              </Link>\n            )) }\n          </Dropdown.Menu>\n\n        {/* public menu */}\n        </> : (\n          <Dropdown.Menu>\n            <Dropdown.Item as=\"button\"\n              className=\"dropdown-item-style1\"\n              onClick={enter}>Entrar</Dropdown.Item>\n            <Link href={ TENANT === 'lau' ? \"/subscriptor\" : \"/signup\"}>\n              <Dropdown.Item className=\"dropdown-item-style2\"\n                href=\"/signup\">SuscripciÃ³n</Dropdown.Item>\n            </Link>\n            <Dropdown.Divider />\n            {/* <Dropdown.Item className=\"dropdown-item-style3\" href=\"/ajustes\">\n              <span className=\"icon\">\n                <img height=\"26\" src=\"/static/icons/settings.svg\" width=\"26\" />\n              </span>\n              <span>Ajustes</span>\n            </Dropdown.Item> */}\n            <Dropdown.Item className=\"dropdown-item-style3\" href=\"/help\">\n              <span className=\"icon\">\n                <IoIosHelpCircle size={24} />\n              </span>\n              <span>Ayuda</span>\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        ) }\n\n      </Dropdown>\n\n      <style jsx>{`\n        .user-select {\n          align-items: center;\n          display: flex;\n          position: relative;\n        }\n        @media (min-width: 768px) {\n          .user-select {\n            margin-right: -15px;\n          }\n        }\n        .user-select :global(.dropdown-toggle) {\n          align-items: center;\n          background-color: transparent !important;\n          border: 0;\n          box-shadow: none !important;\n          display: flex;\n          padding: 5px;\n        }\n        @media (min-width: 768px) {\n          .user-select :global(.dropdown-toggle) {\n            padding-right: 15px;\n            padding-left: 15px;\n          }\n        }\n        .user-select :global(.dropdown-toggle)::after {\n          display: none;\n        }\n        .user-select :global(.dropdown-toggle) :global(.avatar) {\n          background-color: ${lightColor};\n        }\n        .user-select :global(.dropdown-toggle) :global(.chevron) {\n          line-height: 1;\n        }\n        .user-select :global(.dropdown-toggle) :global(.chevron) :global(path) {\n          fill: ${lightColor};\n          transition: ease .2s;\n        }\n        .user-select :global(.dropdown-toggle):focus :global(.avatar),\n        .user-select :global(.dropdown-toggle):hover :global(.avatar) {\n          background-color: ${whiteColor};\n          transition: background-color .2s;\n        }\n        .user-select :global(.dropdown-toggle):focus :global(.chevron) :global(path),\n        .user-select :global(.dropdown-toggle):hover :global(.chevron) :global(path) {\n          fill: ${whiteColor};\n        }\n        .user-select :global(.dropdown-menu) {\n          background-color: #808080;\n          box-shadow: 0 2px 5px ${shadowColor};\n          border: 0;\n          border-radius: 5px;\n          margin-top: 5px;\n          max-width: unset;\n          padding-top: 5px;\n          padding-bottom: 0;\n        }\n        .user-select :global(.dropdown-menu)::before {\n          border: 13px solid transparent;\n          border-top: 0;\n          border-bottom: 12px solid ${backgroundColor1};\n          bottom: 100%;\n          content: '';\n          display: block;\n          position: absolute;\n          right: 10px;\n        }\n        .user-select :global(.dropdown-item) {\n          color: ${whiteColor};\n        }\n        .user-select :global(.dropdown-item):focus,\n        .user-select :global(.dropdown-item):hover {\n          background-color: transparent;\n        }\n        .user-select :global(.dropdown-item-style1) {\n          font-family: var(--sans-serif-condensed);\n          font-size: 20px;\n          font-weight: bold;\n          margin-top: 10px;\n          margin-bottom: 10px;\n          outline: 0;\n          text-align: center;\n          transition: background-color .2s;\n        }\n        .user-select :global(.dropdown-item-style1):focus,\n        .user-select :global(.dropdown-item-style1):hover {\n          background-color: rgba(var(--black-rgb), .2);\n        }\n        .user-select :global(.dropdown-item-style2) {\n          background-color: var(--primary);\n          border-radius: 5px;\n          font-family: var(--sans-serif-condensed);\n          font-size: 20px;\n          font-weight: bold;\n          line-height: 1.25;\n          margin: 10px 15px 15px;\n          padding-right: 25px;\n          padding-left: 25px;\n          text-align: center;\n          transition: background-color .2s;\n          width: auto;\n        }\n        .user-select :global(.dropdown-item-style2):focus,\n        .user-select :global(.dropdown-item-style2):hover {\n          background-color: var(--primary-hover);\n        }\n        .user-select :global(.dropdown-divider) {\n          border-top: 0;\n          margin-bottom: 0;\n        }\n        .user-select :global(.dropdown-divider) ~ :global(.dropdown-item) {\n          background-color: #333333;\n        }\n\n        /* item style 3 */\n\n        .user-select :global(.dropdown-item-style3) {\n          background-color: ${backgroundColor2};\n          color: ${lightColor};\n          padding: 7.5px 25px;\n          transition: background-color .2s, color .2s;\n          vertical-align: middle;\n        }\n        .user-select :global(.dropdown-item-style3) > span {\n          vertical-align: middle;\n        }\n        .user-select :global(.dropdown-item-style3) .icon {\n          display: inline-block;\n          margin-right: 15px;\n          width: 30px;\n        }\n        .user-select :global(.dropdown-item-style3) .icon img {\n          margin-right: auto;\n          margin-left: auto;\n        }\n        .user-select :global(.dropdown-item-style3) .icon .add {\n          height: 20px;\n          width: 20px;\n        }\n        .user-select :global(.dropdown-item-style3) .icon .user {\n          height: 20px;\n          width: 15px;\n        }\n        .user-select :global(.dropdown-item-style3) .icon .settings {\n          height: 26px;\n          width: 26px;\n        }\n        .user-select :global(.dropdown-item-style3) .icon .help {\n          height: 24px;\n          width: 24px;\n        }\n        .user-select :global(.dropdown-item-style3) .icon .info {\n          height: 27px;\n          width: 27px;\n        }\n        .user-select :global(.dropdown-item-style3) .icon .logout {\n          height: 19px;\n          width: 19px;\n        }\n        .user-select :global(.dropdown-item-style3):focus,\n        .user-select :global(.dropdown-item-style3):hover {\n          background-color: ${backgroundColor2Hover};\n          color: ${whiteColor};\n        }\n\n        /* logged styles */\n\n        .user-select.logged :global(.dropdown-menu) {\n          background-color: ${backgroundColor2};\n          box-shadow: 0 2px 5px ${shadowColor};\n          padding-top: 0;\n          padding-bottom: 5px;\n        }\n        .user-select.logged :global(.dropdown-menu)::before {\n          border-bottom-color: var(--primary);\n        }\n        .user-select.logged :global(.dropdown-header) {\n          background-color: var(--primary);\n          border-radius: 5px;\n          color: ${whiteColor};\n          line-height: 1;\n          padding: 15px 30px 20px;\n          text-align: center;\n        }\n        .user-select.logged :global(.dropdown-header) .user-name {\n          font-family: var(--sans-serif-condensed);\n          font-size: 20px;\n          font-weight: bold;\n          line-height: 1;\n          margin-bottom: 5px;\n        }\n        .user-select.logged :global(.dropdown-header) .user-email {\n          font-size: 12px;\n        }\n      `}</style>\n    </div>\n  )\n}\n\nconst Avatar = ({ image }) => {\n  const theme = useContext(ThemeContext)\n  const avatarColor = theme.colors.background\n  const lightColor = theme.colors.texts\n  return (\n    <span className={'avatar' + (!image ? ' avatar--empty' : '')}>\n      { !image ? (\n        <ReactSVG fallback=\"Avatar\" src=\"/static/icons/user.svg\" wrapper=\"span\" />\n      ) : (\n        <img alt=\"Avatar\" className=\"img-fluid\" height=\"30\" src={image} width=\"30\" />\n      )}\n      <style jsx>{`\n        .avatar {\n          background-clip: padding-box;\n          background-color: ${lightColor};\n          border-radius: 50%;\n          height: 30px;\n          margin: 2.5px;\n          overflow: hidden;\n          transition: background-color .2s;\n          width: 30px;\n        }\n        .avatar--empty > :global(span) {\n          align-items: center;\n          display: flex;\n          justify-content: center;\n          height: 100%;\n          padding: 25%;\n          width: 100%;\n        }\n        .avatar--empty :global(svg) {\n          display: block;\n          height: 100%;\n          width: 100%;\n        }\n        .avatar--empty :global(path) {\n          fill: ${avatarColor};\n        }\n        @media (min-width: 768px) {\n          .avatar {\n            height: 38px;\n            margin-right: 10px;\n            width: 38px;\n          }\n        }\n      `}</style>\n    </span>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}