{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useContext, useState } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Collapse from 'react-bootstrap/Collapse';\nimport Button from '~/components/button';\nimport Layout from '~/components/layout/Layout';\nimport MediaLink from '~/components/MediaLink/MediaLink';\nimport WishlistBtn from '~/components/wishlist-btn';\nimport withApi from '~/components/withApi';\nimport UserContext from '~/contexts/UserContext';\nimport { CONFIG } from '~/config';\nimport Chevron from '~/components/icons/chevron';\nimport Color from 'color';\nimport { TENANT } from \"~/constants/constants\";\n\nfunction MediaPage1({\n  category,\n  errorCode,\n  layoutProps,\n  media,\n  related\n}) {\n  const {\n    appName\n  } = CONFIG;\n  const {\n    title: mediaTitle\n  } = media;\n  const pageTitle = `${mediaTitle} < ${appName}`;\n  return __jsx(React.Fragment, null, __jsx(Layout, _extends({\n    errorCode: errorCode,\n    paddingTop: false\n  }, layoutProps), __jsx(Head, null, __jsx(\"title\", null, pageTitle)), __jsx(Cover, {\n    category: category,\n    media: media\n  }), category && related && __jsx(More, {\n    category: category,\n    related: related\n  })));\n}\n\nMediaPage1.getInitialProps = async ctx => {\n  const {\n    api,\n    query\n  } = ctx;\n  const {\n    slug: movieSlug,\n    category: categorySlug\n  } = query;\n\n  try {\n    const url = `movie/${movieSlug}` + (categorySlug ? `/category/${categorySlug}` : '');\n    const {\n      data\n    } = await api.get(url);\n    const {\n      category,\n      movie: media,\n      related\n    } = data;\n    return {\n      category,\n      media,\n      related\n    };\n  } catch (error) {\n    const errorCode = 404;\n    return {\n      errorCode\n    };\n  }\n};\n\nconst Cover = ({\n  category,\n  media\n}) => {\n  const {\n    0: open,\n    1: setOpen\n  } = useState(false);\n  const {\n    user\n  } = useContext(UserContext);\n  const smDown = useMediaQuery('(max-width: 767px)');\n  const probaGratis = CONFIG.lang === 'es-CL' ? 'Prueba gratis' : 'ProbÃ¡ Gratis';\n  const theme = useContext(ThemeContext);\n  const maskColor = Color(theme.colors.background);\n  const {\n    detail = null,\n    poster_url: posterUrl,\n    publish_year: publishYear = null,\n    title\n  } = media;\n  return __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1715467306\", [maskColor.fade(1).string(), maskColor.fade(.075).string(), posterUrl]]])\n  }, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1715467306\", [maskColor.fade(1).string(), maskColor.fade(.075).string(), posterUrl]]]) + \" \" + \"header-entre\"\n  }, __jsx(\"h3\", {\n    className: _JSXStyle.dynamic([[\"1715467306\", [maskColor.fade(1).string(), maskColor.fade(.075).string(), posterUrl]]])\n  }, category.name)), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1715467306\", [maskColor.fade(1).string(), maskColor.fade(.075).string(), posterUrl]]]) + \" \" + \"cover container-fluid\"\n  }, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1715467306\", [maskColor.fade(1).string(), maskColor.fade(.075).string(), posterUrl]]]) + \" \" + \"row align-items-center\"\n  }, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1715467306\", [maskColor.fade(1).string(), maskColor.fade(.075).string(), posterUrl]]]) + \" \" + \"col-12 col-md-5 offset-md-1\"\n  }, __jsx(MediaLink, _extends({\n    category,\n    media\n  }, {\n    watch: true\n  }), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1715467306\", [maskColor.fade(1).string(), maskColor.fade(.075).string(), posterUrl]]]) + \" \" + \"info\"\n  }, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1715467306\", [maskColor.fade(1).string(), maskColor.fade(.075).string(), posterUrl]]]) + \" \" + \"heading\"\n  }, __jsx(\"h1\", {\n    className: _JSXStyle.dynamic([[\"1715467306\", [maskColor.fade(1).string(), maskColor.fade(.075).string(), posterUrl]]]) + \" \" + \"h2\"\n  }, title), publishYear && __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1715467306\", [maskColor.fade(1).string(), maskColor.fade(.075).string(), posterUrl]]]) + \" \" + \"year\"\n  }, publishYear)), detail && __jsx(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    className: _JSXStyle.dynamic([[\"1715467306\", [maskColor.fade(1).string(), maskColor.fade(.075).string(), posterUrl]]]) + \" \" + \"description\"\n  }, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1715467306\", [maskColor.fade(1).string(), maskColor.fade(.075).string(), posterUrl]]]) + \" \" + (smDown && !open && 'short-description' || \"\")\n  }, smDown && !open && detail.replace(/^([\\s\\S]{70}[^\\s]*)[\\s\\S]*/, \"$1\"), __jsx(Collapse, {\n    in: open || !smDown\n  }, __jsx(\"p\", {\n    className: _JSXStyle.dynamic([[\"1715467306\", [maskColor.fade(1).string(), maskColor.fade(.075).string(), posterUrl]]])\n  }, detail))), __jsx(\"div\", {\n    onClick: _ => setOpen(!open),\n    \"aria-controls\": \"description\",\n    \"aria-expanded\": open,\n    className: _JSXStyle.dynamic([[\"1715467306\", [maskColor.fade(1).string(), maskColor.fade(.075).string(), posterUrl]]]) + \" \" + ('chevron-collapse ' + (!smDown && 'd-none') || \"\")\n  }, __jsx(Chevron, {\n    dir: !open && \"bottom\",\n    alt: \"mas\",\n    className: \"chevron\",\n    height: \"10\",\n    width: \"17\",\n    inline: true\n  }))))), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1715467306\", [maskColor.fade(1).string(), maskColor.fade(.075).string(), posterUrl]]]) + \" \" + \"buttons\"\n  }, !user ? __jsx(Link, {\n    href: TENANT === 'lau' ? \"/subscriptor\" : \"/signup\"\n  }, __jsx(Button, {\n    block: smDown\n  }, probaGratis)) : __jsx(React.Fragment, null, __jsx(MediaLink, _extends({\n    category,\n    media\n  }, {\n    watch: true\n  }), __jsx(Button, null, \"Mira\")), __jsx(WishlistBtn, {\n    movieId: media.id\n  })))))), __jsx(_JSXStyle, {\n    id: \"1715467306\",\n    dynamic: [maskColor.fade(1).string(), maskColor.fade(.075).string(), posterUrl]\n  }, `.cover.__jsx-style-dynamic-selector{background-color:var(--background);background-position:50% 50%,100% 50%;background-image:radial-gradient(circle at 95% 75%,${maskColor.fade(1).string()} 20%,${maskColor.fade(.075).string()} 60%), url(${posterUrl});background-repeat:no-repeat,no-repeat;background-size:cover,cover;font-size:15px;line-height:1.5;}.cover.__jsx-style-dynamic-selector .row.__jsx-style-dynamic-selector{padding-top:calc(var(--padding-top) + 15px);padding-bottom:15px;}.heading.__jsx-style-dynamic-selector{margin-bottom:15px;}h1.__jsx-style-dynamic-selector{font-size:31px;font-weight:bold;line-height:normal;margin-bottom:0;}.year.__jsx-style-dynamic-selector{font-size:1.33em;}.description.__jsx-style-dynamic-selector{color:var(--descriptions-color);}.short-description.__jsx-style-dynamic-selector{margin-bottom:100px;}.short-description.__jsx-style-dynamic-selector:after{content:\" . . .\";}.cover.__jsx-style-dynamic-selector .btn-primary{margin-right:15px;margin-bottom:0;}.chevron-collapse.__jsx-style-dynamic-selector{padding-left:10px;}.header-entre.__jsx-style-dynamic-selector{display:none;}@media (min-width:768px){.cover.__jsx-style-dynamic-selector .row.__jsx-style-dynamic-selector{height:560px;padding-top:var(--padding-top);padding-bottom:30px;}.info.__jsx-style-dynamic-selector{margin-bottom:30px;}.description.__jsx-style-dynamic-selector:after{content:\"\";}}@media(max-width:768px){.buttons.__jsx-style-dynamic-selector{display:none!important;}h1.__jsx-style-dynamic-selector{text-align:center;font-size:18px;padding:161px 0px 18px 0px;}.heading.__jsx-style-dynamic-selector{margin-bottom:-19px;}.container-fluid.__jsx-style-dynamic-selector,.container-sm.__jsx-style-dynamic-selector,.container-md.__jsx-style-dynamic-selector,.container-lg.__jsx-style-dynamic-selector,.container-xl.__jsx-style-dynamic-selector{width:90%;padding-right:15px;padding-left:-13px;}h3.__jsx-style-dynamic-selector{padding-left:8px;font-size:22px;font-weight:600;}.header-entre.__jsx-style-dynamic-selector{background:#090a0a;display:block;margin-top:30%;padding-left:10px;}}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=/Users/rafael/Projects/somosgad/dale/pages/media/[slug].js */`));\n};\n\nconst HMediaCard = ({\n  category,\n  media\n}) => {\n  console.log(media);\n  const {\n    title\n  } = media;\n  return __jsx(\"div\", {\n    className: \"jsx-519892674\" + \" \" + \"h-media-card row\"\n  }, __jsx(\"div\", {\n    className: \"jsx-519892674\" + \" \" + \"col-md-4\"\n  }, __jsx(MediaLink, _extends({\n    watch: true\n  }, {\n    category,\n    media\n  }), __jsx(\"a\", {\n    className: \"jsx-519892674\"\n  }, __jsx(\"img\", {\n    height: \"220\",\n    src: media.thumbnail2_url ? media.thumbnail2_url : '//placehold.jp/390x220.png',\n    width: \"390\",\n    className: \"jsx-519892674\" + \" \" + \"img-fluid w-100 d-block\"\n  })))), __jsx(\"div\", {\n    className: \"jsx-519892674\" + \" \" + \"col-md-5\"\n  }, __jsx(\"h3\", {\n    className: \"jsx-519892674\" + \" \" + \"h3\"\n  }, __jsx(MediaLink, _extends({\n    watch: true\n  }, {\n    category,\n    media\n  }), __jsx(\"a\", {\n    className: \"jsx-519892674\"\n  }, title))), media.detail && __jsx(\"div\", {\n    className: \"jsx-519892674\" + \" \" + \"description\"\n  }, __jsx(\"p\", {\n    className: \"jsx-519892674\"\n  }, media.detail))), __jsx(_JSXStyle, {\n    id: \"519892674\"\n  }, \".h-media-card.jsx-519892674{margin-bottom:30px;}.h-media-card.jsx-519892674 a.jsx-519892674{color:var(--white);-webkit-text-decoration:none;text-decoration:none;}.h-media-card.jsx-519892674 img.jsx-519892674{margin-bottom:15px;}.h3.jsx-519892674{font-size:inherit;font-weight:bold;margin-top:15px;margin-bottom:15px;}.h3.jsx-519892674 a.jsx-519892674:focus,.h3.jsx-519892674 a.jsx-519892674:hover{-webkit-text-decoration:underline;text-decoration:underline;}.description.jsx-519892674{color:var(--descriptions-color);font-size:15px;}@media (min-width:768px){.h-media-card.jsx-519892674{margin-bottom:45px;}.h-media-card.jsx-519892674 img.jsx-519892674{margin-bottom:0;}}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/rafael/Projects/somosgad/dale/pages/media/[slug].js */\"));\n};\n\nconst More = ({\n  category,\n  related: medias\n}) => {\n  const {\n    name: categoryName\n  } = category;\n  const theme = useContext(ThemeContext);\n  const backgroundColor = Color(theme.colors.backgroundContrast).hsl().string();\n  const {\n    0: display,\n    1: setDisplay\n  } = useState(\"none\");\n\n  function visible() {\n    if (display == \"block\") {\n      setDisplay(\"none\");\n    } else {\n      setDisplay(\"block\");\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"jsx-3843199656\" + \" \" + \"is_visivel\"\n  }, __jsx(\"a\", {\n    onClick: () => visible(),\n    className: \"jsx-3843199656\" + \" \" + \"btn-mas btn-primary\"\n  }, \"Ver M\\xE1s\"), __jsx(_JSXStyle, {\n    id: \"3843199656\"\n  }, \".is_visivel.jsx-3843199656{display:none;padding:24px;}@media (max-width:768px){.is_visivel.jsx-3843199656{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}.btn-mas.jsx-3843199656{font-weight:700;background-color:var(--primary);border:0px;border-radius:4px;padding:5px;width:28%;text-align:center;font-size:14px;}}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/rafael/Projects/somosgad/dale/pages/media/[slug].js */\")), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"3344438022\", [backgroundColor, display]]]) + \" \" + \"more container-fluid\"\n  }, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"3344438022\", [backgroundColor, display]]]) + \" \" + \"row\"\n  }, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"3344438022\", [backgroundColor, display]]]) + \" \" + \"col offset-md-1\"\n  }, __jsx(\"h2\", {\n    className: _JSXStyle.dynamic([[\"3344438022\", [backgroundColor, display]]]) + \" \" + \"h2 text-uppercase\"\n  }, \"M\\xE1s \", categoryName))), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"3344438022\", [backgroundColor, display]]]) + \" \" + \"cards\"\n  }, medias.map((media, i) => __jsx(HMediaCard, _extends({\n    key: i\n  }, {\n    category,\n    media\n  })))), __jsx(_JSXStyle, {\n    id: \"3344438022\",\n    dynamic: [backgroundColor, display]\n  }, `.more.__jsx-style-dynamic-selector{background-color:${backgroundColor};font-size:20px;line-height:1.5;padding-top:30px;}.h2.__jsx-style-dynamic-selector{font-size:30px;margin-top:0;margin-bottom:30px;}.cards.__jsx-style-dynamic-selector{overflow:hidden;}@media (max-width:768px){.more.__jsx-style-dynamic-selector{padding-top:45px;}.h2.__jsx-style-dynamic-selector{font-size:31px;margin-bottom:60px;display:none;}.cards.__jsx-style-dynamic-selector{padding-left:4%;}.container-fluid.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;display:${display};}}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=/Users/rafael/Projects/somosgad/dale/pages/media/[slug].js */`)));\n};\n\nexport default withApi(MediaPage1);","map":{"version":3,"sources":["/Users/rafael/Projects/somosgad/dale/pages/media/[slug].js"],"names":["useContext","useState","ThemeContext","Head","Link","useMediaQuery","Collapse","Button","Layout","MediaLink","WishlistBtn","withApi","UserContext","CONFIG","Chevron","Color","TENANT","MediaPage1","category","errorCode","layoutProps","media","related","appName","title","mediaTitle","pageTitle","getInitialProps","ctx","api","query","slug","movieSlug","categorySlug","url","data","get","movie","error","Cover","open","setOpen","user","smDown","probaGratis","lang","theme","maskColor","colors","background","detail","poster_url","posterUrl","publish_year","publishYear","fade","string","name","display","replace","_","id","HMediaCard","console","log","thumbnail2_url","More","medias","categoryName","backgroundColor","backgroundContrast","hsl","setDisplay","visible","map","i"],"mappings":"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","sourcesContent":["import { useContext, useState } from 'react'\nimport { ThemeContext } from 'styled-components'\nimport Head from 'next/head'\nimport Link from 'next/link'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport Collapse from 'react-bootstrap/Collapse'\nimport Button from '~/components/button'\nimport Layout from '~/components/layout/Layout'\nimport MediaLink from '~/components/MediaLink/MediaLink'\nimport WishlistBtn from '~/components/wishlist-btn'\nimport withApi from '~/components/withApi'\nimport UserContext from '~/contexts/UserContext'\nimport { CONFIG } from '~/config'\nimport Chevron from '~/components/icons/chevron'\nimport Color from 'color'\nimport { TENANT } from \"~/constants/constants\";\n\nfunction MediaPage1({ category, errorCode, layoutProps, media, related }) {\n  const { appName } = CONFIG\n  const { title: mediaTitle } = media\n  const pageTitle = `${ mediaTitle } < ${ appName }`\n\n\n  return (\n    <>\n      <Layout errorCode={ errorCode } paddingTop={ false } { ...layoutProps }>\n        <Head>\n          <title>{ pageTitle }</title>\n        </Head>\n\n        <Cover category={ category } media={ media }/>\n        { category && related && (\n          <More category={ category } related={ related }/>\n        ) }\n      </Layout>\n    </>\n  )\n}\n\n\nMediaPage1.getInitialProps = async ctx => {\n  const { api, query } = ctx\n  const { slug: movieSlug, category: categorySlug } = query;\n  try {\n    const url = `movie/${ movieSlug }` + (categorySlug ? `/category/${ categorySlug }` : '')\n    const { data } = await api.get(url)\n    const { category, movie: media, related } = data\n    return { category, media, related }\n  } catch (error) {\n    const errorCode = 404\n    return { errorCode }\n  }\n}\n\n\nconst Cover = ({ category, media }) => {\n  const [open, setOpen] = useState(false)\n  const { user } = useContext(UserContext)\n  const smDown = useMediaQuery('(max-width: 767px)')\n  const probaGratis = CONFIG.lang === 'es-CL' ? 'Prueba gratis' : 'ProbÃ¡ Gratis'\n  const theme = useContext(ThemeContext)\n  const maskColor = Color(theme.colors.background)\n\n  const {\n    detail = null,\n    poster_url: posterUrl,\n    publish_year: publishYear = null,\n    title,\n  } = media\n  return (\n\n    <div>\n      <div className=\"header-entre\">\n        <h3>{ category.name }</h3>\n      </div>\n\n      <div className=\"cover container-fluid\">\n        <div className=\"row align-items-center\">\n          <div className=\"col-12 col-md-5 offset-md-1\">\n            <MediaLink { ...{ category, media } } watch>\n              <div className=\"info\">\n                <div className=\"heading\">\n                  <h1 className=\"h2\">{ title }</h1>\n                  { publishYear && (\n                    <div className=\"year\">{ publishYear }</div>\n                  ) }\n                </div>\n\n                { detail && (\n                  <div className=\"description\" style={ { display: 'flex' } }>\n                    <div className={ smDown && !open && 'short-description' }>\n                      { smDown && !open && detail.replace(/^([\\s\\S]{70}[^\\s]*)[\\s\\S]*/, \"$1\") }\n                      <Collapse in={ open || !smDown }>\n                        <p>{ detail }</p>\n                      </Collapse>\n                    </div>\n                    <div\n                      className={ 'chevron-collapse ' + (!smDown && 'd-none') }\n                      onClick={ _ => setOpen(!open) }\n                      aria-controls=\"description\"\n                      aria-expanded={ open }\n                    >\n                      <Chevron\n                        dir={ !open && \"bottom\" }\n                        alt=\"mas\" className=\"chevron\"\n                        height=\"10\" width=\"17\"\n                        inline\n                      />\n                    </div>\n                  </div>\n                ) }\n              </div>\n            </MediaLink>\n\n\n            <div className=\"buttons\">\n\n              { !user ? (\n                <Link href={ TENANT === 'lau' ? \"/subscriptor\" : \"/signup\" }>\n                  <Button block={ smDown }>{ probaGratis }</Button>\n                </Link>\n              ) : (\n                <>\n                  <MediaLink { ...{ category, media } } watch>\n                    <Button>Mira</Button>\n                  </MediaLink>\n                  <WishlistBtn movieId={ media.id }/>\n                </>\n              ) }\n            </div>\n          </div>\n        </div>\n      </div>\n      <style jsx>{ `\n\n        .cover {\n          background-color: var(--background);\n          background-position: 50% 50%, 100% 50%;\n          background-image: radial-gradient(circle at 95% 75%, ${ maskColor.fade(1).string() } 20%, ${ maskColor.fade(.075).string() } 60%),\n            url(${ posterUrl });\n          background-repeat: no-repeat, no-repeat;\n          background-size: cover, cover;\n          font-size: 15px;\n          line-height: 1.5;\n        }\n        .cover .row {\n          padding-top: calc(var(--padding-top) + 15px);\n          padding-bottom: 15px;\n        }\n        .heading {\n          margin-bottom: 15px;\n        }\n        h1 {\n          font-size: 31px;\n          font-weight: bold;\n          line-height: normal;\n          margin-bottom: 0;\n        }\n        .year {\n          font-size: 1.33em;\n        }\n        .description {\n          color: var(--descriptions-color);\n        }\n        .short-description {\n          margin-bottom: 100px;\n        }\n        .short-description :after {\n            content: \" . . .\";\n        }\n        .cover :global(.btn-primary) {\n          margin-right: 15px;\n          margin-bottom: 0;\n        }\n        .chevron-collapse {\n          padding-left: 10px;\n        }\n        .header-entre {\n          display:none;\n        }\n        @media (min-width: 768px) {\n          .cover .row {\n            height: 560px;\n            padding-top: var(--padding-top);\n            padding-bottom: 30px;\n          }\n          .info {\n            margin-bottom: 30px;\n          }\n          .description:after {\n            content: \"\";\n          }\n        }\n\n        @media(max-width:768px){\n          .buttons {\n            display:none!important;\n          }\n          h1 {\n            text-align: center;\n            font-size: 18px;\n            padding: 161px 0px 18px 0px;\n          }\n          .heading {\n            margin-bottom: -19px;\n          }\n          .container-fluid, .container-sm, .container-md, .container-lg, .container-xl {\n            width: 90%;\n            padding-right: 15px;\n            padding-left: -13px;\n           }\n\n           h3 {\n            padding-left: 8px;\n            font-size: 22px;\n            font-weight: 600;\n           }\n\n          .header-entre{\n           background:#090a0a;;\n           display:block;\n           margin-top: 30%;\n           padding-left: 10px;\n          }\n        }\n      ` }</style>\n    </div>\n\n  )\n}\n\nconst HMediaCard = ({ category, media }) => {\n  console.log(media);\n  const { title } = media\n  return (\n    <div className=\"h-media-card row\">\n      <div className=\"col-md-4\">\n        <MediaLink watch { ...{ category, media } }>\n          <a>\n            <img\n              className=\"img-fluid w-100 d-block\"\n              height=\"220\"\n              src={ media.thumbnail2_url ? media.thumbnail2_url : '//placehold.jp/390x220.png' }\n              width=\"390\"\n            />\n          </a>\n        </MediaLink>\n      </div>\n      <div className=\"col-md-5\">\n        <h3 className=\"h3\">\n          <MediaLink watch { ...{ category, media } }>\n            <a>{ title }</a>\n          </MediaLink>\n        </h3>\n        { media.detail && (\n          <div className=\"description\">\n            <p>{ media.detail }</p>\n          </div>\n        ) }\n      </div>\n      <style jsx>{ `\n        .h-media-card {\n          margin-bottom: 30px;\n        }\n        .h-media-card a {\n          color: var(--white);\n          text-decoration: none;\n        }\n        .h-media-card img {\n          margin-bottom: 15px;\n        }\n        .h3 {\n          font-size: inherit;\n          font-weight: bold;\n          margin-top: 15px;\n          margin-bottom: 15px;\n        }\n        .h3 a:focus,\n        .h3 a:hover {\n          text-decoration: underline;\n        }\n        .description {\n          color: var(--descriptions-color);\n          font-size: 15px;\n        }\n        @media (min-width: 768px) {\n          .h-media-card {\n            margin-bottom: 45px;\n          }\n          .h-media-card img {\n            margin-bottom: 0;\n          }\n        }\n      ` }</style>\n    </div>\n  )\n}\n\n\nconst More = ({ category, related: medias }) => {\n  const { name: categoryName } = category\n  const theme = useContext(ThemeContext)\n  const backgroundColor = Color(theme.colors.backgroundContrast).hsl().string()\n  const [display, setDisplay] = useState(\"none\")\n\n  function visible() {\n\n    if (display == \"block\") {\n      setDisplay(\"none\")\n    } else {\n      setDisplay(\"block\")\n    }\n  }\n\n  return (\n\n    <>\n      <div className=\"is_visivel\">\n        <a onClick={ () => visible() } className=\"btn-mas btn-primary\">Ver MÃ¡s</a>\n        <style jsx>{ `\n          .is_visivel {\n            display:none;\n            padding:24px;\n          }\n         @media (max-width:768px) {\n           .is_visivel {\n             display:flex;\n             justify-content: center;\n           }\n           .btn-mas {\n             font-weight: 700;\n             background-color: var(--primary);\n             border:0px;\n             border-radius: 4px;\n             padding: 5px;\n             width: 28%;\n             text-align: center;\n             font-size: 14px;\n           }\n         }\n\n\n      ` }</style>\n      </div>\n\n      <div className=\"more container-fluid\">\n\n        <div className=\"row\">\n          <div className=\"col offset-md-1\">\n            <h2 className=\"h2 text-uppercase\">MÃ¡s { categoryName }</h2>\n          </div>\n        </div>\n        <div className=\"cards\">\n          { medias.map((media, i) => (\n            <HMediaCard key={ i } { ...{ category, media } } />\n          )) }\n        </div>\n        <style jsx>{ `\n        .more {\n          background-color: ${ backgroundColor };\n          font-size: 20px;\n          line-height: 1.5;\n          padding-top: 30px;\n        }\n        .h2 {\n          font-size: 30px;\n          margin-top: 0;\n          margin-bottom: 30px;\n        }\n\n\n        .cards {\n          overflow: hidden;\n        }\n        @media (max-width:768px) {\n          .more {\n            padding-top: 45px;\n          }\n\n\n          .h2 {\n            font-size: 31px;\n            margin-bottom: 60px;\n            display:none;\n\n          }\n          .cards {\n            padding-left: 4%;\n\n\n          }\n          .container-fluid {\n            display:flex;\n            justify-content:center;\n              display: ${ display };\n          }\n        }\n      ` }</style>\n      </div>\n    </>\n\n  );\n}\n\nexport default withApi(MediaPage1)\n"]},"metadata":{},"sourceType":"module"}