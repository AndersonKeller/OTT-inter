{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// nextjs imports\nimport Router from 'next/router';\nimport Head from 'next/head'; // react imports\n\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport nookies from 'nookies'; // app imports\n\nimport FormGroup from '~/components/layout/AuthModal/FormGroup';\nimport withAuth from '~/components/withAuth';\nimport { FkInput } from '~/components/Formik/fields';\nimport Layout from '~/components/layout/Layout';\nimport Button from '~/components/button';\nimport api from '~/services/api';\nimport { CONFIG } from '~/config';\n\nconst changeEmailPage = ({\n  layoutProps,\n  user,\n  updateUser\n}) => {\n  const handleSubmit = async (fields, actions) => {\n    var msg = '';\n\n    try {\n      const res = await api().post('email', fields);\n      updateUser(res.data);\n      msg = JSON.stringify({\n        success: \"Acceda al correo electrónico para confirmación\"\n      });\n    } catch (error) {\n      var {\n        message\n      } = error.message ? error : error.response ? error.response.data : '';\n      console.table(error);\n      msg = JSON.stringify({\n        error: \"An Error Occured while updating: \" + message\n      });\n    } finally {\n      nookies.set({}, 'flash_message', msg, {\n        path: '/'\n      });\n      Router.push('/user/account');\n    }\n  };\n\n  return __jsx(Layout, layoutProps, __jsx(Head, null, __jsx(\"title\", {\n    className: \"jsx-1975689037\"\n  }, \"Cambiar Email < \", CONFIG.appName)), __jsx(\"div\", {\n    className: \"jsx-1975689037\" + \" \" + \"rgpage container-fluid\"\n  }, __jsx(\"div\", {\n    className: \"jsx-1975689037\" + \" \" + \"row\"\n  }, __jsx(\"div\", {\n    className: \"jsx-1975689037\" + \" \" + \"col-md-8 offset-md-2\"\n  }, __jsx(\"h1\", {\n    className: \"jsx-1975689037\" + \" \" + \"h2\"\n  }, \"Cambiar Email\"), user && __jsx(Formik, {\n    initialValues: (({\n      email: oldEmail\n    }) => {\n      return {\n        oldEmail,\n        email: ''\n      };\n    })(user),\n    validationSchema: getYupSchema(),\n    onSubmit: handleSubmit,\n    component: DataForm\n  })))), __jsx(_JSXStyle, {\n    id: \"1975689037\"\n  }, [\".rgpage.jsx-1975689037{padding-top:40px;padding-bottom:120px;}\", \".h2.jsx-1975689037{margin-bottom:10px;}\", \"hr.jsx-1975689037{margin-top:25px;margin-bottom:15px;background-color:white;}\"]));\n};\n\nconst DataForm = ({\n  isSubmitting\n}) => __jsx(Form, null, __jsx(FormGroup, null, __jsx(FkInput, {\n  name: \"oldEmail\",\n  label: \"Email Actual\",\n  type: \"email\",\n  disabled: true\n})), __jsx(FormGroup, null, __jsx(FkInput, {\n  name: \"email\",\n  label: \"Nuevo Email\",\n  type: \"email\"\n})), __jsx(\"div\", {\n  className: \"row\"\n}, __jsx(\"div\", {\n  className: \"col-md-12 text-right\"\n}, __jsx(Button, {\n  type: \"submit\",\n  disabled: isSubmitting,\n  loading: isSubmitting\n}, \"Cambiar datos\")))); // create Yup validation Schema\n\n\nconst getYupSchema = _ => {\n  const nullable3CharMinString = Yup.string().trim().nullable().required('Obligatorio').min(3, 'Debe tener 3 caracteres o más.');\n  return Yup.object({\n    email: nullable3CharMinString.email('Correo inválido')\n  });\n};\n\nexport default withAuth(changeEmailPage);","map":{"version":3,"sources":["/Users/rafael/Projects/somosgad/dale/pages/user/changeEmail.js"],"names":["Router","Head","Formik","Form","Yup","nookies","FormGroup","withAuth","FkInput","Layout","Button","api","CONFIG","changeEmailPage","layoutProps","user","updateUser","handleSubmit","fields","actions","msg","res","post","data","JSON","stringify","success","error","message","response","console","table","set","path","push","appName","email","oldEmail","getYupSchema","DataForm","isSubmitting","_","nullable3CharMinString","string","trim","nullable","required","min","object"],"mappings":"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","sourcesContent":["// nextjs imports\nimport Router from 'next/router'\nimport Head   from 'next/head'\n\n// react imports\nimport { Formik, Form } from 'formik'\nimport * as Yup from 'yup'\n\nimport nookies from 'nookies'\n\n// app imports\nimport FormGroup    from '~/components/layout/AuthModal/FormGroup'\nimport withAuth     from '~/components/withAuth'\nimport { FkInput }  from '~/components/Formik/fields'\nimport Layout       from '~/components/layout/Layout'\nimport Button       from '~/components/button'\nimport api          from '~/services/api'\nimport { CONFIG }   from '~/config'\n\nconst changeEmailPage = ({ layoutProps, user, updateUser }) => {\n\n  const handleSubmit = async (fields, actions) => {\n    var msg = ''\n\n    try {\n      const res = await api().post('email',fields)\n      updateUser(res.data)\n      msg = JSON.stringify({ success: \"Acceda al correo electrónico para confirmación\" })\n\n    }catch(error) {\n      var { message } = error.message ? error : error.response ? error.response.data : ''\n      console.table(error);\n      msg = JSON.stringify({ error: \"An Error Occured while updating: \" + message })\n    }finally {\n      nookies.set({}, 'flash_message', msg , { path: '/' })\n      Router.push('/user/account')\n    }\n  }\n\n  return (\n    <Layout {...layoutProps}>\n      <Head>\n        <title>Cambiar Email &lt; {CONFIG.appName}</title>\n      </Head>\n      <div className=\"rgpage container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-8 offset-md-2\">\n            <h1 className=\"h2\">Cambiar Email</h1>\n            { user &&\n              <Formik\n                initialValues={\n                  (({ email: oldEmail }) => {\n                    return { oldEmail, email: '' }\n                  })(user)\n                }\n                validationSchema={ getYupSchema() }\n                onSubmit={handleSubmit}\n                component={DataForm}\n              />\n            }\n          </div>\n        </div>\n      </div>\n      <style jsx>{`\n        .rgpage {\n          padding-top: 40px;\n          padding-bottom: 120px;\n        }\n        .h2 {\n          margin-bottom: 10px;\n        }\n        hr {\n          margin-top: 25px;\n          margin-bottom: 15px;\n          background-color: white;\n        }\n      `}</style>\n    </Layout>\n  );\n}\n\nconst DataForm = ({ isSubmitting }) => <Form>\n  <FormGroup>\n    <FkInput name=\"oldEmail\" label=\"Email Actual\" type=\"email\" disabled />\n  </FormGroup>\n  <FormGroup>\n    <FkInput name=\"email\" label=\"Nuevo Email\" type=\"email\" />\n  </FormGroup>\n\n  <div className=\"row\">\n    <div className=\"col-md-12 text-right\">\n      <Button type=\"submit\" disabled={isSubmitting} loading={isSubmitting}>\n        Cambiar datos\n      </Button>\n    </div>\n  </div>\n</Form>\n\n// create Yup validation Schema\nconst getYupSchema = _ => {\n  const nullable3CharMinString = Yup.string()\n    .trim().nullable()\n    .required('Obligatorio')\n    .min(3, 'Debe tener 3 caracteres o más.')\n\n  return Yup.object({\n    email: nullable3CharMinString\n      .email('Correo inválido'),\n  })\n}\n\nexport default withAuth(changeEmailPage)\n"]},"metadata":{},"sourceType":"module"}