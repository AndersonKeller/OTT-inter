{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport api from '../../../services/api';\nimport FormGroup from './FormGroup';\nimport Input from './Input';\nimport Button from '../../button';\n\nconst PasswordTab = ({\n  setLoading\n}) => {\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n  const {\n    0: emailSent,\n    1: setEmailSent\n  } = useState(false);\n  const {\n    0: message,\n    1: setMessage\n  } = useState('');\n  const {\n    0: error,\n    1: setError\n  } = useState(false);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n\n    try {\n      let {\n        data\n      } = await api().post('/forgot', {\n        email\n      });\n      console.table(data);\n      setEmailSent(true);\n      setMessage(data.message);\n    } catch (error) {\n      console.table(error);\n\n      if (error.response) {\n        const {\n          data,\n          status\n        } = error.response;\n        if (data) setError(data);\n      } else {\n        setError({\n          message: 'An error has occurred!'\n        });\n        console.log('error', error);\n      }\n    }\n\n    setLoading(false);\n  };\n\n  return __jsx(React.Fragment, null, emailSent ? __jsx(\"p\", null, message) : __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"intro-text\",\n    style: {\n      marginBottom: 15\n    }\n  }, __jsx(\"p\", null, \"\\xBFOlvidaste tu clave?\")), __jsx(\"form\", {\n    method: \"post\",\n    onSubmit: handleSubmit\n  }, __jsx(FormGroup, null, __jsx(Input, {\n    autoFocus: true,\n    id: \"email_recover\",\n    onChange: e => setEmail(e.target.value),\n    placeholder: \"E-mail\",\n    required: true,\n    type: \"email\",\n    value: email\n  }), error && __jsx(\"div\", {\n    className: \"invalid-feedback\"\n  }, error.message)), __jsx(Button, {\n    block: true,\n    className: \"enter-btn\",\n    size: \"sm\",\n    type: \"submit\"\n  }, \"Enviar Recuperaci\\xF3n\"))));\n};\n\nexport default PasswordTab;","map":{"version":3,"sources":["/Users/rafael/Projects/somosgad/dale/components/layout/AuthModal/PasswordTab.js"],"names":["useState","api","FormGroup","Input","Button","PasswordTab","setLoading","email","setEmail","emailSent","setEmailSent","message","setMessage","error","setError","handleSubmit","e","preventDefault","data","post","console","table","response","status","log","marginBottom","target","value"],"mappings":";;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAkB;AAEpC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAOC;AAAP,MAAmBR,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM;AAAA,OAACS,SAAD;AAAA,OAAYC;AAAZ,MAA4BV,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAA,OAACW,OAAD;AAAA,OAAUC;AAAV,MAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAA,OAACa,KAAD;AAAA,OAAQC;AAAR,MAAoBd,QAAQ,CAAC,KAAD,CAAlC;;AAEA,QAAMe,YAAY,GAAG,MAAMC,CAAN,IAAW;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AACAX,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAG;AACD,UAAI;AAAEY,QAAAA;AAAF,UAAW,MAAMjB,GAAG,GAAGkB,IAAN,CAAW,SAAX,EAAsB;AACzCZ,QAAAA;AADyC,OAAtB,CAArB;AAGAa,MAAAA,OAAO,CAACC,KAAR,CAAcH,IAAd;AACAR,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,MAAAA,UAAU,CAACM,IAAI,CAACP,OAAN,CAAV;AACD,KAPD,CAOC,OAAME,KAAN,EAAY;AACXO,MAAAA,OAAO,CAACC,KAAR,CAAcR,KAAd;;AACA,UAAIA,KAAK,CAACS,QAAV,EAAoB;AAClB,cAAM;AAAEJ,UAAAA,IAAF;AAAQK,UAAAA;AAAR,YAAmBV,KAAK,CAACS,QAA/B;AACA,YAAGJ,IAAH,EAASJ,QAAQ,CAACI,IAAD,CAAR;AACV,OAHD,MAGO;AACLJ,QAAAA,QAAQ,CAAC;AAACH,UAAAA,OAAO,EAAE;AAAV,SAAD,CAAR;AACAS,QAAAA,OAAO,CAACI,GAAR,CAAY,OAAZ,EAAqBX,KAArB;AACD;AACF;;AACDP,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GArBD;;AAuBA,SACE,4BACGG,SAAS,GACR,iBACGE,OADH,CADQ,GAMR,mBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,KAAK,EAAE;AAAEc,MAAAA,YAAY,EAAE;AAAhB;AAAnC,KACE,2CADF,CADF,EAIE;AAAM,IAAA,MAAM,EAAC,MAAb;AAAoB,IAAA,QAAQ,EAAEV;AAA9B,KACE,MAAC,SAAD,QACE,MAAC,KAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,EAAE,EAAC,eAFL;AAGE,IAAA,QAAQ,EAAEC,CAAC,IAAIR,QAAQ,CAACQ,CAAC,CAACU,MAAF,CAASC,KAAV,CAHzB;AAIE,IAAA,WAAW,EAAC,QAJd;AAKE,IAAA,QAAQ,MALV;AAME,IAAA,IAAI,EAAC,OANP;AAOE,IAAA,KAAK,EAAEpB;AAPT,IADF,EAUGM,KAAK,IAAI;AAAK,IAAA,SAAS,EAAC;AAAf,KAAmCA,KAAK,CAACF,OAAzC,CAVZ,CADF,EAaE,MAAC,MAAD;AAAQ,IAAA,KAAK,MAAb;AAAc,IAAA,SAAS,EAAC,WAAxB;AAAoC,IAAA,IAAI,EAAC,IAAzC;AAA8C,IAAA,IAAI,EAAC;AAAnD,8BAbF,CAJF,CAPJ,CADF;AA+BD,CA7DD;;AA+DA,eAAeN,WAAf","sourcesContent":["import {useState} from 'react'\nimport api from '../../../services/api'\nimport FormGroup from './FormGroup'\nimport Input from './Input'\nimport Button from '../../button'\n\nconst PasswordTab = ({setLoading}) => {\n\n  const [email,setEmail] = useState('')\n  const [emailSent, setEmailSent] = useState(false)\n  const [message, setMessage] = useState('')\n  const [error, setError] = useState(false)\n\n  const handleSubmit = async e => {\n    e.preventDefault()\n    setLoading(true)\n    try{\n      let { data } = await api().post('/forgot', {\n        email\n      })\n      console.table(data)\n      setEmailSent(true)\n      setMessage(data.message)\n    }catch(error){\n      console.table(error)\n      if (error.response) {\n        const { data, status } = error.response\n        if(data) setError(data)\n      } else {\n        setError({message: 'An error has occurred!'})\n        console.log('error', error)\n      }\n    }\n    setLoading(false)\n  }\n\n  return (\n    <>\n      {emailSent ?\n        <p>\n          {message}\n          {/* Acceda al correo electrónico registrado para para recuperar tu clave. */}\n        </p>\n      :\n        <div>\n          <div className=\"intro-text\" style={{ marginBottom: 15 }}>\n            <p>¿Olvidaste tu clave?</p>\n          </div>\n          <form method=\"post\" onSubmit={handleSubmit}>\n            <FormGroup>\n              <Input\n                autoFocus\n                id=\"email_recover\"\n                onChange={e => setEmail(e.target.value)}\n                placeholder=\"E-mail\"\n                required\n                type=\"email\"\n                value={email}\n              />\n              {error && <div className=\"invalid-feedback\">{error.message}</div>}\n            </FormGroup>\n            <Button block className=\"enter-btn\" size=\"sm\" type=\"submit\">Enviar Recuperación</Button>\n          </form>\n        </div>\n      }\n    </>\n  )\n}\n\nexport default PasswordTab\n"]},"metadata":{},"sourceType":"module"}