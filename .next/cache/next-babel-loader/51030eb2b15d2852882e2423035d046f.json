{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _withAuth = _interopRequireDefault(require(\"~/components/withAuth\"));\n\nvar _Layout = _interopRequireDefault(require(\"~/components/layout/Layout\"));\n\nvar _userData = _interopRequireDefault(require(\"./user-data\"));\n\nvar _react = require(\"react\");\n\nvar _constants = require(\"~/constants/constants\");\n\nvar _payment = _interopRequireDefault(require(\"~/pages/register/wizard/payment\"));\n\nvar _packages = _interopRequireDefault(require(\"./packages\"));\n\nvar _MultiStepIndicator = _interopRequireDefault(require(\"~/components/MultiStepIndicator\"));\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst CompleteTest = ({\n  api,\n  layoutProps,\n  packages,\n  user\n}) => {\n  const handleSubmit = (index, userData) => {\n    setWizardIndex(index);\n    setUserData(userData);\n  };\n\n  const requireds = _constants.IS_PRODUCTION;\n  const {\n    0: userData,\n    1: setUserData\n  } = (0, _react.useState)();\n  const {\n    0: values,\n    1: setValues\n  } = (0, _react.useState)({\n    package_id: '',\n    payment_method_id: null,\n    payment_os: null,\n    cash_payment_method_id: null,\n    terms: null,\n    discount_id: null\n  });\n  const {\n    0: wizardIndex,\n    1: setWizardIndex\n  } = (0, _react.useState)(0);\n  const {\n    0: loading,\n    1: setLoading\n  } = (0, _react.useState)();\n  const {\n    0: error,\n    1: setError\n  } = (0, _react.useState)();\n\n  const changeIndex = idx => {\n    setWizardIndex(idx);\n  };\n\n  const selectPackage = packageId => {\n    setValues({\n      package_id: packageId\n    });\n  };\n\n  function renderComponents() {\n    switch (wizardIndex) {\n      case 0:\n        return __jsx(_userData.default, {\n          api: api,\n          layoutProps: layoutProps,\n          handleSubmit: handleSubmit\n        });\n\n      case 1:\n        return __jsx(_packages.default, {\n          packages: packages,\n          layoutProps: layoutProps,\n          selectPackage: selectPackage,\n          handleSubmit: handleSubmit\n        });\n\n      case 2:\n        return __jsx(_payment.default, {\n          package_id: values.package_id,\n          packages: packages,\n          userData: userData,\n          api,\n          error,\n          requireds\n        });\n    }\n  }\n\n  return __jsx(_Layout.default, null, __jsx(_MultiStepIndicator.default, {\n    index: wizardIndex,\n    onClick: handleSubmit\n  }), renderComponents());\n};\n\nCompleteTest.getInitialProps = async ctx => {\n  const {\n    api,\n    res,\n    user\n  } = ctx; // if user has already completed registry, redirect it\n  // if (user.register_completed_at) {\n  //   let message = JSON.stringify({ info: \"Ya ha completado su registro.\" })\n  //   nookies.set(ctx, 'flash_message', message, { path: '/' })\n  //   if (res) {\n  //     res.redirect('/')\n  //     res.end()\n  //     return {}\n  //   } else {\n  //     Router.back()\n  //   }\n  // }\n  // get packages\n\n  let packages;\n\n  try {\n    const {\n      data\n    } = await api.get('packages');\n    packages = {\n      items: data\n    };\n  } catch (error) {\n    packages = {\n      error\n    };\n  } // return\n\n\n  return {\n    packages,\n    user\n  };\n};\n\nvar _default = (0, _withAuth.default)(CompleteTest, true);\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/rafael/Projects/somosgad/dale/pages/register/wizard/complete-test.js"],"names":["CompleteTest","api","layoutProps","packages","user","handleSubmit","index","userData","setWizardIndex","setUserData","requireds","IS_PRODUCTION","values","setValues","package_id","payment_method_id","payment_os","cash_payment_method_id","terms","discount_id","wizardIndex","loading","setLoading","error","setError","changeIndex","idx","selectPackage","packageId","renderComponents","getInitialProps","ctx","res","data","get","items"],"mappings":"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","sourcesContent":["import withAuth from \"~/components/withAuth\";\nimport Layout from \"~/components/layout/Layout\";\nimport UserData from \"./user-data\";\nimport { useState } from \"react\";\nimport { IS_PRODUCTION } from \"~/constants/constants\";\n\nimport Payment from \"~/pages/register/wizard/payment\";\nimport Packages from \"./packages\"\nimport MultiStepIndicator from \"~/components/MultiStepIndicator\";\n\nconst CompleteTest = ({ api, layoutProps, packages, user }) => {\n\n\n  const handleSubmit = (index, userData) => {\n    setWizardIndex(index);\n    setUserData(userData);\n  }\n\n  const requireds = IS_PRODUCTION\n  const [userData, setUserData] = useState();\n\n  const [values, setValues] = useState({\n    package_id: '',\n    payment_method_id: null,\n    payment_os: null,\n    cash_payment_method_id: null,\n    terms: null,\n    discount_id: null,\n  })\n\n  const [wizardIndex, setWizardIndex] = useState(0);\n\n  const [loading, setLoading] = useState()\n  const [error, setError] = useState()\n\n\n  const changeIndex = (idx) => {\n    setWizardIndex(idx);\n  }\n\n  const selectPackage = (packageId) => {\n    setValues({\n      package_id: packageId\n    })\n  }\n\n  function renderComponents() {\n\n    switch (wizardIndex) {\n\n      case 0:\n        return <UserData\n          api={ api }\n          layoutProps={ layoutProps }\n          handleSubmit={ handleSubmit }\n        />\n      case 1:\n        return <Packages packages={ packages } layoutProps={ layoutProps } selectPackage={ selectPackage }\n                         handleSubmit={ handleSubmit }/>\n      case 2:\n        return <Payment\n          { ...{\n            package_id: values.package_id,\n            packages: packages,\n            userData: userData,\n            api,\n            error,\n            requireds,\n          } }\n        />\n\n    }\n  }\n\n  return (\n\n    <Layout>\n\n      <MultiStepIndicator index={ wizardIndex } onClick={ handleSubmit }/>\n\n      { renderComponents() }\n\n    </Layout>\n\n\n  )\n\n}\n\nCompleteTest.getInitialProps = async ctx => {\n\n  const { api, res, user } = ctx\n\n  // if user has already completed registry, redirect it\n  // if (user.register_completed_at) {\n  //   let message = JSON.stringify({ info: \"Ya ha completado su registro.\" })\n  //   nookies.set(ctx, 'flash_message', message, { path: '/' })\n  //   if (res) {\n  //     res.redirect('/')\n  //     res.end()\n  //     return {}\n  //   } else {\n  //     Router.back()\n  //   }\n  // }\n\n  // get packages\n  let packages\n  try {\n    const { data } = await api.get('packages')\n    packages = { items: data }\n  } catch (error) {\n    packages = { error }\n  }\n\n  // return\n  return { packages, user }\n}\n\n\nexport default withAuth(CompleteTest, true);\n"]},"metadata":{},"sourceType":"script"}