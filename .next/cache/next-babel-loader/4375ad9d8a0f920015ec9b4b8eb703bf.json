{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n//react\nimport { useEffect, useState } from 'react'; //components\n\nimport FormGroup from '~/components/layout/AuthModal/FormGroup';\nimport Label from '~/components/layout/AuthModal/Label';\nimport Input from '~/components/layout/AuthModal/Input'; // Payment\n\nvar Payment = function Payment(_ref) {\n  var api = _ref.api,\n      cash_payment_method_id = _ref.cash_payment_method_id,\n      error = _ref.error,\n      isCardPayment = _ref.isCardPayment,\n      isPayUReady = _ref.isPayUReady,\n      loading = _ref.loading,\n      onCashPaymentMethodChange = _ref.onCashPaymentMethodChange,\n      onChange = _ref.onChange,\n      payment_method_id = _ref.payment_method_id,\n      POS = _ref.POS,\n      requireds = _ref.requireds,\n      validationError = _ref.validationError;\n\n  // payment methods\n  var _useState = useState(),\n      paymentMethods = _useState[0],\n      setPaymentMethods = _useState[1]; // cash payment methods\n\n\n  var _useState2 = useState(),\n      cashPaymentMethods = _useState2[0],\n      setCashPaymentMethods = _useState2[1]; // get payment methods\n\n\n  useEffect(function (_) {\n    (function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_) {\n        var _yield$api$get, data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return api.get('payment-methods');\n\n              case 2:\n                _yield$api$get = _context.sent;\n                data = _yield$api$get.data;\n                setPaymentMethods(data);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    })()();\n  }, []); // init card secure fields\n\n  useEffect(function (_) {\n    isPayUReady && isCardPayment && POS.initSecureFields('card-secure-fields');\n  }, [isPayUReady, isCardPayment]); // get cash payment methods\n\n  useEffect(function (_) {\n    (function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_) {\n        var _yield$api$get2, data;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return api.get('cash-payment-methods');\n\n              case 2:\n                _yield$api$get2 = _context2.sent;\n                data = _yield$api$get2.data;\n                setCashPaymentMethods(data);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    })()();\n  }, []);\n  return __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"offset-md-2 col-md-8\"\n  }, __jsx(\"h3\", {\n    className: \"h3\"\n  }, \"Pago\"), __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-md-6\"\n  }, __jsx(FormGroup, null, paymentMethods && paymentMethods.map(function (paymentMethod, key) {\n    return __jsx(InputRadio, {\n      key: key,\n      label: paymentMethod.name,\n      name: \"payment\",\n      onChange: onChange,\n      state: payment_method_id,\n      value: paymentMethod.id\n    });\n  }), validationError && __jsx(\"div\", {\n    className: \"invalid-feedback\"\n  }, validationError))), __jsx(\"div\", {\n    className: \"col-md-6\"\n  }, isCardPayment ? __jsx(\"div\", {\n    className: \"card-inputs\"\n  }, __jsx(FormGroup, null, __jsx(Label, {\n    htmlFor: \"cardholder-name\"\n  }, \"Nombre impreso en tarjeta\"), __jsx(Input, {\n    id: \"cardholder-name\",\n    name: \"cardholder-name\",\n    required: requireds,\n    type: \"text\"\n  })), __jsx(FormGroup, null, __jsx(\"div\", {\n    id: \"card-secure-fields\"\n  }), !loading && error && error.errors && error.errors.payment_os && __jsx(\"div\", {\n    className: \"invalid-feedback\"\n  }, error.errors.payment_os))) // cash payment methods\n  : payment_method_id === 3 && __jsx(FormGroup, null, cashPaymentMethods == null ? __jsx(\"p\", null, \"Cargando...\") : cashPaymentMethods.length ? cashPaymentMethods.map(function (item, key) {\n    return __jsx(InputRadio, {\n      key: key,\n      label: item.name,\n      name: \"cash_payment_method_id\",\n      onChange: onCashPaymentMethodChange,\n      state: cash_payment_method_id,\n      value: item.id\n    });\n  }) : __jsx(\"p\", null, \"Sin m\\xE9todo de pago configurado.\"), !loading && error && error.errors && error.errors.cash_payment_method_id && __jsx(\"div\", {\n    className: \"invalid-feedback\"\n  }, error.errors.cash_payment_method_id))))));\n}; // Radio\n\n\nvar InputRadio = function InputRadio(_ref4) {\n  var label = _ref4.label,\n      name = _ref4.name,\n      onChange = _ref4.onChange,\n      state = _ref4.state,\n      value = _ref4.value;\n  return __jsx(\"label\", {\n    className: \"jsx-3479789161\"\n  }, __jsx(\"input\", _extends({\n    checked: state === value,\n    type: \"radio\"\n  }, {\n    name: name,\n    onChange: onChange,\n    value: value\n  }, {\n    className: \"jsx-3479789161\"\n  })), __jsx(\"span\", {\n    className: \"jsx-3479789161\" + \" \" + \"fake-input\"\n  }, __jsx(\"span\", {\n    className: \"jsx-3479789161\" + \" \" + \"fake-radio\"\n  }), __jsx(\"span\", {\n    className: \"jsx-3479789161\"\n  }, label)), __jsx(_JSXStyle, {\n    id: \"3479789161\"\n  }, [\"label.jsx-3479789161{display:block;margin-bottom:5px;overflow:hidden;position:relative;}\", \"input.jsx-3479789161{opacity:0;position:absolute;}\", \".fake-input.jsx-3479789161{border:2px solid var(--primary);border-radius:4px;display:block;font-size:1rem;line-height:1.4;padding:.375rem .75rem;-webkit-transition:background-color .3s,border-color .3s,color .3s;transition:background-color .3s,border-color .3s,color .3s;}\", \".fake-radio.jsx-3479789161{background-color:var(--white);border:1px solid var(--gray2);border-radius:50%;display:inline-block;height:15px;margin-right:7.5px;padding:1px;vertical-align:-2px;width:15px;}\", \".fake-radio.jsx-3479789161::before{background-color:var(--black);border-radius:50%;content:'';display:block;opacity:0;height:100%;-webkit-transition:opacity .3s;transition:opacity .3s;width:100%;}\", \"input.jsx-3479789161:checked+.fake-input.jsx-3479789161{background-color:var(--primary);color:white;}\", \"input.jsx-3479789161:checked+.fake-input.jsx-3479789161 .fake-radio.jsx-3479789161::before{opacity:1;}\"]));\n};\n\nexport default Payment;","map":{"version":3,"sources":["/Users/rafael/Projects/somosgad/dale/pages/user/changePlan/payment.js"],"names":["useEffect","useState","FormGroup","Label","Input","Payment","api","cash_payment_method_id","error","isCardPayment","isPayUReady","loading","onCashPaymentMethodChange","onChange","payment_method_id","POS","requireds","validationError","paymentMethods","setPaymentMethods","cashPaymentMethods","setCashPaymentMethods","_","get","data","initSecureFields","map","paymentMethod","key","name","id","errors","payment_os","length","item","InputRadio","label","state","value"],"mappings":"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","sourcesContent":["//react\nimport { useEffect, useState } from 'react'\n\n//components\nimport FormGroup    from '~/components/layout/AuthModal/FormGroup'\nimport Label        from '~/components/layout/AuthModal/Label'\nimport Input        from '~/components/layout/AuthModal/Input'\n\n// Payment\nconst Payment = ({\n  api,\n  cash_payment_method_id,\n  error,\n  isCardPayment,\n  isPayUReady,\n  loading,\n  onCashPaymentMethodChange,\n  onChange,\n  payment_method_id,\n  POS,\n  requireds,\n  validationError\n}) => {\n\n  // payment methods\n  const [ paymentMethods, setPaymentMethods ] = useState()\n  // cash payment methods\n  const [ cashPaymentMethods, setCashPaymentMethods ] = useState()\n\n  // get payment methods\n  useEffect(_ => {\n    (async _ => {\n      const { data } = await api.get('payment-methods')\n      setPaymentMethods(data)\n    })()\n  }, [])\n\n  // init card secure fields\n  useEffect(_ => { isPayUReady && isCardPayment && POS.initSecureFields('card-secure-fields') },\n    [isPayUReady, isCardPayment]\n  )\n\n  // get cash payment methods\n  useEffect(_ => {\n    (async _ => {\n      const { data } = await api.get('cash-payment-methods')\n      setCashPaymentMethods(data)\n    })()\n  }, [])\n\n\n  return (\n    <div className=\"row\">\n      <div className=\"offset-md-2 col-md-8\">\n        <h3 className=\"h3\">Pago</h3>\n        <div className=\"row\">\n\n          <div className=\"col-md-6\">\n            <FormGroup>\n              { paymentMethods && paymentMethods.map((paymentMethod, key) => (\n                <InputRadio\n                  key={key}\n                  label={paymentMethod.name}\n                  name=\"payment\"\n                  onChange={onChange}\n                  state={payment_method_id}\n                  value={paymentMethod.id}\n                />\n              )) }\n              { validationError && (\n                <div className=\"invalid-feedback\">{validationError}</div>\n              ) }\n            </FormGroup>\n          </div>\n\n          <div className=\"col-md-6\">\n\n            {/* credit / debit card */}\n            {isCardPayment ? (\n              <div className=\"card-inputs\">\n\n                {/* mandatory data */}\n                <FormGroup>\n                  <Label htmlFor=\"cardholder-name\">Nombre impreso en tarjeta</Label>\n                  <Input id=\"cardholder-name\" name=\"cardholder-name\" required={requireds} type=\"text\" />\n                </FormGroup>\n\n                {/* card fields */}\n                <FormGroup>\n                  <div id=\"card-secure-fields\" />\n                  { ! loading && error && error.errors && error.errors.payment_os && (\n                    <div className=\"invalid-feedback\">{error.errors.payment_os}</div>\n                  ) }\n                </FormGroup>\n              </div>\n\n            // cash payment methods\n            ) : payment_method_id === 3 && (\n              <FormGroup>\n                {cashPaymentMethods == null ? (\n                  <p>Cargando...</p>\n                ) : cashPaymentMethods.length ? cashPaymentMethods.map((item, key) => (\n                  <InputRadio\n                    key={key}\n                    label={item.name}\n                    name=\"cash_payment_method_id\"\n                    onChange={onCashPaymentMethodChange}\n                    state={cash_payment_method_id}\n                    value={item.id}\n                  />\n                )) : (\n                  <p>Sin método de pago configurado.</p>\n                )}\n                { ! loading && error && error.errors && error.errors.cash_payment_method_id && (\n                  <div className=\"invalid-feedback\">{error.errors.cash_payment_method_id}</div>\n                ) }\n              </FormGroup>\n            ) }\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\n// Radio\nconst InputRadio = ({ label, name, onChange, state, value }) => {\n  return (\n    <label>\n      <input checked={state === value} type=\"radio\" {...{name, onChange, value}} />\n      <span className=\"fake-input\">\n        <span className=\"fake-radio\"></span>\n        <span>{label}</span>\n      </span>\n      <style jsx>{`\n        label {\n          display: block;\n          margin-bottom: 5px;\n          overflow: hidden;\n          position: relative;\n        }\n        input {\n          opacity: 0;\n          position: absolute;\n        }\n        .fake-input {\n          border: 2px solid var(--primary);\n          border-radius: 4px;\n          display: block;\n          font-size: 1rem;\n          line-height: 1.4;\n          padding: .375rem .75rem;\n          transition: background-color .3s, border-color .3s, color .3s;\n        }\n        .fake-radio {\n          background-color: var(--white);\n          border: 1px solid var(--gray2);\n          border-radius: 50%;\n          display: inline-block;\n          height: 15px;\n          margin-right: 7.5px;\n          padding: 1px;\n          vertical-align: -2px;\n          width: 15px;\n        }\n        .fake-radio::before {\n          background-color: var(--black);\n          border-radius: 50%;\n          content: '';\n          display: block;\n          opacity: 0;\n          height: 100%;\n          transition: opacity .3s;\n          width: 100%;\n        }\n        input:checked + .fake-input {\n          background-color: var(--primary);\n          color: white;\n        }\n        input:checked + .fake-input .fake-radio::before {\n          opacity: 1;\n        }\n      `}</style>\n    </label>\n  )\n}\n\nexport default Payment\n"]},"metadata":{},"sourceType":"module"}