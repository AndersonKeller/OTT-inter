{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport SafeJSONParse from 'json-parse-safe';\nimport React, { useContext, useEffect } from 'react';\nimport Router from 'next/router';\nimport nookies from 'nookies';\nimport UserContext from '~/contexts/UserContext';\nimport withApi from '~/components/withApi';\n\nconst withAuth = (WrappedComponent, update = false) => {\n  const WithAuth = props => {\n    const {\n      user,\n      updateUser\n    } = useContext(UserContext);\n    useEffect(_ => {\n      if (!user) {\n        Router.push('/');\n      }\n    }, [user]);\n    return __jsx(WrappedComponent, _extends({\n      updateUser: updateUser\n    }, props));\n  };\n\n  WithAuth.getInitialProps = async ctx => {\n    const {\n      api\n    } = ctx;\n    let user;\n\n    if (update) {\n      try {\n        // get updated user\n        const {\n          data\n        } = await api.get('user');\n        user = data; // set user to cookies\n\n        nookies.set(ctx, 'user', JSON.stringify(user), {\n          path: '/'\n        });\n      } catch (error) {}\n    } else {\n      const {\n        user: userString\n      } = nookies.get(ctx, 'user');\n      user = SafeJSONParse(userString).value;\n    }\n\n    if (!user) {\n      const {\n        pathname,\n        res\n      } = ctx;\n      const redirectRoute = `/login?redirectTo=${pathname}`;\n      console.log('redirectroute', redirectRoute);\n\n      if (res) {\n        res.redirect(redirectRoute);\n        res.end();\n      } else {\n        Router.replace(redirectRoute);\n      }\n\n      return {};\n    }\n\n    if (WrappedComponent.getInitialProps) {\n      // append user to the context\n      ctx.user = user;\n      const componentProps = await WrappedComponent.getInitialProps(ctx);\n      return _objectSpread({\n        user\n      }, componentProps);\n    } else {\n      return {\n        user\n      };\n    }\n  };\n\n  WithAuth.displayName = `WithAuth(${getDisplayName(WrappedComponent)})`; // wrap this hoc on withApi hoc\n\n  return withApi(WithAuth);\n};\n\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\n\nexport default withAuth;","map":{"version":3,"sources":["/Users/rafael/Projects/somosgad/dale/components/withAuth/index.js"],"names":["SafeJSONParse","React","useContext","useEffect","Router","nookies","UserContext","withApi","withAuth","WrappedComponent","update","WithAuth","props","user","updateUser","_","push","getInitialProps","ctx","api","data","get","set","JSON","stringify","path","error","userString","value","pathname","res","redirectRoute","console","log","redirect","end","replace","componentProps","displayName","getDisplayName","name"],"mappings":"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","sourcesContent":["import SafeJSONParse from 'json-parse-safe'\nimport React, { useContext, useEffect } from 'react'\nimport Router from 'next/router'\nimport nookies from 'nookies'\nimport UserContext from '~/contexts/UserContext'\nimport withApi from '~/components/withApi'\n\nconst withAuth = (WrappedComponent, update = false) => {\n\n  const WithAuth = props => {\n    const { user, updateUser } = useContext(UserContext)\n    useEffect( _ => {\n      if ( ! user) {\n        Router.push('/')\n      }\n    }, [user])\n    return <WrappedComponent updateUser={updateUser} {...props} />\n  }\n\n  WithAuth.getInitialProps = async ctx => {\n    const { api } = ctx\n    let user\n    if (update) {\n      try {\n\n        // get updated user\n        const { data } = await api.get('user')\n        user = data\n\n        // set user to cookies\n        nookies.set(ctx, 'user', JSON.stringify(user), { path: '/' })\n\n      } catch(error) { }\n    } else {\n      const { user: userString } = nookies.get(ctx, 'user')\n      user = SafeJSONParse(userString).value\n    }\n    if ( ! user ) {\n      const { pathname, res } = ctx\n      const redirectRoute = `/login?redirectTo=${pathname}`\n      console.log('redirectroute', redirectRoute)\n      if (res) {\n        res.redirect(redirectRoute)\n        res.end()\n      } else {\n        Router.replace(redirectRoute)\n      }\n      return { }\n    }\n    if (WrappedComponent.getInitialProps) {\n\n      // append user to the context\n      ctx.user = user\n\n      const componentProps = await WrappedComponent.getInitialProps(ctx)\n      return { user, ...componentProps }\n    } else {\n      return { user }\n    }\n  }\n\n  WithAuth.displayName = `WithAuth(${getDisplayName(WrappedComponent)})`;\n\n  // wrap this hoc on withApi hoc\n  return withApi(WithAuth)\n}\n\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\n\nexport default withAuth\n"]},"metadata":{},"sourceType":"module"}