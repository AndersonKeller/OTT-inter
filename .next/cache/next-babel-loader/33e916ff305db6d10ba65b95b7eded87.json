{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Router from 'next/router';\nimport nookies from 'nookies';\nimport { useEffect, useState } from 'react';\nimport Button from '~/components/button';\nimport H2 from '~/components/h2';\nimport Layout from '~/components/layout/Layout';\nimport withAuth from '~/components/withAuth';\nimport { CONFIG } from '~/config';\n\nvar RegisterConfirmPage = function RegisterConfirmPage(_ref) {\n  var downloadLink = _ref.downloadLink,\n      layoutProps = _ref.layoutProps,\n      link = _ref.link;\n\n  var _useState = useState(10),\n      seconds = _useState[0],\n      setSeconds = _useState[1];\n\n  var _useState2 = useState(true),\n      timer = _useState2[0],\n      setTimer = _useState2[1]; // useEffect(_ => {\n  //   if (timer) {\n  //     const interval = setInterval(_ => {\n  //       setSeconds(seconds => {\n  //         if (seconds - 1 <= 0) {\n  //           clearInterval(interval)\n  //           setTimer(false)\n  //           window.open(downloadLink, '_self');\n  //         }\n  //         return seconds - 1\n  //       })\n  //     }, 1000)\n  //     return _ => clearInterval(interval)\n  //   }\n  // }, [timer])\n\n\n  function handleClick() {\n    setTimer(false);\n  }\n\n  return __jsx(Layout, layoutProps, __jsx(\"div\", {\n    className: \"jsx-469810096\" + \" \" + \"register-confirm container text-center\"\n  }, __jsx(\"h1\", {\n    className: \"jsx-469810096\"\n  }, \"Gracias\"), __jsx(H2, {\n    mb: 3,\n    uppercase: true\n  }, \"\\xA1Bienvenido a \", CONFIG.appName, \"!\"), __jsx(\"p\", {\n    className: \"jsx-469810096\" + \" \" + \"lead register-confirm__lead\"\n  }, timer ? __jsx(React.Fragment, null, \"El recibo bancario se descargar\\xE1 en \", seconds, \" segundos.\") : __jsx(React.Fragment, null, \"Si la descarga no se inici\\xF3 autom\\xE1ticamente,\", __jsx(\"br\", {\n    className: \"jsx-469810096\" + \" \" + \"d-none d-md-inline\"\n  }), \" h\\xE1z click en el bot\\xF3n de abajo.\")), __jsx(\"div\", {\n    className: \"jsx-469810096\" + \" \" + \"register-confirm__btn-container\"\n  }, __jsx(Button, {\n    href: link,\n    onClick: handleClick,\n    target: \"_blank\"\n  }, \"Abrir Recibo Bancario\")), !timer && __jsx(\"p\", {\n    className: \"jsx-469810096\" + \" \" + \"small register-confirm__small\"\n  }, \"Su plan se activar\\xE1 despu\\xE9s de la confirmaci\\xF3n del pago.\")), __jsx(_JSXStyle, {\n    id: \"469810096\"\n  }, [\".register-confirm.jsx-469810096{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;height:100%;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;line-height:normal;padding-bottom:2.5%;}\", \"h1.jsx-469810096{color:var(--primary);}\", \".register-confirm__lead.jsx-469810096{margin-bottom:30px;}\", \".register-confirm__btn-container.jsx-469810096 .btn,.register-confirm__btn-container.jsx-469810096 .btn:active{border-bottom:5px solid var(--primary-hover);line-height:1;}\", \".register-confirm__small.jsx-469810096{margin-top:30px;opacity:.5;}\"]));\n};\n\nRegisterConfirmPage.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var api, query, res, user, message;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            api = ctx.api, query = ctx.query, res = ctx.res, user = ctx.user; // if the user hasn't completed the registry\n\n            if (user.register_completed_at) {\n              _context.next = 11;\n              break;\n            }\n\n            message = JSON.stringify({\n              info: 'Necesitas completar tu registro.'\n            });\n            nookies.set(ctx, 'flash_message', message, {\n              path: '/'\n            });\n\n            if (!res) {\n              _context.next = 10;\n              break;\n            }\n\n            res.redirect('/register/complete');\n            res.end();\n            return _context.abrupt(\"return\", {});\n\n          case 10:\n            Router.back();\n\n          case 11:\n            return _context.abrupt(\"return\", {});\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default withAuth(RegisterConfirmPage, true);","map":{"version":3,"sources":["/Users/rafael/Projects/somosgad/dale/pages/register/confirm.js"],"names":["Router","nookies","useEffect","useState","Button","H2","Layout","withAuth","CONFIG","RegisterConfirmPage","downloadLink","layoutProps","link","seconds","setSeconds","timer","setTimer","handleClick","appName","getInitialProps","ctx","api","query","res","user","register_completed_at","message","JSON","stringify","info","set","path","redirect","end","back"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,aAAnB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,EAAP,MAAe,iBAAf;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,MAAT,QAAuB,UAAvB;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAyC;AAAA,MAAtCC,YAAsC,QAAtCA,YAAsC;AAAA,MAAxBC,WAAwB,QAAxBA,WAAwB;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBAErCT,QAAQ,CAAC,EAAD,CAF6B;AAAA,MAE5DU,OAF4D;AAAA,MAEnDC,UAFmD;;AAAA,mBAGzCX,QAAQ,CAAC,IAAD,CAHiC;AAAA,MAG5DY,KAH4D;AAAA,MAGrDC,QAHqD,kBAKnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,WAASC,WAAT,GAAuB;AACrBD,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACD;;AAED,SACE,MAAC,MAAD,EAAYL,WAAZ,EACE;AAAA,uCAAe;AAAf,KAEE;AAAA;AAAA,eAFF,EAIE,MAAC,EAAD;AAAI,IAAA,EAAE,EAAE,CAAR;AAAW,IAAA,SAAS;AAApB,0BAAoCH,MAAM,CAACU,OAA3C,MAJF,EAME;AAAA,uCAAa;AAAb,KACGH,KAAK,GAAG,uEAC8BF,OAD9B,eAAH,GAEA,kFACwC;AAAA,uCAAc;AAAd,IADxC,2CAHR,CANF,EAcE;AAAA,uCAAe;AAAf,KACE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAED,IAAd;AAAoB,IAAA,OAAO,EAAEK,WAA7B;AAA0C,IAAA,MAAM,EAAC;AAAjD,6BADF,CAdF,EAkBG,CAACF,KAAD,IACC;AAAA,uCAAa;AAAb,yEAnBJ,CADF;AAAA;AAAA,sxBADF;AAqDD,CA9ED;;AAgFAN,mBAAmB,CAACU,eAApB;AAAA,uEAAsC,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAE7BC,YAAAA,GAF6B,GAEJD,GAFI,CAE7BC,GAF6B,EAExBC,KAFwB,GAEJF,GAFI,CAExBE,KAFwB,EAEjBC,GAFiB,GAEJH,GAFI,CAEjBG,GAFiB,EAEZC,IAFY,GAEJJ,GAFI,CAEZI,IAFY,EAIpC;;AAJoC,gBAK/BA,IAAI,CAACC,qBAL0B;AAAA;AAAA;AAAA;;AAM5BC,YAAAA,OAN4B,GAMlBC,IAAI,CAACC,SAAL,CAAe;AAAEC,cAAAA,IAAI,EAAE;AAAR,aAAf,CANkB;AAOlC5B,YAAAA,OAAO,CAAC6B,GAAR,CAAYV,GAAZ,EAAiB,eAAjB,EAAkCM,OAAlC,EAA2C;AAAEK,cAAAA,IAAI,EAAE;AAAR,aAA3C;;AAPkC,iBAQ9BR,GAR8B;AAAA;AAAA;AAAA;;AAShCA,YAAAA,GAAG,CAACS,QAAJ,CAAa,oBAAb;AACAT,YAAAA,GAAG,CAACU,GAAJ;AAVgC,6CAWzB,EAXyB;;AAAA;AAahCjC,YAAAA,MAAM,CAACkC,IAAP;;AAbgC;AAAA,6CAyC7B,EAzC6B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtC;;AAAA;AAAA;AAAA;AAAA;;AA4CA,eAAe3B,QAAQ,CAACE,mBAAD,EAAsB,IAAtB,CAAvB","sourcesContent":["import Router from 'next/router'\nimport nookies from 'nookies'\nimport { useEffect, useState } from 'react'\nimport Button from '~/components/button'\nimport H2 from '~/components/h2'\nimport Layout from '~/components/layout/Layout'\nimport withAuth from '~/components/withAuth'\nimport { CONFIG } from '~/config'\n\nconst RegisterConfirmPage = ({ downloadLink, layoutProps, link }) => {\n\n  const [seconds, setSeconds] = useState(10)\n  const [timer, setTimer] = useState(true)\n\n  // useEffect(_ => {\n  //   if (timer) {\n  //     const interval = setInterval(_ => {\n  //       setSeconds(seconds => {\n  //         if (seconds - 1 <= 0) {\n  //           clearInterval(interval)\n  //           setTimer(false)\n  //           window.open(downloadLink, '_self');\n  //         }\n  //         return seconds - 1\n  //       })\n  //     }, 1000)\n  //     return _ => clearInterval(interval)\n  //   }\n  // }, [timer])\n\n  function handleClick() {\n    setTimer(false)\n  }\n\n  return (\n    <Layout {...layoutProps}>\n      <div className=\"register-confirm container text-center\">\n\n        <h1>Gracias</h1>\n\n        <H2 mb={3} uppercase>¡Bienvenido a {CONFIG.appName}!</H2>\n\n        <p className=\"lead register-confirm__lead\">\n          {timer ? <>\n            El recibo bancario se descargará en {seconds} segundos.\n          </> : <>\n            Si la descarga no se inició automáticamente,<br className=\"d-none d-md-inline\" /> ház click en el botón de abajo.\n          </>}\n        </p>\n\n        <div className=\"register-confirm__btn-container\">\n          <Button href={link} onClick={handleClick} target=\"_blank\">Abrir Recibo Bancario</Button>\n        </div>\n\n        {!timer && (\n          <p className=\"small register-confirm__small\">Su plan se activará después de la confirmación del pago.</p>\n        )}\n\n      </div>\n      <style jsx>{`\n        .register-confirm {\n          align-items: center;\n          display: flex;\n          flex-direction: column;\n          height: 100%;\n          justify-content: center;\n          line-height: normal;\n          padding-bottom: 2.5%;\n        }\n        h1 {\n          color: var(--primary);\n        }\n        .register-confirm__lead {\n          margin-bottom: 30px;\n        }\n        .register-confirm__btn-container :global(.btn),\n        .register-confirm__btn-container :global(.btn):active {\n          border-bottom: 5px solid var(--primary-hover);\n          line-height: 1;\n        }\n        .register-confirm__small {\n          margin-top: 30px;\n          opacity: .5;\n        }\n      `}</style>\n    </Layout>\n  )\n}\n\nRegisterConfirmPage.getInitialProps = async ctx => {\n\n  const {api, query, res, user} = ctx\n\n  // if the user hasn't completed the registry\n  if (!user.register_completed_at) {\n    const message = JSON.stringify({ info: 'Necesitas completar tu registro.' })\n    nookies.set(ctx, 'flash_message', message, { path: '/' })\n    if (res) {\n      res.redirect('/register/complete')\n      res.end()\n      return {}\n    } else {\n      Router.back()\n    }\n  }\n\n  // // get download_link and link from router query if it comes\n  // let {download_link: downloadLink, link} = query\n  //\n  // // if it doesn't come, try to get the last cash order\n  // if (!downloadLink || !link) {\n  //   const {data: cashOrder} = await api.get('cash-orders/last');\n  //\n  //   // if no pending cash order is found, redirect to user account\n  //   if (!cashOrder) {\n  //     const message = JSON.stringify({ info: 'No tiene recibos bancarios abiertos.' })\n  //     nookies.set(ctx, 'flash_message', message, { path: '/' })\n  //     if (res) {\n  //       res.redirect('/user/account')\n  //       res.end()\n  //       return {}\n  //     } else {\n  //       Router.back()\n  //     }\n  //   }\n  //\n  //   downloadLink = cashOrder.download_link\n  //   link = cashOrder.link\n  // }\n\n  return {}\n}\n\nexport default withAuth(RegisterConfirmPage, true)\n"]},"metadata":{},"sourceType":"module"}