{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useField } from 'formik';\nimport Select from '../Select/Select';\nimport Label from '../layout/AuthModal/Label';\nimport Input from '../layout/AuthModal/Input'; // create formik input field\n\nexport const FkInput = (_ref) => {\n  let {\n    style,\n    label\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"style\", \"label\"]);\n\n  const [field, meta] = useField(props);\n  field.value = field.value || '';\n  return __jsx(React.Fragment, null, props.type == 'hidden' ? '' : __jsx(Label, {\n    htmlFor: props.id || props.name\n  }, label), __jsx(Input, _extends({\n    style: _objectSpread({\n      color: 'black'\n    }, style)\n  }, field, props)), meta.touched && meta.error ? __jsx(\"div\", {\n    className: \"invalid-feedback\"\n  }, meta.error) : null);\n}; // create formik select field\n\nexport const FkSelect = (_ref2) => {\n  let {\n    style,\n    label,\n    list\n  } = _ref2,\n      props = _objectWithoutProperties(_ref2, [\"style\", \"label\", \"list\"]);\n\n  const [field, meta] = useField(props);\n  field.value = field.value || '';\n  let opts = list && list.length ? [{\n    id: 0,\n    name: `Selecciona tu ${label}`\n  }, ...list] : [{\n    id: 0,\n    name: `Selecciona tu ${label}`\n  }];\n  return __jsx(React.Fragment, null, __jsx(Label, {\n    htmlFor: props.id || props.name\n  }, label), __jsx(Select, _extends({\n    style: _objectSpread({\n      color: 'black'\n    }, style)\n  }, field, props), list && list.length ? opts.map((opt, key) => __jsx(\"option\", _extends({\n    key\n  }, {\n    value: opt.id\n  }), opt.name)) : __jsx(\"option\", {\n    disabled: true,\n    value: 0\n  }, `Incapaz de cargar ${label}`)), meta.touched && meta.error ? __jsx(\"div\", {\n    className: \"invalid-feedback\"\n  }, meta.error) : null);\n};","map":{"version":3,"sources":["/Users/rafael/Projects/somosgad/dale/components/Formik/fields.js"],"names":["useField","Select","Label","Input","FkInput","style","label","props","field","meta","value","type","id","name","color","touched","error","FkSelect","list","opts","length","map","opt","key"],"mappings":";;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,QAAzB;AAEA,OAAOC,MAAP,MAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAyB,2BAAzB;AACA,OAAOC,KAAP,MAAyB,2BAAzB,C,CAEA;;AACA,OAAO,MAAMC,OAAO,GAAG,UAAgC;AAAA,MAA/B;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAA+B;AAAA,MAAZC,KAAY;;AACrD,QAAM,CAACC,KAAD,EAAQC,IAAR,IAAgBT,QAAQ,CAACO,KAAD,CAA9B;AACAC,EAAAA,KAAK,CAACE,KAAN,GAAcF,KAAK,CAACE,KAAN,IAAe,EAA7B;AAEA,SACE,4BACIH,KAAK,CAACI,IAAN,IAAc,QAAd,GAAyB,EAAzB,GAA8B,MAAC,KAAD;AAAO,IAAA,OAAO,EAAEJ,KAAK,CAACK,EAAN,IAAYL,KAAK,CAACM;AAAlC,KAAyCP,KAAzC,CADlC,EAEE,MAAC,KAAD;AAAO,IAAA,KAAK;AAAGQ,MAAAA,KAAK,EAAE;AAAV,OAAsBT,KAAtB;AAAZ,KAA+CG,KAA/C,EAA0DD,KAA1D,EAFF,EAGGE,IAAI,CAACM,OAAL,IAAgBN,IAAI,CAACO,KAArB,GAA+B;AAAK,IAAA,SAAS,EAAC;AAAf,KAAoCP,IAAI,CAACO,KAAzC,CAA/B,GAA0F,IAH7F,CADF;AAOD,CAXM,C,CAaP;;AACA,OAAO,MAAMC,QAAQ,GAAG,WAAsC;AAAA,MAArC;AAAEZ,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBY,IAAAA;AAAhB,GAAqC;AAAA,MAAZX,KAAY;;AAC5D,QAAM,CAACC,KAAD,EAAQC,IAAR,IAAgBT,QAAQ,CAACO,KAAD,CAA9B;AACAC,EAAAA,KAAK,CAACE,KAAN,GAAcF,KAAK,CAACE,KAAN,IAAe,EAA7B;AAEA,MAAIS,IAAI,GAAGD,IAAI,IAAIA,IAAI,CAACE,MAAb,GAAuB,CAAC;AAACR,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,IAAI,EAAE,iBAAgBP,KAAM;AAAnC,GAAD,EAAuC,GAAGY,IAA1C,CAAvB,GAAyE,CAAC;AAACN,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,IAAI,EAAE,iBAAgBP,KAAM;AAAnC,GAAD,CAApF;AAEA,SACE,4BACE,MAAC,KAAD;AAAO,IAAA,OAAO,EAAEC,KAAK,CAACK,EAAN,IAAYL,KAAK,CAACM;AAAlC,KAAyCP,KAAzC,CADF,EAEE,MAAC,MAAD;AAAQ,IAAA,KAAK;AAAGQ,MAAAA,KAAK,EAAE;AAAV,OAAsBT,KAAtB;AAAb,KAA+CG,KAA/C,EAA0DD,KAA1D,GACGW,IAAI,IAAIA,IAAI,CAACE,MAAb,GACCD,IAAI,CAACE,GAAL,CACE,CAACC,GAAD,EAAMC,GAAN,KAAc,yBAAY;AAACA,IAAAA;AAAD,GAAZ;AAAmB,IAAA,KAAK,EAAED,GAAG,CAACV;AAA9B,MAAmCU,GAAG,CAACT,IAAvC,CADhB,CADD,GAKC;AAAQ,IAAA,QAAQ,MAAhB;AAAiB,IAAA,KAAK,EAAE;AAAxB,KAA6B,qBAAoBP,KAAM,EAAvD,CANJ,CAFF,EAWGG,IAAI,CAACM,OAAL,IAAgBN,IAAI,CAACO,KAArB,GAA+B;AAAK,IAAA,SAAS,EAAC;AAAf,KAAoCP,IAAI,CAACO,KAAzC,CAA/B,GAA0F,IAX7F,CADF;AAeD,CArBM","sourcesContent":["import { useField } from 'formik'\n\nimport Select       from '../Select/Select'\nimport Label        from '../layout/AuthModal/Label'\nimport Input        from '../layout/AuthModal/Input'\n\n// create formik input field\nexport const FkInput = ({ style, label, ...props }) => {\n  const [field, meta] = useField(props)\n  field.value = field.value || ''\n\n  return (\n    <>\n      { props.type == 'hidden' ? '' : <Label htmlFor={props.id || props.name}>{label}</Label> }\n      <Input style={{color: 'black', ...style}}  {...field} {...props} />\n      {meta.touched && meta.error ? ( <div className=\"invalid-feedback\">{ meta.error }</div> ) : null}\n    </>\n  )\n}\n\n// create formik select field\nexport const FkSelect = ({ style, label, list, ...props }) => {\n  const [field, meta] = useField(props)\n  field.value = field.value || ''\n\n  let opts = list && list.length ?  [{id:0, name:`Selecciona tu ${label}`},...list] : [{id:0, name:`Selecciona tu ${label}`}]\n\n  return (\n    <>\n      <Label htmlFor={props.id || props.name}>{label}</Label>\n      <Select style={{color: 'black', ...style}} {...field} {...props}>\n        {list && list.length ?\n          opts.map(\n            (opt, key) => <option {...{key}} value={opt.id}>{opt.name}</option>\n          )\n          :\n          <option disabled value={0}>{`Incapaz de cargar ${label}`}</option>\n        }\n      </Select>\n      {meta.touched && meta.error ? ( <div className=\"invalid-feedback\">{ meta.error }</div> ) : null}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}