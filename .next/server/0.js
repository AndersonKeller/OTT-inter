exports.ids = [0];
exports.modules = {

/***/ "./components/Player/ShakaPlayer.js":
/*!******************************************!*\
  !*** ./components/Player/ShakaPlayer.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! styled-jsx/style */ \"styled-jsx/style\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var shaka_player_dist_shaka_player_ui_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! shaka-player/dist/shaka-player.ui.js */ \"shaka-player/dist/shaka-player.ui.js\");\n/* harmony import */ var shaka_player_dist_shaka_player_ui_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(shaka_player_dist_shaka_player_ui_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _constants_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ~/constants/constants */ \"./constants/constants.js\");\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement;\n\n // no SSR support\n\n\n\nclass ShakaPlayer extends react__WEBPACK_IMPORTED_MODULE_1___default.a.PureComponent {\n  constructor(props) {\n    super(props);\n    this.autoPlay = this.props.autoPlay || true;\n    this.videoComponent = react__WEBPACK_IMPORTED_MODULE_1___default.a.createRef();\n    this.videoContainer = react__WEBPACK_IMPORTED_MODULE_1___default.a.createRef();\n    this.onErrorEvent = this.onErrorEvent.bind(this);\n    this.onError = this.onError.bind(this);\n    this.media = this.props.media;\n    this.poster = this.props.poster ? this.props.poster : null;\n    this.height = this.props.height ? this.props.height : 400;\n    this.width = this.props.width ? this.props.width : 600;\n  }\n\n  onErrorEvent(event) {\n    this.onError(event.detail);\n  }\n\n  onError(error) {\n    console.error('Error code', error.code, 'object', error);\n  }\n\n  componentDidMount() {\n    // Install built-in polyfills to patch browser incompatibilities.\n    shaka_player_dist_shaka_player_ui_js__WEBPACK_IMPORTED_MODULE_2___default.a.polyfill.installAll(); // Check to see if the browser supports the basic APIs Shaka needs.\n\n    if (shaka_player_dist_shaka_player_ui_js__WEBPACK_IMPORTED_MODULE_2___default.a.Player.isBrowserSupported()) {\n      // Everything looks good!\n      this.initPlayer();\n    } else {\n      // This browser does not have the minimum set of APIs we need.\n      console.error('Browser not supported!');\n    }\n  }\n\n  async initPlayer() {\n    // Create a Player instance.\n    const video = this.videoComponent.current;\n    const videoContainer = this.videoContainer.current;\n    var player = new shaka_player_dist_shaka_player_ui_js__WEBPACK_IMPORTED_MODULE_2___default.a.Player(video); // player language configurations\n\n    player.configure('preferredTextLanguage', 'es');\n    player.configure('preferredAudioLanguage', 'es');\n    const minutes = 10;\n    const bufferingGoal = 60 * minutes;\n    player.configure('streaming.bufferingGoal', bufferingGoal); //Setting up shaka player UI\n\n    const ui = new shaka_player_dist_shaka_player_ui_js__WEBPACK_IMPORTED_MODULE_2___default.a.ui.Overlay(player, videoContainer, video);\n    ui.getControls();\n    const uiConfig = {\n      addBigPlayButton: false,\n      controlPanelElements: ['play_pause', 'time_and_duration', 'spacer', 'mute', 'volume', 'fullscreen', 'overflow_menu'],\n      overflowMenuButtons: ['cast', 'quality', 'picture_in_picture']\n    };\n    ui.configure(uiConfig); // Listen for error events.\n\n    player.addEventListener('error', this.onErrorEvent); // Determine if it must load mpd or hls\n\n    const hls_type_id = 1;\n    const mpd_type_id = 2;\n    const hls_link = this.media ? this.media.movie_links.find(element => {\n      return element.movie_link_type_id === hls_type_id;\n    }) : null;\n    const mpd_link = this.media ? this.media.movie_links.find(element => {\n      return element.movie_link_type_id === mpd_type_id;\n    }) : null;\n    const support = await shaka_player_dist_shaka_player_ui_js__WEBPACK_IMPORTED_MODULE_2___default.a.Player.probeSupport();\n    const manifestUri = support.manifest.mpd && mpd_link ? mpd_link.url : hls_link ? hls_link.url : null;\n    /* esse funciona: */\n    // const manifestUri = 'https://s3-us-west-1.amazonaws.com/videos.in/dale/dash/la+copa+eterna.mpd'\n\n    /* esses non: */\n    // const manifestUri = 'https://story-video-out.s3-us-west-1.amazonaws.com/teste/DASHIndex.mpd'\n    // const manifestUri = 'https://story-video-out.s3-us-west-1.amazonaws.com/teste/HLSIndex.m3u8'\n\n    console.log('Suporta ' + (support.manifest.mpd ? 'mpd' : 'hls'), manifestUri); // Try to load a manifest.\n    // This is an asynchronous process.\n\n    player.load(manifestUri).then(function () {\n      // This runs if the asynchronous load is successful.\n      console.log('The video has now been loaded!');\n    }).catch(this.onError); // onError is executed if the asynchronous load fails.\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      ref: this.videoContainer,\n      className: \"jsx-2162939282\" + \" \" + \"video-container\"\n    }, __jsx(\"video\", {\n      autoPlay: this.autoPlay,\n      height: this.height,\n      muted: !_constants_constants__WEBPACK_IMPORTED_MODULE_3__[\"IS_PRODUCTION\"],\n      poster: this.poster,\n      ref: this.videoComponent,\n      style: {\n        outline: 0\n      },\n      width: this.width,\n      className: \"jsx-2162939282\" + \" \" + 'video-player'\n    }), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a, {\n      id: \"2162939282\"\n    }, \".video-container.jsx-2162939282 .shaka-bottom-controls{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}.video-container.jsx-2162939282 .shaka-bottom-controls .shaka-controls-button-panel{-webkit-order:2;-ms-flex-order:2;order:2;width:100%;}.video-container.jsx-2162939282 .shaka-bottom-controls .shaka-seek-bar-container{-webkit-order:1;-ms-flex-order:1;order:1;width:100%;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9yYWZhZWwvUHJvamVjdHMvc29tb3NnYWQvZGFsZS9jb21wb25lbnRzL1BsYXllci9TaGFrYVBsYXllci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFnSG9CLEFBRzBCLEFBSUwsQUFJQSx5Q0FIRyxBQUlBLFdBSGIsQUFJQSxzQkFUd0IsOEVBQ3hCIiwiZmlsZSI6Ii9Vc2Vycy9yYWZhZWwvUHJvamVjdHMvc29tb3NnYWQvZGFsZS9jb21wb25lbnRzL1BsYXllci9TaGFrYVBsYXllci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCBzaGFrYSBmcm9tICdzaGFrYS1wbGF5ZXIvZGlzdC9zaGFrYS1wbGF5ZXIudWkuanMnIC8vIG5vIFNTUiBzdXBwb3J0XG5pbXBvcnQgeyBJU19QUk9EVUNUSU9OIH0gZnJvbSAnfi9jb25zdGFudHMvY29uc3RhbnRzJ1xuXG5jbGFzcyBTaGFrYVBsYXllciBleHRlbmRzIFJlYWN0LlB1cmVDb21wb25lbnRcbntcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcylcbiAgICB0aGlzLmF1dG9QbGF5ID0gdGhpcy5wcm9wcy5hdXRvUGxheSB8fCB0cnVlXG4gICAgdGhpcy52aWRlb0NvbXBvbmVudCA9IFJlYWN0LmNyZWF0ZVJlZigpXG4gICAgdGhpcy52aWRlb0NvbnRhaW5lciA9IFJlYWN0LmNyZWF0ZVJlZigpXG4gICAgdGhpcy5vbkVycm9yRXZlbnQgPSB0aGlzLm9uRXJyb3JFdmVudC5iaW5kKHRoaXMpXG4gICAgdGhpcy5vbkVycm9yID0gdGhpcy5vbkVycm9yLmJpbmQodGhpcylcbiAgICB0aGlzLm1lZGlhID0gdGhpcy5wcm9wcy5tZWRpYVxuICAgIHRoaXMucG9zdGVyID0gdGhpcy5wcm9wcy5wb3N0ZXIgPyB0aGlzLnByb3BzLnBvc3RlciA6IG51bGxcbiAgICB0aGlzLmhlaWdodCA9IHRoaXMucHJvcHMuaGVpZ2h0ID8gdGhpcy5wcm9wcy5oZWlnaHQgOiA0MDBcbiAgICB0aGlzLndpZHRoID0gdGhpcy5wcm9wcy53aWR0aCA/IHRoaXMucHJvcHMud2lkdGggOiA2MDBcbiAgfVxuXG4gIG9uRXJyb3JFdmVudChldmVudCkge1xuICAgIHRoaXMub25FcnJvcihldmVudC5kZXRhaWwpXG4gIH1cblxuICBvbkVycm9yKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgY29kZScsIGVycm9yLmNvZGUsICdvYmplY3QnLCBlcnJvcilcbiAgfVxuXG4gIGNvbXBvbmVudERpZE1vdW50KCl7XG4gICAgLy8gSW5zdGFsbCBidWlsdC1pbiBwb2x5ZmlsbHMgdG8gcGF0Y2ggYnJvd3NlciBpbmNvbXBhdGliaWxpdGllcy5cbiAgICBzaGFrYS5wb2x5ZmlsbC5pbnN0YWxsQWxsKClcblxuICAgIC8vIENoZWNrIHRvIHNlZSBpZiB0aGUgYnJvd3NlciBzdXBwb3J0cyB0aGUgYmFzaWMgQVBJcyBTaGFrYSBuZWVkcy5cbiAgICBpZiAoc2hha2EuUGxheWVyLmlzQnJvd3NlclN1cHBvcnRlZCgpKSB7XG4gICAgICAvLyBFdmVyeXRoaW5nIGxvb2tzIGdvb2QhXG4gICAgICB0aGlzLmluaXRQbGF5ZXIoKVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBUaGlzIGJyb3dzZXIgZG9lcyBub3QgaGF2ZSB0aGUgbWluaW11bSBzZXQgb2YgQVBJcyB3ZSBuZWVkLlxuICAgICAgY29uc29sZS5lcnJvcignQnJvd3NlciBub3Qgc3VwcG9ydGVkIScpXG4gICAgfVxuICB9XG5cbiAgYXN5bmMgaW5pdFBsYXllcigpIHtcbiAgICAvLyBDcmVhdGUgYSBQbGF5ZXIgaW5zdGFuY2UuXG4gICAgY29uc3QgdmlkZW8gPSB0aGlzLnZpZGVvQ29tcG9uZW50LmN1cnJlbnRcbiAgICBjb25zdCB2aWRlb0NvbnRhaW5lciA9IHRoaXMudmlkZW9Db250YWluZXIuY3VycmVudFxuICAgIHZhciBwbGF5ZXIgPSBuZXcgc2hha2EuUGxheWVyKHZpZGVvKVxuXG4gICAgLy8gcGxheWVyIGxhbmd1YWdlIGNvbmZpZ3VyYXRpb25zXG4gICAgcGxheWVyLmNvbmZpZ3VyZSgncHJlZmVycmVkVGV4dExhbmd1YWdlJywgJ2VzJylcbiAgICBwbGF5ZXIuY29uZmlndXJlKCdwcmVmZXJyZWRBdWRpb0xhbmd1YWdlJywgJ2VzJylcbiAgICBjb25zdCBtaW51dGVzID0gMTBcbiAgICBjb25zdCBidWZmZXJpbmdHb2FsID0gNjAgKiBtaW51dGVzXG4gICAgcGxheWVyLmNvbmZpZ3VyZSgnc3RyZWFtaW5nLmJ1ZmZlcmluZ0dvYWwnLCBidWZmZXJpbmdHb2FsKVxuXG5cdFx0Ly9TZXR0aW5nIHVwIHNoYWthIHBsYXllciBVSVxuICAgIGNvbnN0IHVpID0gbmV3IHNoYWthLnVpLk92ZXJsYXkocGxheWVyLCB2aWRlb0NvbnRhaW5lciwgdmlkZW8pXG4gICAgdWkuZ2V0Q29udHJvbHMoKVxuICAgIGNvbnN0IHVpQ29uZmlnID0ge1xuICAgICAgYWRkQmlnUGxheUJ1dHRvbjogZmFsc2UsXG4gICAgICBjb250cm9sUGFuZWxFbGVtZW50czogW1xuICAgICAgICAncGxheV9wYXVzZScsICd0aW1lX2FuZF9kdXJhdGlvbicsICdzcGFjZXInLCAnbXV0ZScsICd2b2x1bWUnLCAnZnVsbHNjcmVlbicsICdvdmVyZmxvd19tZW51JyxcbiAgICAgIF0sXG4gICAgICBvdmVyZmxvd01lbnVCdXR0b25zOiBbJ2Nhc3QnLCAncXVhbGl0eScsICdwaWN0dXJlX2luX3BpY3R1cmUnXSxcbiAgICB9XG4gICAgdWkuY29uZmlndXJlKHVpQ29uZmlnKVxuXG4gICAgLy8gTGlzdGVuIGZvciBlcnJvciBldmVudHMuXG4gICAgcGxheWVyLmFkZEV2ZW50TGlzdGVuZXIoJ2Vycm9yJywgdGhpcy5vbkVycm9yRXZlbnQpXG5cbiAgICAvLyBEZXRlcm1pbmUgaWYgaXQgbXVzdCBsb2FkIG1wZCBvciBobHNcbiAgICBjb25zdCBobHNfdHlwZV9pZCA9IDFcbiAgICBjb25zdCBtcGRfdHlwZV9pZCA9IDJcbiAgICBjb25zdCBobHNfbGluayA9IHRoaXMubWVkaWEgPyB0aGlzLm1lZGlhLm1vdmllX2xpbmtzLmZpbmQoZWxlbWVudCA9PiB7XG4gICAgICByZXR1cm4gZWxlbWVudC5tb3ZpZV9saW5rX3R5cGVfaWQgPT09IGhsc190eXBlX2lkXG4gICAgfSkgOiBudWxsXG4gICAgY29uc3QgbXBkX2xpbmsgPSB0aGlzLm1lZGlhID8gdGhpcy5tZWRpYS5tb3ZpZV9saW5rcy5maW5kKGVsZW1lbnQgPT4ge1xuICAgICAgcmV0dXJuIGVsZW1lbnQubW92aWVfbGlua190eXBlX2lkID09PSBtcGRfdHlwZV9pZFxuICAgIH0pIDogbnVsbFxuICAgIGNvbnN0IHN1cHBvcnQgPSBhd2FpdCBzaGFrYS5QbGF5ZXIucHJvYmVTdXBwb3J0KCk7XG4gICAgY29uc3QgbWFuaWZlc3RVcmkgPSBzdXBwb3J0Lm1hbmlmZXN0Lm1wZCAmJiBtcGRfbGluayA/IG1wZF9saW5rLnVybCA6XG4gICAgICBobHNfbGluayA/IGhsc19saW5rLnVybCA6IG51bGxcblxuICAgIC8qIGVzc2UgZnVuY2lvbmE6ICovXG4gICAgLy8gY29uc3QgbWFuaWZlc3RVcmkgPSAnaHR0cHM6Ly9zMy11cy13ZXN0LTEuYW1hem9uYXdzLmNvbS92aWRlb3MuaW4vZGFsZS9kYXNoL2xhK2NvcGErZXRlcm5hLm1wZCdcblxuICAgIC8qIGVzc2VzIG5vbjogKi9cbiAgICAvLyBjb25zdCBtYW5pZmVzdFVyaSA9ICdodHRwczovL3N0b3J5LXZpZGVvLW91dC5zMy11cy13ZXN0LTEuYW1hem9uYXdzLmNvbS90ZXN0ZS9EQVNISW5kZXgubXBkJ1xuICAgIC8vIGNvbnN0IG1hbmlmZXN0VXJpID0gJ2h0dHBzOi8vc3RvcnktdmlkZW8tb3V0LnMzLXVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3Rlc3RlL0hMU0luZGV4Lm0zdTgnXG5cbiAgICBjb25zb2xlLmxvZygnU3Vwb3J0YSAnICsgKHN1cHBvcnQubWFuaWZlc3QubXBkID8gJ21wZCcgOiAnaGxzJyksIG1hbmlmZXN0VXJpKVxuXG4gICAgLy8gVHJ5IHRvIGxvYWQgYSBtYW5pZmVzdC5cbiAgICAvLyBUaGlzIGlzIGFuIGFzeW5jaHJvbm91cyBwcm9jZXNzLlxuICAgIHBsYXllci5sb2FkKG1hbmlmZXN0VXJpKS50aGVuKGZ1bmN0aW9uKCkge1xuICAgICAgLy8gVGhpcyBydW5zIGlmIHRoZSBhc3luY2hyb25vdXMgbG9hZCBpcyBzdWNjZXNzZnVsLlxuICAgICAgY29uc29sZS5sb2coJ1RoZSB2aWRlbyBoYXMgbm93IGJlZW4gbG9hZGVkIScpXG4gICAgfSkuY2F0Y2godGhpcy5vbkVycm9yKSAgLy8gb25FcnJvciBpcyBleGVjdXRlZCBpZiB0aGUgYXN5bmNocm9ub3VzIGxvYWQgZmFpbHMuXG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwidmlkZW8tY29udGFpbmVyXCIgcmVmPXt0aGlzLnZpZGVvQ29udGFpbmVyfT5cbiAgICAgICAgPHZpZGVvXG4gICAgICAgICAgYXV0b1BsYXk9e3RoaXMuYXV0b1BsYXl9XG4gICAgICAgICAgY2xhc3NOYW1lPSd2aWRlby1wbGF5ZXInXG4gICAgICAgICAgaGVpZ2h0PXt0aGlzLmhlaWdodH1cbiAgICAgICAgICBtdXRlZD17IUlTX1BST0RVQ1RJT059XG4gICAgICAgICAgcG9zdGVyPXt0aGlzLnBvc3Rlcn1cbiAgICAgICAgICByZWY9e3RoaXMudmlkZW9Db21wb25lbnR9XG4gICAgICAgICAgc3R5bGU9e3sgb3V0bGluZTogMCB9fVxuICAgICAgICAgIHdpZHRoPXt0aGlzLndpZHRofVxuICAgICAgICAvPlxuICAgICAgICA8c3R5bGUganN4PntgXG4gICAgICAgICAgLnZpZGVvLWNvbnRhaW5lciA6Z2xvYmFsKC5zaGFrYS1ib3R0b20tY29udHJvbHMpIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIH1cbiAgICAgICAgICAudmlkZW8tY29udGFpbmVyIDpnbG9iYWwoLnNoYWthLWJvdHRvbS1jb250cm9scyAuc2hha2EtY29udHJvbHMtYnV0dG9uLXBhbmVsKSB7XG4gICAgICAgICAgICBvcmRlcjogMjtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgIH1cbiAgICAgICAgICAudmlkZW8tY29udGFpbmVyIDpnbG9iYWwoLnNoYWthLWJvdHRvbS1jb250cm9scyAuc2hha2Etc2Vlay1iYXItY29udGFpbmVyKSB7XG4gICAgICAgICAgICBvcmRlcjogMTtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgIH1cbiAgICAgICAgYH08L3N0eWxlPlxuICAgICAgPC9kaXY+XG4gICAgKVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFNoYWthUGxheWVyXG4iXX0= */\\n/*@ sourceURL=/Users/rafael/Projects/somosgad/dale/components/Player/ShakaPlayer.js */\"));\n  }\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (ShakaPlayer);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/Player/ShakaPlayer.js\n");

/***/ })

};;