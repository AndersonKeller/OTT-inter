{"version":3,"sources":["webpack:///./components/Player/ShakaPlayer.js"],"names":["ShakaPlayer","React","PureComponent","constructor","props","autoPlay","videoComponent","createRef","videoContainer","onErrorEvent","bind","onError","media","poster","height","width","event","detail","error","console","code","componentDidMount","shaka","polyfill","installAll","Player","isBrowserSupported","initPlayer","video","current","player","configure","minutes","bufferingGoal","ui","Overlay","getControls","uiConfig","addBigPlayButton","controlPanelElements","overflowMenuButtons","addEventListener","hls_type_id","mpd_type_id","hls_link","movie_links","find","element","movie_link_type_id","mpd_link","support","probeSupport","manifestUri","manifest","mpd","url","log","load","then","catch","render","IS_PRODUCTION","outline"],"mappings":"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","file":"47.2c098eb91ec8d291ae77.js","sourcesContent":["import React from 'react'\nimport shaka from 'shaka-player/dist/shaka-player.ui.js' // no SSR support\nimport { IS_PRODUCTION } from '~/constants/constants'\n\nclass ShakaPlayer extends React.PureComponent\n{\n  constructor(props) {\n    super(props)\n    this.autoPlay = this.props.autoPlay || true\n    this.videoComponent = React.createRef()\n    this.videoContainer = React.createRef()\n    this.onErrorEvent = this.onErrorEvent.bind(this)\n    this.onError = this.onError.bind(this)\n    this.media = this.props.media\n    this.poster = this.props.poster ? this.props.poster : null\n    this.height = this.props.height ? this.props.height : 400\n    this.width = this.props.width ? this.props.width : 600\n  }\n\n  onErrorEvent(event) {\n    this.onError(event.detail)\n  }\n\n  onError(error) {\n    console.error('Error code', error.code, 'object', error)\n  }\n\n  componentDidMount(){\n    // Install built-in polyfills to patch browser incompatibilities.\n    shaka.polyfill.installAll()\n\n    // Check to see if the browser supports the basic APIs Shaka needs.\n    if (shaka.Player.isBrowserSupported()) {\n      // Everything looks good!\n      this.initPlayer()\n    } else {\n      // This browser does not have the minimum set of APIs we need.\n      console.error('Browser not supported!')\n    }\n  }\n\n  async initPlayer() {\n    // Create a Player instance.\n    const video = this.videoComponent.current\n    const videoContainer = this.videoContainer.current\n    var player = new shaka.Player(video)\n\n    // player language configurations\n    player.configure('preferredTextLanguage', 'es')\n    player.configure('preferredAudioLanguage', 'es')\n    const minutes = 10\n    const bufferingGoal = 60 * minutes\n    player.configure('streaming.bufferingGoal', bufferingGoal)\n\n\t\t//Setting up shaka player UI\n    const ui = new shaka.ui.Overlay(player, videoContainer, video)\n    ui.getControls()\n    const uiConfig = {\n      addBigPlayButton: false,\n      controlPanelElements: [\n        'play_pause', 'time_and_duration', 'spacer', 'mute', 'volume', 'fullscreen', 'overflow_menu',\n      ],\n      overflowMenuButtons: ['cast', 'quality', 'picture_in_picture'],\n    }\n    ui.configure(uiConfig)\n\n    // Listen for error events.\n    player.addEventListener('error', this.onErrorEvent)\n\n    // Determine if it must load mpd or hls\n    const hls_type_id = 1\n    const mpd_type_id = 2\n    const hls_link = this.media ? this.media.movie_links.find(element => {\n      return element.movie_link_type_id === hls_type_id\n    }) : null\n    const mpd_link = this.media ? this.media.movie_links.find(element => {\n      return element.movie_link_type_id === mpd_type_id\n    }) : null\n    const support = await shaka.Player.probeSupport();\n    const manifestUri = support.manifest.mpd && mpd_link ? mpd_link.url :\n      hls_link ? hls_link.url : null\n\n    /* esse funciona: */\n    // const manifestUri = 'https://s3-us-west-1.amazonaws.com/videos.in/dale/dash/la+copa+eterna.mpd'\n\n    /* esses non: */\n    // const manifestUri = 'https://story-video-out.s3-us-west-1.amazonaws.com/teste/DASHIndex.mpd'\n    // const manifestUri = 'https://story-video-out.s3-us-west-1.amazonaws.com/teste/HLSIndex.m3u8'\n\n    console.log('Suporta ' + (support.manifest.mpd ? 'mpd' : 'hls'), manifestUri)\n\n    // Try to load a manifest.\n    // This is an asynchronous process.\n    player.load(manifestUri).then(function() {\n      // This runs if the asynchronous load is successful.\n      console.log('The video has now been loaded!')\n    }).catch(this.onError)  // onError is executed if the asynchronous load fails.\n  }\n\n  render() {\n    return (\n      <div className=\"video-container\" ref={this.videoContainer}>\n        <video\n          autoPlay={this.autoPlay}\n          className='video-player'\n          height={this.height}\n          muted={!IS_PRODUCTION}\n          poster={this.poster}\n          ref={this.videoComponent}\n          style={{ outline: 0 }}\n          width={this.width}\n        />\n        <style jsx>{`\n          .video-container :global(.shaka-bottom-controls) {\n            display: flex;\n            flex-direction: column;\n          }\n          .video-container :global(.shaka-bottom-controls .shaka-controls-button-panel) {\n            order: 2;\n            width: 100%;\n          }\n          .video-container :global(.shaka-bottom-controls .shaka-seek-bar-container) {\n            order: 1;\n            width: 100%;\n          }\n        `}</style>\n      </div>\n    )\n  }\n}\n\nexport default ShakaPlayer\n"],"sourceRoot":""}